{"version":3,"sources":["../../js/src/PluginManager.js","../../js/src/ToolsJs.js","../../js/src/ToolsDom.js","../../js/src/ToolsStyling.js","../../js/src/PickDomFactory.js","../../js/src/ChoiceDomFactory.js","../../js/src/StaticDomFactory.js","../../js/src/PicksDom.js","../../js/src/FilterDom.js","../../js/src/ChoicesDomFactory.js","../../js/src/PopupAspect.js","../../js/src/ComponentPropertiesAspect.js","../../js/src/OptionsAspect.js","../../js/src/ChoicesEnumerableAspect.js","../../js/src/FilterManagerAspect.js","../../js/src/BuildChoiceAspect.js","../../js/src/FillChoicesAspect.js","../../js/src/UpdateDataAspect.js","../../js/src/CreateWrapAspect.js","../../js/src/NavigateAspect.js","../../js/src/Wraps.js","../../js/src/MultiSelectInlineLayout.js","../../js/src/AppearanceAspect.js","../../js/src/PickButtonAspect.js","../../js/src/BuildPickAspect.js","../../js/src/InputAspect.js","../../js/src/ResetFilterListAspect.js","../../js/src/CountableChoicesListInsertAspect.js","../../js/src/BsMultiSelect.js","../../js/src/plugins/Bs5Plugin.js","../../js/src/plugins/LabelPlugin.js","../../js/src/plugins/RtlPlugin.js","../../js/src/plugins/FormResetPlugin.js","../../js/src/ValidityApi.js","../../js/src/plugins/ValidationApiPlugin.js","../../js/src/plugins/BsAppearancePlugin.js","../../js/src/plugins/HiddenOptionPlugin.js","../../js/src/plugins/CssPatchPlugin.js","../../js/src/plugins/PlaceholderPlugin.js","../../js/src/plugins/JQueryMethodsPlugin.js","../../js/src/plugins/OptionsApiPlugin.js","../../js/src/plugins/SelectElementPlugin.js","../../js/src/plugins/SelectedOptionPlugin.js","../../js/src/plugins/DisabledOptionPlugin.js","../../js/src/plugins/FormRestoreOnBackwardPlugin.js","../../js/src/plugins/PicksApiPlugin.js","../../js/src/BsMultiSelect.esm.js"],"names":["$","PluginManager","instances","plugins","pluginName","createPlugin","firstChar","length","firstCharLower","pluginData","Error","prototypableName","slice","buildApi","api","noConflictPrototypableForInstance","fn","i","dataKey","createInstance","options","e","$e","instance","dispose","disposes","Function","removeData","data","this","each","isMethodName","test","plugDefaultConfig","methodName","constructors","lMethodName","charAt","plugMergeSettings","configuration","defaults","result","output","push","value","String","get","extendIfUndefined","property","source","destination","undefined","noConflict","noConflictPrototypable","prototypable","prototypableForInstance","sources","isBoolean","isString","goOn","forEachRecursion","indexRecursion","index","tail","count","v","arguments","Array","_len","_key","next","forEach","s","_property","_v","hasOwnProperty","prev","node","f","add","remove","getTail","setPrev","setNext","getCount","head","isEmpty","reset","getPrev","getNext","ArrayFacade","list","key","getHead","start","predicate","splice","composeSync","c","functions","forLoop","defCall","tmp","ObservableValue","_len2","_key2","setValue","newValue","detachAll","_len3","_key3","ObservableLambda","_i","_functions","getValue","List","attach","element","func","closestByTagName","call","closestByClassName","closest","LabelPlugin","getDataGuardedWithPrefix","tmp1","getAttribute","containerClass","label","labelPluginData","getLabelElementAspect","tmp2","selectElement","containerElement","parentNode","filterInputElement","filterDom","siblingsAsArray","id","name","toLowerCase","children","labelElement","backupedForAttribute","newId","createInputId","setAttribute","getIsRtl","EventBinder","tagName","bind","eventName","handler","addEventListener","removeEventListener","className","AttributeBackup","set","closestByAttribute","attributeName","attribute","currentAtribute","otherNode","contains","prefix","restore","Element","flag","backupStyling","classes","l","styles","isRtl","removeStyling","styling","classList","style","toggleStyling","isOn","addStyling","removeAttribute","extendClasses","out","param","actionStr","popupAspect","staticDom","forceRtlOnContainer","initialElement","attributeBackup","dirAttributeValue","actionObj","isRemoveEmptyClasses","success","popperConfiguration","placement","FormResetPlugin","environment","Styling","form","eventBuilder","window","setTimeout","updateData","valueMissing","customError","freeze","ValidityApi","visibleElement","isValueMissingObservable","valueMissingMessage","onValid","trigger","customValidationMessage","validationMessage","validity","shallowClearClone","setMessage","params","createValidity","valid","extendInt","checkValidity","willValidate","setCustomValidity","message","reportValidity","defValueMissingMessage","triggerAspect","onChangeAspect","stylings1","optionsAspect","stylings2","selectElementPluginData","updateDataAspect","required","extendCss","getIsValueMissing","optionsArray","getOptions","create","pickElement","querySelector","pickButtonElement","onChange","pickDom","pickContentElement","pickDomManager","isValid","init","updateDisabled","updateRemoveDisabled","eventBinder","choiceElement","choiceLabelElement","choiceContentElement","choiceDom","choiceSelectedToggle","choiceDisabledToggle","actionArr","updateSelected","extend","StaticDomFactory","choicesDomFactory","createElementAspect","choicesDom","createStaticDom","showError","picksElement","findDirectChildByTagName","a","createStyling","disposablePicksElement","staticManager","appendToContainer","removableContainerClass","p","o","PicksDom","pickFilterElement","concat","pickFilter","disableToggleStyling","isFocusIn","detach","param1","param2","toggleFocusStyling","focusToggleStyling","getIsFocusIn","setIsFocusIn","newIsFocusIn","BsAppearancePlugin","validationApiPluginData","appearanceAspect","componentPropertiesAspect","getValidity","useCssPatch","composeGetSize","getDefaultLabel","origGetLabelElementAspect","setFocus","onInput","onFilterInputInput","onFocusIn","onFocusOut","getSize","onKeyUp","onFilterInputKeyUp","picks_lg","css","picks_sm","picks_def","ChoicesDomFactory","choicesElement","choices","createChoiceElement","setVisible","picksDom","beforeElement","removeChild","preventOverflow","enabled","hide","validationApiObservable","wasUpdatedObservable","getManualValidationObservable","_getMessagesElements","getMessagesElements","validMessages","invalidMessages","createPopper","popper","validationObservable","display","visible","updateAppearance","updateSize","updatePopupLocation","updateValidity","updateWasValidated","map","ComponentPropertiesAspect","getDisabled","OptionsAspect","getText","option","size","countableChoicesList","wrap","updateSizeJs","picksLgStyling","picksSmStyling","picksDefStyling","navigate","updateSizeForAdapter","updateSizeJsForAdapter","filterPredicate","siblings","searchText","filter","getNavigateManager","FilterManagerAspect","emptyNavigateManager","showEmptyFilter","choicesEnumerableAspect","HiddenOptionPlugin","setFilter","createWrapAspect","filterText","isChoiceSelectableAspect","filteredChoicesList","wrapsCollection","buildChoiceAspect","buildAndAttachChoiceAspect","countableChoicesListInsertAspect","countableChoicesListInsert","isOptionHidden","choiceNext","BuildAndAttachChoiceAspect","choiceElementAttach","buildAndAttachChoice","getNextElement","buildHiddenChoice","BuildChoiceAspect","buildChoice","origIsSelectable","isSelectable","choice","getIsOptionHidden","isFilteredIn","createWrap","setHoverIn","choiceDomManagerHandlers","updateHoverIn","getNextNonHidden","isChoiceElementAttached","FillChoicesAspect","updateChoiceHidden","newIsOptionHidden","domContentLoadedHandler","document","nextChoice","wraps","PlaceholderPlugin","picksList","ChoiceClickAspect","optionToggleAspect","choiceClick","toggle","resetFilterListAspect","filterManagerAspect","placeholder","pickHandlers","createPickHandlersAspect","addPickAspect","emptyToggleStyling","filterInput_empty","AddPickAspect","isVisible","addPick","producePick","fullMatch","setEmptyInputWidth","showPlacehodler","pick","ProducePickAspect","updateEmptyInputWidth","origDisable","fixSelectedFalse","disable","isComponentDisabled","RemovePickAspect","removeFromPicksList","processEmptyInput","setSelectedFalse","updatePlacehodlerVisibility","removeAndDispose","returnValue","JQueryMethodsPlugin","createPickHandlers","removeOnButton","producePickAspect","getFilterInput","CreateChoiceBaseAspect","picksCount","isHoverIn","itemPrev","itemNext","createChoiceBaseAspect","resetLayoutAspect","CreateWrapAspect","createChoiceBase","insert","_nextChoice","hoveredChoice","HoveredChoiceAspect","resetLayout","hoveredChoiceAspect","NavigateAspect","FormRestoreOnBackwardPlugin","loadAspect","listFacade_reset","updateOptionsSelected","origLoad","load","readyState","listFacade_remove","setSelected","SelectElementPlugin","eventLoopFlag","EventLoopFlag","skipFocusout","aspects","getSkipFocusout","removePickAspect","resetSkipFocusout","setSkipFocusout","fullMatchAspect","skipoutMousedown","setIsOptionSelected","event","containsAndSelf","getIsOptionSelected","setChoicesVisible","hideChoices","documentMouseup","filterPredicateAspect","text","composeUpdateSelected","booleanValue","preventDefaultClickEvent","trySetWrapSelected","clickToShowChoices","setFocusIfNotTarget","origCreateWrap","processUncheck","handleOnRemoveButton","mouseCandidateEventBinder","mouseOverToHoveredAndReset","navigateAspect","origCreatePickHandlers","onChoiceElementMouseover","resetMouseCandidateChoice","isOptionSelected","resetHoveredChoice","origAddPick","overAndLeaveEventBinder","focusInAspect","setFocusIn","selectAll","visibleCount","panelIsVisble","showChoices","updateChoiceSelected","newIsSelected","filterInputValue","DisabledOptionPlugin","hoverIn","buildPickAspect","getIsOptionDisabled","hoveredWrap","getHoveredChoice","keyCode","orig–°reateWrap","origToggle","empty","isOptionDisabled","origFilterPredicate","keyDownArrow","origBuildChoice","origBuildPick","buildPick","setDisabledComponentAspect","hoveredToSelected","isChoicesVisible","choiceUpdateDisabledBackup","origSetDisabledComponent","componentDisabledEventBinder","PicksApiPlugin","unbindChoiceElement","adoptChoiceElement","SetDisabledComponentAspect","setDisabledComponent","_picksList$getTail","countPeaks","isEmptyPeaks","UpdateDisabledComponentAspect","updateDisabledComponent","newIsComponentDisabled","ValidationApiPlugin","disabled","CssPatchPlugin","settings","cssPatch","createCss","IsChoiceSelectableAspect","plugStaticDom","listFacade_add","disposeAspect","staticDomFactory","origCreateStaticDom","_origCreate","PickButtonAspect","getButtonHTML","BuildPickAspect","createPickElement","pickDomManagerHandlers","createElement","disposableContainerElement","processInput","backupDisplay","backupedRequired","fieldsetElement","fullMatchWrap","FocusInAspect","appendChild","insertBefore","nextSibling","MultiSelectInlineLayout","defaultPlugins","RtlPlugin","OptionsApiPlugin","SelectedOptionPlugin","Bs4Plugin","setDefaults","fillChoicesAspect","updateDisabledComponentAspect","CountableChoicesListInsertAspect","choice_hover","choice_selected","choice_disabled","picks","picks_focus","BsMultiSelect","pick_disabled","pickContent","pickContent_disabled","pickButton","choiceCheckBox_disabled","choiceContent","choiceCheckBox","choiceLabel","choiceLabel_disabled","optionPropertiesAspect","listStyleType","flexWrap","height","marginBottom","filterInput","border","boxShadow","warp","padding","margin","outline","backgroundColor","backgroundImage","picks_disabled","borderColor","picks_focus_valid","picks_focus_invalid","minHeight","paddingLeft","lineHeight","fontSize","float","pickButtonAspect","pickButtonHTML","pickDomFactory","choiceDomFactory","inputAspect","InputAspect","choiceClickAspect","AppearanceAspect","_instances$_i$buildAp","_instances$_i","_i2","_i3","_instances$_i3$dispos","_instances$_i2","resetFilterAspect","pluginManager","_constructors$i$plugD","_constructors$i","_constructors$i2","_constructors$i$plugM","multiSelectInlineLayout","PickDomFactory","buttonHTML","Bs5Plugin","textContent","disableToggle","inputGroupElement","unbind","query","parentElement","choiceCheckBoxElement","choiceHoverToggle","choiceCheckBoxDisabledToggle","choiceLabelDisabledToggle","checked","color","justifyContent","FilterDom","setEmpty","focus","target","_onFocusIn","_onFocusOut","onKeyDown","Object","PopupAspect","prototype","constructor","selected","_trigger","OnChangeAspect","validationApi","FilterPredicateAspect","indexOf","filteredNavigateManager","getFilter","origToggleFocusStyling","filteredPrev","filteredNext","getWasValidated","wasValidatedElement","_choicesDom$createCho","choiceDomManager","fillChoices","fillChoicesImpl","composeGetValidity","removePick","origBuildAndAttachChoice","CreatePickHandlersAspect","updateOptionsHidden","setHoveredChoice","configurationPluginData","down","clear","_push","setDisabled","_picksDom$createPickE","trim","getContainer","getChoices","_text","forceResetFilter","ResetFilterAspect","resetFilter","updateOptionRemoved","skipoutAndResetMousedown","_inputAspect$processI","setWidth","afterInput","stopPropagation","which","updateOptionSelected","onInit","_extendIfUndefined","Popper","OptionPropertiesAspect","DoublyLinkedList","updateOptionsDisabled","updateChoiceDisabled","updateOptionDisabled","newIsDisabled","w","_staticDomFactory$cre","_createStaticDom","updateHidden","ChoiceDomFactory","ResetLayoutAspect","LoadAspect","tools","component"],"mappings":"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","sourcesContent":["export function PluginManager(plugins, pluginData){\r\n    let instances = [];\r\n    if (plugins){\r\n        for(let i = 0; i<plugins.length; i++){\r\n            let instance = plugins[i](pluginData)\r\n            if (instance)\r\n                instances.push(instance);\r\n        }\r\n    }\r\n    \r\n    let disposes = [];\r\n    return {\r\n        buildApi(api){\r\n            for(let i = 0; i<instances.length; i++){\r\n                let dispose = instances[i].buildApi?.(api)\r\n                if (dispose)\r\n                    disposes.push(dispose);\r\n            }\r\n        },\r\n        dispose(){\r\n            for(let i = 0; i<disposes.length; i++){\r\n                disposes[i]()\r\n            }\r\n            disposes=null;\r\n            for(let i = 0; i<instances.length; i++){\r\n                instances[i].dispose?.()\r\n            }\r\n            instances=null;\r\n        }\r\n    }\r\n}\r\n\r\nexport function plugDefaultConfig(constructors, defaults){\r\n    for(let i = 0; i<constructors.length; i++){\r\n        constructors[i].plugDefaultConfig?.(defaults)\r\n    }\r\n}\r\n\r\nexport function plugMergeSettings(constructors, configuration, defaults, settings){\r\n    for(let i = 0; i<constructors.length; i++){\r\n        constructors[i].plugMergeSettings?.(configuration, defaults, settings)\r\n    }\r\n}\r\n\r\nexport function plugStaticDom(constructors, aspects){\r\n    for(let i = 0; i<constructors.length; i++){\r\n        constructors[i].plugStaticDom?.(aspects)\r\n    }\r\n}","export function isBoolean(value){\r\n    return value === true || value === false;\r\n}\r\n\r\nexport function isString(value){\r\n    return value instanceof String || typeof(value) === 'string';\r\n}\r\n\r\nexport function extendIfUndefined(destination, source) {\r\n    for (let property in source)\r\n        if (destination[property] === undefined)\r\n            destination[property] = source[property];\r\n}\r\n\r\nexport function shallowClearClone(source, ...sources) { // override previous, no null and undefined\r\n    var destination = {};\r\n    for (let property in source){ // TODO:  Object.assign (need polyfill for IE11)\r\n        let v = source[property];\r\n        if (!(v === null || v===undefined))\r\n            destination[property] = v;\r\n    }\r\n    if(sources)\r\n        sources.forEach(\r\n            s=>{\r\n                for(let property in s){\r\n                    let v = s[property];\r\n                    if (!(v === null || v===undefined))\r\n                        destination[property] = v;\r\n                    else\r\n                        if (destination.hasOwnProperty(property)){\r\n                            delete destination[property];\r\n                        }\r\n                }\r\n            }\r\n        )\r\n    return destination;\r\n}\r\n\r\nfunction forEachRecursion(f, e){\r\n    if (!e)\r\n        return;\r\n    let goOn = f(e.value); \r\n    if (!(goOn===false))\r\n        forEachRecursion(f, e.prev);\r\n}\r\n\r\nfunction indexRecursion(index, e){\r\n    if (!e.prev)\r\n        return index;\r\n    indexRecursion(++index, e.prev);\r\n}\r\n\r\nexport function List(){\r\n    var tail = null;\r\n    var count = 0;\r\n    return {\r\n        add(e){\r\n            if (tail){\r\n                tail.next = {value:e, prev:tail, next:null};\r\n                tail = tail.next;\r\n            } else \r\n                tail = {value:e, prev:null, next:null}\r\n            count++;\r\n            let node = tail;\r\n            function remove(){\r\n                if (node.prev){\r\n                    (node.prev).next = node.next;\r\n                }\r\n                if (node.next){\r\n                    (node.next).prev = node.prev;\r\n                }\r\n                if (tail == node){\r\n                    tail = node.prev;\r\n                }\r\n                count--;\r\n            }\r\n            function index(){\r\n                return indexRecursion(0, node);\r\n            }\r\n            return {remove, index};\r\n        },\r\n        forEach(f){\r\n            forEachRecursion(f, tail);\r\n        },\r\n        getTail(){ return (tail)?tail.value:null },\r\n        getCount(){ return count },\r\n        isEmpty(){ return count==0 },\r\n        reset(){ tail=null; count = 0 }\r\n    }\r\n}\r\n\r\nexport function DoublyLinkedList(getPrev, setPrev, getNext, setNext){\r\n    var head = null, tail = null;\r\n    var count = 0;\r\n    return {\r\n        add(e, next){\r\n            if (!tail){\r\n                head = tail = e;\r\n                setPrev(e, null);\r\n                setNext(e, null);\r\n            }\r\n            else {\r\n                if (!next){\r\n                    setPrev(e, tail);\r\n                    setNext(e, null);\r\n                    setNext(tail, e);\r\n                    tail = e;\r\n                } \r\n                else{\r\n                    if (next===head)\r\n                        head=e;\r\n                    let prev = getPrev(next);\r\n                    setNext(e, next);\r\n                    setPrev(next, e);\r\n                    if (prev){\r\n                        setPrev(e, prev);\r\n                        setNext(prev, e);\r\n                    } else {\r\n                        setPrev(e, null);\r\n                    }\r\n                } \r\n            }\r\n            count++;\r\n        },\r\n        remove(e){\r\n            let next = getNext(e);\r\n            let prev = getPrev(e);\r\n            if (prev) {\r\n                setNext(prev, next)\r\n            }\r\n            if (next) {\r\n                 setPrev(next, prev)\r\n            }\r\n            if (tail == e) {\r\n                tail = prev;\r\n            }\r\n            if (head == e) {\r\n                head = next; \r\n            }\r\n            count--;\r\n        }, \r\n        getHead(){ return head },\r\n        getTail(){ return tail },\r\n        getCount(){ return count },\r\n        isEmpty(){ return count==0 },\r\n        reset(){ \r\n            tail=head=null; \r\n            count = 0; }\r\n    }\r\n}\r\n\r\nexport function DoublyLinkedCollection(getPrev, setPrev, getNext, setNext){\r\n    var list = [];\r\n    var head = null, tail = null;\r\n    return {\r\n        push(e){\r\n            list.push(e);\r\n            if (!tail){\r\n                head = tail = e;\r\n                setPrev(e, null);\r\n                setNext(e, null);\r\n            }\r\n            else {\r\n                setPrev(e, tail);\r\n                setNext(e, null);\r\n                setNext(tail, e);\r\n                tail = e;\r\n            }\r\n        },\r\n        add(e, key){\r\n            list.splice(key, 0, e);\r\n            if (!tail){\r\n                head = tail = e;\r\n                setPrev(e, null);\r\n                setNext(e, null);\r\n            }\r\n            else {\r\n                let next = list[key];\r\n                if (!next) {\r\n                    setPrev(e, tail);\r\n                    setNext(e, null);\r\n                    setNext(tail, e);\r\n                    tail = e;\r\n                } \r\n                else {\r\n                    if (next===head)\r\n                        head=e;\r\n                    let prev = getPrev(next);\r\n                    setNext(e, next);\r\n                    setPrev(next, e);\r\n                    if (prev){\r\n                        setPrev(e, prev);\r\n                        setNext(prev, e);\r\n                    } else {\r\n                        setPrev(e, null);\r\n                    }\r\n                } \r\n            }\r\n        },\r\n        get: (key) => list[key],\r\n        remove(key){\r\n            var e = list[key];\r\n            list.splice(key, 1);\r\n            let next = getNext(e);\r\n            let prev = getPrev(e);\r\n            if (prev) {\r\n                setNext(prev, next)\r\n            }\r\n            if (next) {\r\n                 setPrev(next, prev)\r\n            }\r\n            if (tail == e) {\r\n                tail = prev;\r\n            }\r\n            if (head == e) {\r\n                head = next; \r\n            }\r\n            return e;\r\n        }, \r\n        forLoop(f){\r\n            for(let i=0; i<list.length; i++)\r\n            {\r\n                let e = list[i];\r\n                f(e);\r\n            }\r\n        },\r\n        getHead(){ return head },\r\n        getTail(){ return tail },\r\n        getCount(){ return list.length },\r\n        isEmpty(){ return list.length==0 },\r\n        reset(){ \r\n            list=[];\r\n            tail=head=null; \r\n            }\r\n    }\r\n}\r\n\r\nexport function ArrayFacade(){\r\n    var list = [];\r\n    return {\r\n        push(e){\r\n            list.push(e);\r\n        },\r\n        add(e, key){\r\n            list.splice(key, 0, e);\r\n        },\r\n        get: (key) => list[key],\r\n        getNext: (key, predicate) => {\r\n            let count = list.length;\r\n            let start = key+1;\r\n            if (key<count) {\r\n                if (!predicate)\r\n                    return list[start];\r\n                for (let i = start; i < count; i++) {\r\n                    let c = list[i];\r\n                    if (predicate(c))\r\n                        return c;\r\n                }\r\n            }\r\n        },\r\n        remove(key){\r\n            var e = list[key];\r\n            list.splice(key, 1);\r\n            return e;\r\n        }, \r\n        forLoop(f){\r\n            for(let i=0; i<list.length; i++)\r\n            {\r\n                let e = list[i];\r\n                f(e, i);\r\n            }\r\n        },\r\n        getHead(){ return list[0] },\r\n        getCount(){ return list.length },\r\n        isEmpty(){ return list.length==0 },\r\n        reset(){ list=[];}\r\n    }\r\n}\r\n\r\nexport function composeSync(...functions){\r\n    return () => functions.forEach(\r\n        (f) => {\r\n            if (f)\r\n                f();\r\n        }\r\n    )\r\n}\r\n\r\nexport function defCall(...functions){\r\n    for (let f of functions) \r\n        if (f) {\r\n            if (f instanceof Function){\r\n                let tmp =  f();\r\n                if (tmp)\r\n                    return tmp;\r\n            }\r\n            else\r\n                return f \r\n        }\r\n}\r\n\r\nexport function ObservableValue(value){\r\n    var list = List();\r\n    return {\r\n        getValue(){\r\n            return value;\r\n        },\r\n        setValue(newValue){\r\n            value = newValue;\r\n            list.forEach(f=>f(newValue));\r\n        },\r\n        attach(f){\r\n            return list.add(f)\r\n        },\r\n        detachAll(){\r\n            list.reset();\r\n        }\r\n    }\r\n}\r\n\r\nexport function ObservableLambda(func){\r\n    var list = List();\r\n    var value = func();\r\n    return {\r\n        getValue(){\r\n            return value;\r\n        },\r\n        call(){\r\n            value = func();\r\n            list.forEach(f=>f(value));\r\n        },\r\n        attach(f){\r\n            return list.add(f)\r\n        },\r\n        detachAll(){\r\n            list.reset();\r\n        }\r\n    }\r\n}","export function findDirectChildByTagName(element, tagName){\r\n    let value = null;\r\n    for (let i = 0; i<element.children.length; i++)\r\n    {\r\n        let tmp = element.children[i];\r\n        if (tmp.tagName==tagName)\r\n        {\r\n            value = tmp;\r\n            break;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n\r\nexport function closestByTagName(element, tagName){\r\n    return closest(element, e => e.tagName === tagName) // TODO support xhtml?  e.tagName.toUpperCase() ?\r\n}\r\n\r\nexport function closestByClassName(element, className){\r\n    return closest(element, e => e.classList.contains(className))\r\n}\r\n\r\nexport function closestByAttribute(element, attributeName, attribute){\r\n    return closest(element, e => e.getAttribute(attributeName)===attribute )\r\n}\r\n\r\nexport function containsAndSelf(node, otherNode ){\r\n    return node === otherNode || node.contains(otherNode);  \r\n}\r\n\r\nexport function getDataGuardedWithPrefix(element, prefix, name){\r\n    var tmp1 = element.getAttribute('data-' + prefix + '-' + name);\r\n    if (tmp1) {\r\n        return tmp1;\r\n    } else  {\r\n        var tmp2 = element.getAttribute('data-' + name);\r\n        if (tmp2)\r\n            return tmp2;\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction closest(element, predicate){\r\n    if (!element || !(element instanceof Element)) return null; // should be element, not document (TODO: check iframe)\r\n     \r\n    if (predicate(element)) return element;\r\n    return closest(element.parentNode, predicate);\r\n}\r\n\r\nexport function siblingsAsArray(element){\r\n    var value = []\r\n    if (element.parentNode){\r\n        var children = element.parentNode.children;\r\n        var l = element.parentNode.children.length;\r\n        if (children.length>1){\r\n            for (var i=0; i < l; ++i){\r\n                var e = children[i];\r\n                if (e!=element)\r\n                    value.push(e);\r\n                \r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\n\r\nexport function getIsRtl(element){\r\n    var isRtl = false;\r\n    var e = closestByAttribute(element,\"dir\",\"rtl\");\r\n    if (e)\r\n        isRtl = true;\r\n    return isRtl;\r\n}\r\n\r\nexport function EventBinder(){\r\n    var list = [];\r\n    return {\r\n        bind(element, eventName, handler) {\r\n            element.addEventListener(eventName, handler)\r\n            list.push( {element, eventName, handler} )\r\n        },\r\n        unbind() {\r\n            list.forEach( e=> {\r\n                let {element, eventName, handler}=e;\r\n                element.removeEventListener(eventName, handler)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function AttributeBackup(){\r\n    var list = [];\r\n    return {\r\n        set(element, attributeName, attribute){\r\n            var currentAtribute =  element.getAttribute(attributeName); \r\n            list.push( {element, currentAtribute, attribute} )\r\n            element.setAttribute(attributeName, attribute)\r\n        },\r\n        restore(){\r\n            list.forEach(e=>{\r\n                let {element, attributeName, attribute} = e;\r\n                if (attributeName)\r\n                    element.setAttribute(attributeName, attribute)\r\n                else\r\n                    element.removeAttribute(attributeName)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function EventLoopFlag(window) {\r\n    var flag = false;\r\n    return {\r\n        get(){\r\n            return flag;\r\n        },\r\n        set(){\r\n            flag = true;\r\n            window.setTimeout( \r\n                () => {  \r\n                    flag = false;\r\n                }, 0)\r\n        }\r\n    }\r\n}\r\n","import {shallowClearClone, isString} from './ToolsJs';\r\n\r\nexport function addStyling(element, styling){\r\n    var backupStyling = {classes:[], styles:{}}\r\n    if (styling) {\r\n        var {classes, styles} = styling;\r\n        classes.forEach(e => element.classList.add(e)) // todo use add(classes)\r\n        backupStyling.classes = classes.slice();\r\n        for (let property in styles){\r\n            backupStyling.styles[property] = element.style[property];\r\n            element.style[property] = styles[property]; // todo use Object.assign (need polyfill for IE11)\r\n        }\r\n    }\r\n    return backupStyling;\r\n}\r\n\r\nfunction removeStyling(element, styling){\r\n    if (styling) {\r\n        var {classes, styles} = styling;\r\n        classes.forEach(e=>element.classList.remove(e)) // todo use remove(classes)\r\n        for (let property in styles)\r\n            element.style[property]  = styles[property]; // todo use Object.assign (need polyfill for IE11)\r\n    }\r\n}\r\n\r\nexport function toggleStyling(element, styling){\r\n    var backupStyling = {classes:[], styles:{}};\r\n    var isOn=false;\r\n    return (value)=>{\r\n        if (value) {\r\n            if (isOn===false){\r\n                backupStyling = addStyling(element, styling)\r\n                isOn=true;\r\n            }\r\n        } else {\r\n            if (isOn===true){\r\n                removeStyling(element, backupStyling);\r\n                isOn=false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction extendClasses(out, param, actionStr, actionArr, isRemoveEmptyClasses){\r\n    if (isString(param)){\r\n        if (param === \"\"){\r\n            if (isRemoveEmptyClasses){\r\n                out.classes = [];\r\n            }\r\n        } else {\r\n            let c = param.split(' ');\r\n            out.classes = actionStr(c);\r\n        }\r\n        return true;\r\n    } else if (param instanceof Array){\r\n        if (param.length==0){\r\n            if (isRemoveEmptyClasses){\r\n                out.classes = [];\r\n            }\r\n        }\r\n        else{\r\n            out.classes = actionArr(param);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction extend(value, param, actionStr, actionArr, actionObj, isRemoveEmptyClasses){\r\n    var success = extendClasses(value, param, actionStr, actionArr, isRemoveEmptyClasses);\r\n    if (success === false){\r\n        if (param instanceof Object){\r\n            var {classes, styles} = param;\r\n            extendClasses(value, classes, actionStr, actionArr, isRemoveEmptyClasses);\r\n            \r\n            if (styles) {\r\n                value.styles = actionObj(styles);\r\n            } else if (!classes) {\r\n                value.styles = actionObj(param)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function Styling(param){\r\n    var value = {classes:[], styles:{}};\r\n    if (param){\r\n        extend(value, param, a=>a, a=>a.slice(), o=>shallowClearClone(o), true);\r\n    }\r\n    return Object.freeze(value);\r\n}\r\n\r\nfunction createStyling(isReplace, param, ...params){\r\n    var value = {classes:[], styles:{}};\r\n    if (param){\r\n        extend(value, param, a=>a, a=>a.slice(), o=>shallowClearClone(o),true);\r\n        if (params){\r\n            var {classes, styles} = value;\r\n            var extendInt = isReplace? (p)=>extend(value, p, s=>s, a=>a.slice(), o=> shallowClearClone(styles, o),true):\r\n                (p)=>extend(value, p, a=>classes.concat(a), a=>classes.concat(a), o=>shallowClearClone(styles, o),false)\r\n            params.forEach(p=> extendInt(p));\r\n        }\r\n    }\r\n    return Styling(value);\r\n}\r\n\r\nexport function createCss(stylings1, stylings2){\r\n    var destination = {};\r\n    for (let property in stylings1) {\r\n        let param1 = stylings1[property];\r\n\r\n        let param2 = stylings2?stylings2[property]:undefined;\r\n        if (param2===undefined)\r\n            destination[property] = Styling(param1)\r\n        else{\r\n            destination[property] = createStyling(true, param1, param2); \r\n        }\r\n    }\r\n    if (stylings2)\r\n        for (let property in stylings2) {\r\n            if (!stylings1[property])\r\n                destination[property] = Styling(stylings2[property])\r\n        }\r\n    return destination;\r\n}\r\n\r\nexport function extendCss(stylings1, stylings2){\r\n    for (let property in stylings2) {\r\n        let param2 = stylings2[property];\r\n        let param1 = stylings1[property];\r\n        if (param1 === undefined)\r\n            stylings1[property] = Styling(param2)\r\n        else{\r\n            stylings1[property] = createStyling(false, param1, param2); \r\n        }\r\n    }\r\n}","import  {EventBinder} from './ToolsDom';\r\nimport  {addStyling, toggleStyling} from './ToolsStyling';\r\n\r\nexport function PickDomFactory(css, componentPropertiesAspect, optionPropertiesAspect, pickButtonAspect){\r\n    return { \r\n        create(pickElement, wrap, remove){\r\n            let eventBinder = EventBinder();\r\n            let buttonHTML = pickButtonAspect.getButtonHTML();\r\n            pickElement.innerHTML = '<span></span>'+buttonHTML;\r\n            let pickContentElement = pickElement.querySelector('SPAN');\r\n            let pickButtonElement  = pickElement.querySelector('BUTTON');\r\n            eventBinder.bind(pickButtonElement, \"click\", remove);\r\n            // TODO: explicit conditional styling \r\n            return {\r\n                pickDom:{\r\n                    pickContentElement,\r\n                    pickButtonElement,\r\n                },\r\n                pickDomManager:{\r\n                    init(){\r\n                        addStyling(pickContentElement, css.pickContent);\r\n                        addStyling(pickButtonElement, css.pickButton);\r\n                        let disableToggle = toggleStyling(pickContentElement, css.pickContent_disabled);\r\n\r\n                        function updateData(){\r\n                            pickContentElement.textContent = optionPropertiesAspect.getText(wrap.option); \r\n                        }\r\n                        function updateDisabled(){\r\n                            disableToggle(wrap.isOptionDisabled)\r\n                        }\r\n                        function updateRemoveDisabled(){\r\n                            pickButtonElement.disabled = componentPropertiesAspect.getDisabled();\r\n                        }\r\n                        updateData();\r\n                        updateDisabled()\r\n                        updateRemoveDisabled();\r\n\r\n                        return {\r\n                            updateData,\r\n                            updateDisabled,\r\n                            updateRemoveDisabled,\r\n                        }\r\n                    },\r\n                    dispose(){\r\n                        eventBinder.unbind();\r\n                    },\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import  {EventBinder} from './ToolsDom';\r\nimport  {addStyling, toggleStyling} from './ToolsStyling';\r\n\r\nexport function ChoiceDomFactory(css, optionPropertiesAspect){\r\n    return {\r\n        create(choiceElement, wrap, toggle){\r\n            choiceElement.innerHTML = '<div><input formnovalidate type=\"checkbox\"><label></label></div>';\r\n            let choiceContentElement = choiceElement.querySelector('DIV');\r\n            let choiceCheckBoxElement = choiceContentElement.querySelector('INPUT');\r\n            let choiceLabelElement = choiceContentElement.querySelector('LABEL');\r\n            let eventBinder = EventBinder();\r\n            eventBinder.bind(choiceElement, \"click\",  toggle);\r\n            // TODO: explicit conditional styling \r\n            return {\r\n                choiceDom:{\r\n                    choiceContentElement,\r\n                    choiceCheckBoxElement,\r\n                    choiceLabelElement\r\n                },\r\n                choiceDomManager:{\r\n                    init(){\r\n                        addStyling(choiceContentElement, css.choiceContent); \r\n                        addStyling(choiceCheckBoxElement, css.choiceCheckBox); \r\n                        addStyling(choiceLabelElement, css.choiceLabel); \r\n            \r\n                        let choiceSelectedToggle = toggleStyling(choiceElement, css.choice_selected);\r\n                        let choiceDisabledToggle = toggleStyling(choiceElement, css.choice_disabled);\r\n                        let choiceHoverToggle = toggleStyling(choiceElement, css.choice_hover);\r\n             \r\n                        let choiceCheckBoxDisabledToggle = toggleStyling(choiceCheckBoxElement, css.choiceCheckBox_disabled)\r\n                        let choiceLabelDisabledToggle = toggleStyling(choiceLabelElement, css.choiceLabel_disabled)\r\n            \r\n                        function updateData() {\r\n                            choiceLabelElement.textContent = optionPropertiesAspect.getText(wrap.option);\r\n                        }\r\n                        function updateSelected(){ \r\n                            choiceSelectedToggle(wrap.isOptionSelected);\r\n                            choiceCheckBoxElement.checked = wrap.isOptionSelected;\r\n                        }\r\n                        function updateDisabled(){\r\n                            choiceDisabledToggle(wrap.isOptionDisabled)\r\n                            choiceCheckBoxDisabledToggle(wrap.isOptionDisabled)\r\n                            choiceLabelDisabledToggle(wrap.isOptionDisabled)\r\n            \r\n                            // do not desable checkBox if option is selected! there should be possibility to unselect \"disabled\"\r\n                            choiceCheckBoxElement.disabled = wrap.isOptionDisabled && !wrap.isOptionSelected;\r\n                        }\r\n                        updateData();\r\n                        updateSelected();\r\n                        updateDisabled();\r\n\r\n                        return{\r\n                            updateData,\r\n                            updateSelected, \r\n                            updateDisabled,\r\n                            updateHoverIn(){\r\n                                choiceHoverToggle(wrap.choice.isHoverIn);\r\n                            },\r\n                        }\r\n                    },\r\n                    dispose(){\r\n                        eventBinder.unbind();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import {findDirectChildByTagName, closestByClassName} from './ToolsDom';\r\n\r\nexport function CreateElementAspect(createElement){\r\n    return {\r\n        createElement\r\n    }\r\n}\r\n\r\nexport function StaticDomFactory(choicesDomFactory, createElementAspect){\r\n    return {\r\n        create(css){\r\n            let choicesDom = choicesDomFactory.create(css);\r\n            return {\r\n                choicesDom,\r\n                createStaticDom(element, containerClass){\r\n                    function showError(message){\r\n                        element.style.backgroundColor = 'red';\r\n                        element.style.color = 'white';\r\n                        throw new Error(message);\r\n                    }\r\n                   \r\n                    let containerElement, picksElement;\r\n                    let removableContainerClass= false;\r\n                    if (element.tagName == 'DIV') {\r\n                        containerElement = element;\r\n                        if (!containerElement.classList.contains(containerClass)){\r\n                            containerElement.classList.add(containerClass);\r\n                            removableContainerClass = true;\r\n                        }\r\n                        picksElement = findDirectChildByTagName(containerElement, 'UL');\r\n                    }\r\n                    else if (element.tagName == 'UL') {\r\n                        picksElement = element;\r\n                        containerElement = closestByClassName(element, containerClass);\r\n                        if (!containerElement){\r\n                            showError('BsMultiSelect: defined on UL but precedentant DIV for container not found; class='+containerClass);\r\n                        }\r\n                    } \r\n                    else if (element.tagName==\"INPUT\"){\r\n                        showError('BsMultiSelect: INPUT element is not supported');\r\n                    }\r\n                    let disposablePicksElement=false;\r\n                    if (!picksElement) {\r\n                        picksElement = createElementAspect.createElement('UL');\r\n                        disposablePicksElement = true; \r\n                    }\r\n                \r\n                    return {\r\n                        choicesDom,\r\n                        staticDom: {\r\n                            initialElement:element,\r\n                            containerElement,\r\n                            picksElement,\r\n                            disposablePicksElement\r\n                        },\r\n                        staticManager: {\r\n                            appendToContainer(){ \r\n                                containerElement.appendChild(choicesDom.choicesElement); \r\n                                if (disposablePicksElement)\r\n                                    containerElement.appendChild(picksElement)\r\n                            },\r\n                            dispose(){ \r\n                                containerElement.removeChild(choicesDom.choicesElement); \r\n                                if (removableContainerClass)\r\n                                    containerElement.classList.remove(containerClass);\r\n                                if (disposablePicksElement)\r\n                                    containerElement.removeChild(picksElement)\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {addStyling, toggleStyling} from './ToolsStyling';\r\n\r\nexport function PicksDom(picksElement, disposablePicksElement, createElementAspect, css){\r\n    var pickFilterElement  = createElementAspect.createElement('LI');\r\n    \r\n    addStyling(picksElement,       css.picks);\r\n    addStyling(pickFilterElement,  css.pickFilter);\r\n\r\n    let disableToggleStyling = toggleStyling(picksElement, css.picks_disabled);\r\n    let focusToggleStyling   = toggleStyling(picksElement, css.picks_focus);\r\n    let isFocusIn = false;\r\n\r\n    return {\r\n        picksElement,\r\n        pickFilterElement,\r\n\r\n        createPickElement(){\r\n            var pickElement = createElementAspect.createElement('LI');\r\n            addStyling(pickElement, css.pick);\r\n            return {\r\n                pickElement, \r\n                attach: (beforeElement) => picksElement.insertBefore(pickElement, beforeElement??pickFilterElement),\r\n                detach: () => picksElement.removeChild(pickElement)\r\n            };\r\n        },\r\n        disable(isComponentDisabled){\r\n            disableToggleStyling(isComponentDisabled)\r\n        },\r\n        toggleFocusStyling(){\r\n            focusToggleStyling(isFocusIn)\r\n        },\r\n        getIsFocusIn(){\r\n            return isFocusIn;\r\n        },\r\n        setIsFocusIn(newIsFocusIn){\r\n            isFocusIn = newIsFocusIn\r\n        }, \r\n        \r\n        dispose(){\r\n            if (!disposablePicksElement){\r\n                disableToggleStyling(false)\r\n                focusToggleStyling(false)\r\n                \r\n                if (pickFilterElement.parentNode)\r\n                    pickFilterElement.parentNode.removeChild(pickFilterElement)\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {addStyling} from './ToolsStyling';\r\nimport {EventBinder} from './ToolsDom';\r\n\r\nexport function FilterDom(disposablePicksElement, createElementAspect, css){\r\n    var filterInputElement = createElementAspect.createElement('INPUT');\r\n    addStyling(filterInputElement, css.filterInput);\r\n\r\n    filterInputElement.setAttribute(\"type\",\"search\");\r\n    filterInputElement.setAttribute(\"autocomplete\",\"off\");\r\n    var eventBinder = EventBinder();\r\n    return {\r\n        filterInputElement,\r\n        isEmpty: () => filterInputElement.value ? false:true,\r\n        setEmpty(){\r\n            filterInputElement.value ='';\r\n        },\r\n        getValue(){\r\n            return filterInputElement.value;\r\n        },\r\n        setFocus(){\r\n            filterInputElement.focus();\r\n        },\r\n        setWidth(text){\r\n            filterInputElement.style.width = text.length*1.3 + 2 + \"ch\"\r\n        },\r\n        // TODO: check why I need this comparision? \r\n        setFocusIfNotTarget(target){\r\n            if (target != filterInputElement)\r\n                filterInputElement.focus();\r\n        },\r\n        onInput(onFilterInputInput){\r\n            eventBinder.bind(filterInputElement,'input',    onFilterInputInput);\r\n        },\r\n        onFocusIn(onFocusIn){\r\n            eventBinder.bind(filterInputElement,'focusin',  onFocusIn);\r\n        },\r\n        onFocusOut(onFocusOut){\r\n            eventBinder.bind(filterInputElement,'focusout', onFocusOut);\r\n        },\r\n        onKeyDown(onfilterInputKeyDown){\r\n            eventBinder.bind(filterInputElement,'keydown',  onfilterInputKeyDown);    \r\n        },\r\n        onKeyUp(onFilterInputKeyUp){\r\n            eventBinder.bind(filterInputElement,'keyup',    onFilterInputKeyUp);\r\n        },\r\n        dispose(){\r\n            eventBinder.unbind();\r\n            if (!disposablePicksElement){\r\n                if (filterInputElement.parentNode)\r\n                    filterInputElement.parentNode.removeChild(filterInputElement)\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {addStyling} from './ToolsStyling';\r\n\r\nexport function ChoicesDomFactory(createElementAspect) {\r\n    return {\r\n        create(css){\r\n            var choicesElement = createElementAspect.createElement('UL'); \r\n            choicesElement.style.display = 'none';\r\n            addStyling(choicesElement, css.choices);\r\n            return {\r\n                choicesElement,\r\n                createChoiceElement() {\r\n                    var choiceElement = createElementAspect.createElement('LI');\r\n                    addStyling(choiceElement, css.choice);\r\n                    return {\r\n                        choiceElement, \r\n                        setVisible: (isVisible) => choiceElement.style.display = isVisible ? 'block': 'none',\r\n                        attach: (beforeElement) => choicesElement.insertBefore(choiceElement, beforeElement),\r\n                        detach: () => choicesElement.removeChild(choiceElement)\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","export function PopupAspect(choicesElement, filterInputElement, createPopper) { \r\n    let popper = null;\r\n    let popperConfiguration = {\r\n        placement: 'bottom-start',\r\n        modifiers: {\r\n            preventOverflow: {enabled:true},\r\n            hide: {enabled:false},\r\n            flip: {enabled:false}\r\n        }\r\n    };\r\n    return {\r\n        init(){ \r\n            if (!!createPopper.prototype && !!createPopper.prototype.constructor.name) { // it is a constructor\r\n                popper = new createPopper(filterInputElement, choicesElement, popperConfiguration); \r\n            }else{\r\n                popper = createPopper(filterInputElement, choicesElement, popperConfiguration); \r\n                //throw new Error(\"BsMultiSelect: popper paramater is not a constructor\")\r\n            }\r\n        },        \r\n        isChoicesVisible(){ return choicesElement.style.display != 'none'},\r\n        setChoicesVisible(visible){\r\n            choicesElement.style.display = visible ? 'block' : 'none';\r\n        },\r\n        popperConfiguration,\r\n        updatePopupLocation(){\r\n            popper.update();  // become async in poppoer 2; use forceUpdate if sync is needed? \r\n        },\r\n        dispose(){\r\n            popper.destroy();\r\n        }\r\n    }\r\n}","export function TriggerAspect(element, trigger) {\r\n    return {\r\n        trigger: (eventName) => trigger(element, eventName)\r\n    }\r\n}\r\n\r\nexport function OnChangeAspect(triggerAspect, name) {\r\n    return {\r\n        onChange(){\r\n            triggerAspect.trigger(name)\r\n        }\r\n    }\r\n}\r\n\r\nexport function ComponentPropertiesAspect(getDisabled) {\r\n    return {\r\n        getDisabled\r\n    }\r\n}\r\n\r\n","export function OptionsAspect(options){\r\n    return {\r\n        getOptions : () => options\r\n    }\r\n}\r\n\r\nexport function OptionPropertiesAspect(getText){\r\n    if (!getText){\r\n        getText = (option) => option.text;\r\n    }\r\n    return {\r\n        getText\r\n    }\r\n}\r\n","export function ChoicesEnumerableAspect(countableChoicesList, getNext){\r\n    return {\r\n        forEach(f){\r\n            let wrap =  countableChoicesList.getHead(); \r\n            while(wrap){\r\n                f(wrap);\r\n                wrap = getNext(wrap);\r\n            }\r\n        }\r\n    }\r\n}","export function NavigateManager(\r\n    list, getPrev, getNext\r\n){\r\n    return {\r\n        navigate(down, wrap /* hoveredChoice */){ \r\n            if (down) {\r\n                return wrap?getNext(wrap): list.getHead();\r\n            } else {\r\n                return wrap?getPrev(wrap): list.getTail();\r\n            }\r\n        },\r\n        getCount(){\r\n            return list.getCount()\r\n        },\r\n        getHead(){\r\n            return list.getHead()\r\n        }\r\n    }\r\n}\r\n\r\nexport function FilterPredicateAspect(){\r\n    return {\r\n        filterPredicate: (wrap, text) => \r\n            wrap.choice.searchText.indexOf(text) >= 0    \r\n    }\r\n}\r\n\r\nexport function FilterManagerAspect(\r\n    emptyNavigateManager,\r\n    filteredNavigateManager,\r\n    filteredChoicesList, \r\n    choicesEnumerableAspect,\r\n    filterPredicateAspect\r\n    ) {\r\n    let showEmptyFilter=true;\r\n    let filterText = \"\";\r\n    return {\r\n        getNavigateManager(){\r\n            return (showEmptyFilter)?emptyNavigateManager:filteredNavigateManager;\r\n        },\r\n        processEmptyInput(){ // redefined in PlaceholderPulgin\r\n            showEmptyFilter =true;\r\n            filterText =\"\";\r\n            choicesEnumerableAspect.forEach( (wrap)=>{\r\n                wrap.choice.setVisible(true);\r\n            });\r\n        },\r\n        getFilter(){\r\n            return filterText;\r\n        },\r\n        setFilter(text){ \r\n            showEmptyFilter =false;\r\n            filterText = text;\r\n            filteredChoicesList.reset();\r\n            choicesEnumerableAspect.forEach( (wrap)=>{\r\n                wrap.choice.filteredPrev = wrap.choice.filteredNext = null;\r\n                var v = filterPredicateAspect.filterPredicate(wrap, text)\r\n                if (v)\r\n                    filteredChoicesList.add(wrap);\r\n                wrap.choice.setVisible(v);\r\n            });\r\n        }\r\n    }\r\n}\r\n","export function BuildAndAttachChoiceAspect(\r\n    buildChoiceAspect,\r\n    ){\r\n    return {\r\n        buildAndAttachChoice(\r\n            wrap,\r\n            getNextElement \r\n            ){\r\n                buildChoiceAspect.buildChoice(wrap);\r\n                wrap.choice.choiceElementAttach(getNextElement?.());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BuildChoiceAspect(\r\n    choicesDom,\r\n    choiceDomFactory,\r\n    choiceClickAspect\r\n    ) {\r\n    return {\r\n        buildChoice(wrap) {\r\n            var {choiceElement, setVisible, attach, detach} = choicesDom.createChoiceElement();\r\n            wrap.choice.choiceElement = choiceElement;\r\n            wrap.choice.choiceElementAttach = attach;\r\n            wrap.choice.isChoiceElementAttached = true;\r\n            let {choiceDomManager} = choiceDomFactory.create(choiceElement, wrap,() => choiceClickAspect.choiceClick(wrap));\r\n            let choiceDomManagerHandlers = choiceDomManager.init();\r\n            wrap.choice.choiceDomManagerHandlers = choiceDomManagerHandlers;\r\n            \r\n            wrap.choice.remove = () => {\r\n                detach();\r\n            };\r\n            \r\n            wrap.choice.isFilteredIn = true;\r\n            \r\n            wrap.choice.setHoverIn = (v) => {\r\n                wrap.choice.isHoverIn =v ;\r\n                choiceDomManagerHandlers.updateHoverIn();\r\n            }\r\n        \r\n            wrap.choice.setVisible = (v) => {\r\n                wrap.choice.isFilteredIn = v;\r\n                setVisible(wrap.choice.isFilteredIn)\r\n            }\r\n            \r\n            wrap.choice.dispose = () => {\r\n                wrap.choice.choiceDomManagerHandlers = null;\r\n                choiceDomManager.dispose();\r\n    \r\n                wrap.choice.choiceElement = null;\r\n                wrap.choice.choiceElementAttach = null;\r\n                wrap.choice.isChoiceElementAttached = false;\r\n                wrap.choice.remove = null; \r\n        \r\n                // not real data manipulation but internal state\r\n                wrap.choice.setVisible = null; // TODO: refactor it there should be 3 types of not visibility: for hidden, for filtered out, for optgroup, for message item\r\n                wrap.choice.setHoverIn = null;\r\n        \r\n                wrap.choice.dispose = null;\r\n            }\r\n\r\n            wrap.dispose = () => {\r\n                wrap.choice.dispose();\r\n                wrap.dispose = null;\r\n            }\r\n        }\r\n    }\r\n}","\r\nexport function FillChoicesAspect(\r\n        document, createWrapAspect, createChoiceBaseAspect, optionsAspect, wraps, buildAndAttachChoiceAspect\r\n        ) { \r\n    return {\r\n        fillChoices(){\r\n            var fillChoicesImpl = () => {\r\n                let options = optionsAspect.getOptions();\r\n                for(let i = 0; i<options.length; i++) {\r\n                    let option = options[i];\r\n                    let wrap = createWrapAspect.createWrap(option);\r\n                    wrap.choice= createChoiceBaseAspect.createChoiceBase(option);\r\n                    wraps.push(wrap);\r\n                    buildAndAttachChoiceAspect.buildAndAttachChoice(wrap);\r\n                } \r\n            }\r\n    \r\n            // browsers can change select value as part of \"autocomplete\" (IE11) \r\n            // or \"show preserved on go back\" (Chrome) after page is loaded but before \"ready\" event;\r\n            // but they never \"restore\" selected-disabled options.\r\n            // TODO: make the FROM Validation for 'selected-disabled' easy.\r\n            if (document.readyState != 'loading') {\r\n                fillChoicesImpl();\r\n            } else {\r\n                var domContentLoadedHandler = function(){\r\n                    fillChoicesImpl();\r\n                    document.removeEventListener(\"DOMContentLoaded\", domContentLoadedHandler);\r\n                }\r\n                document.addEventListener('DOMContentLoaded', domContentLoadedHandler); // IE9+\r\n            }\r\n        }\r\n    }\r\n}\r\n","export function UpdateDataAspect(\r\n    choicesDom, wraps, picksList, fillChoicesAspect,resetLayoutAspect\r\n    ){\r\n    return {\r\n        updateData(){\r\n            // close drop down , remove filter\r\n            resetLayoutAspect.resetLayout();\r\n            choicesDom.choicesElement.innerHTML = \"\"; // TODO: there should better \"optimization\"\r\n            wraps.clear();\r\n            picksList.forEach(pick=>pick.dispose());\r\n            picksList.reset();\r\n            fillChoicesAspect.fillChoices();\r\n        }\r\n    }\r\n}\r\n","import {composeSync} from './ToolsJs';\r\n\r\nexport function IsChoiceSelectableAspect(){ // TODO rename to IsSelectableByUserAspect ?\r\n    return {\r\n        isSelectable: (wrap)=>true \r\n    }\r\n}\r\n\r\n// todo: remove?\r\nexport function ChoiceClickAspect(optionToggleAspect, filterDom){\r\n    return {\r\n        choiceClick: (wrap) => {\r\n            optionToggleAspect.toggle(wrap);\r\n            filterDom.setFocus();\r\n        }\r\n    }\r\n}\r\n\r\n// // fullMatchAspect trySetWrapSelected(fullMatchWrap.option, composeUpdateSelected(fullMatchWrap, true), true);\r\n\r\nexport function OptionToggleAspect(createPickHandlersAspect, addPickAspect /*, setOptionSelectedAspect*/){\r\n    return {\r\n        toggle: (wrap) => {\r\n            let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n            addPickAspect.addPick(wrap, pickHandlers);\r\n            return true; // TODO: process setOptionSelectedAspect\r\n        }\r\n    }\r\n}\r\n\r\nexport function AddPickAspect(){\r\n    return {\r\n        addPick(wrap, pickHandlers){\r\n            return pickHandlers.producePick();\r\n        }\r\n    }\r\n}\r\n\r\nexport function FullMatchAspect(createPickHandlersAspect, addPickAspect){\r\n    return {\r\n        fullMatch(wrap){\r\n            let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n            addPickAspect.addPick(wrap, pickHandlers);\r\n            return true; // TODO: process setOptionSelectedAspect\r\n        }\r\n    }\r\n}\r\n\r\nexport function RemovePickAspect(){\r\n    return {\r\n        removePick(wrap, pick){\r\n            pick.dispose(); // overrided in SelectedOptionPlugin with trySetWrapSelected(wrap, false);\r\n        }\r\n    }\r\n}\r\n\r\nexport function ProducePickAspect(picksList, removePickAspect, buildPickAspect){\r\n    return {\r\n        producePick(wrap, pickHandlers){\r\n            let pick = buildPickAspect.buildPick(wrap, (event)=>pickHandlers.removeOnButton(event));\r\n                \r\n            let fixSelectedFalse = () => removePickAspect.removePick(wrap, pick)\r\n\r\n            pickHandlers.removeOnButton = fixSelectedFalse;\r\n            \r\n            pick.pickElementAttach();\r\n            let {remove: removeFromPicksList} = picksList.add(pick);\r\n            pick.setSelectedFalse = fixSelectedFalse;\r\n            pick.wrap = wrap; \r\n            pick.dispose = composeSync(\r\n                removeFromPicksList,\r\n                ()=>{\r\n                    pick.setSelectedFalse=null;\r\n                    pick.wrap = null;\r\n                }, \r\n                pick.dispose);\r\n            pickHandlers.removeAndDispose = () => pick.dispose();\r\n            return pick;\r\n        }\r\n    }\r\n}\r\n\r\n// redefined in MultiSelectInlineLayout to redefine handlers removeOnButton\r\n// redefined in SelectedOptionPlugin to compose wrap.updateSelected\r\nexport function CreatePickHandlersAspect(producePickAspect){\r\n    return{\r\n        createPickHandlers(wrap){\r\n            let pickHandlers = { \r\n                producePick: null,  // not redefined directly, but redefined in addPickAspect\r\n                removeAndDispose: null,  // not redefined, \r\n                removeOnButton: null // redefined in MultiSelectInlineLayout\r\n            }\r\n            \r\n            pickHandlers.producePick = () => producePickAspect.producePick(wrap, pickHandlers);\r\n            return pickHandlers;\r\n        }\r\n    }\r\n}\r\n\r\nexport function CreateChoiceBaseAspect(optionPropertiesAspect){\r\n    return {\r\n        createChoiceBase(option){\r\n            return {\r\n                    \r\n                //updateDisabled:null,  \r\n                //updateHidden:null,\r\n                \r\n                // navigation and filter support\r\n                filteredPrev: null, \r\n                filteredNext: null, \r\n                searchText: optionPropertiesAspect.getText(option).toLowerCase().trim(), // TODO make an index abstraction\r\n                \r\n                // internal state handlers, so they do not have \"update semantics\"\r\n                isHoverIn: false,\r\n                isFilteredIn: false,\r\n                \r\n                setVisible: null,\r\n                setHoverIn: null,\r\n                \r\n                // TODO: is it a really sense to have them there?\r\n                isChoiceElementAttached: false,\r\n                choiceElement: null,\r\n                choiceElementAttach: null,\r\n                \r\n                itemPrev: null,\r\n                itemNext: null,\r\n                \r\n                remove: null,\r\n                \r\n                dispose: null\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function CreateWrapAspect(){\r\n    return {\r\n        createWrap(option){\r\n            return {\r\n                option: option\r\n            }\r\n        }\r\n    }\r\n}","export function HoveredChoiceAspect(){\r\n    let hoveredChoice=null;\r\n    return {\r\n        getHoveredChoice: () => hoveredChoice,\r\n        setHoveredChoice: (wrap) => {hoveredChoice = wrap},\r\n        resetHoveredChoice() {\r\n            if (hoveredChoice) {\r\n                hoveredChoice.choice.setHoverIn(false)\r\n                hoveredChoice = null;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function NavigateAspect(hoveredChoiceAspect, navigate){\r\n    return {\r\n        hoverIn(wrap){\r\n            hoveredChoiceAspect.resetHoveredChoice(); \r\n            hoveredChoiceAspect.setHoveredChoice(wrap);\r\n            wrap.choice.setHoverIn(true);\r\n        },\r\n        navigate: (down) => navigate(down, hoveredChoiceAspect.getHoveredChoice()), \r\n    }\r\n}","export function Wraps(wrapsCollection,  \r\n    listFacade_reset, listFacade_remove, listFacade_add) \r\n{\r\n    return {\r\n        push: (wrap) => push(wrap, wrapsCollection, listFacade_add),\r\n        insert: (key, wrap) => insert(key, wrap, wrapsCollection, listFacade_add),\r\n        remove: (key) => {\r\n            var wrap = wrapsCollection.remove(key);\r\n            listFacade_remove(wrap);\r\n            return wrap;\r\n        },\r\n        clear: () => {\r\n            wrapsCollection.reset();\r\n            listFacade_reset();\r\n        }, \r\n        dispose: () => wrapsCollection.forLoop(wrap => wrap.dispose()) \r\n    }\r\n}\r\n\r\nfunction push(wrap, wrapsCollection, listFacade_add){\r\n    wrapsCollection.push(wrap);\r\n    listFacade_add(wrap);\r\n}\r\n\r\nfunction insert(key, wrap, wrapsCollection, listFacade_add){\r\n    if (key>=wrapsCollection.getCount()) {\r\n        push(wrap, wrapsCollection, listFacade_add);\r\n    }\r\n    else {\r\n        wrapsCollection.add(wrap, key);\r\n        listFacade_add(wrap, key);\r\n    }\r\n}","import {composeSync} from './ToolsJs';\r\nimport {EventBinder, EventLoopFlag, containsAndSelf} from './ToolsDom'\r\n\r\nexport function MultiSelectInlineLayout (\r\n    aspects\r\n    ) \r\n{\r\n    let {environment,filterDom,picksDom,choicesDom, \r\n        popupAspect, hoveredChoiceAspect, navigateAspect,filterManagerAspect,\r\n        focusInAspect, optionToggleAspect,\r\n        createPickHandlersAspect,\r\n        inputAspect, picksList, buildChoiceAspect, \r\n        setDisabledComponentAspect, resetLayoutAspect\r\n    } = aspects;\r\n\r\n    let picksElement = picksDom.picksElement;\r\n    let choicesElement = choicesDom.choicesElement;\r\n\r\n    var window = environment.window;\r\n    var document = window.document;\r\n    var eventLoopFlag = EventLoopFlag(window); \r\n    var skipFocusout = false;\r\n    \r\n    function getSkipFocusout() {\r\n        return skipFocusout;\r\n    };\r\n    function resetSkipFocusout() {\r\n        skipFocusout = false;\r\n    };\r\n    function setSkipFocusout() {\r\n        skipFocusout = true;\r\n    };\r\n\r\n    // we want to escape the closing of the menu (because of focus out from) on a user's click inside the container\r\n    var skipoutMousedown = function() {\r\n        setSkipFocusout();\r\n    }\r\n\r\n    var documentMouseup = function(event) {\r\n        // if we would left without focus then \"close the drop\" do not remove focus border\r\n        if (choicesElement == event.target) \r\n            filterDom.setFocus()\r\n\r\n        // if click outside container - close dropdown\r\n        else if ( !containsAndSelf(choicesElement, event.target) && !containsAndSelf(picksElement, event.target)) {\r\n            resetLayoutAspect.resetLayout();\r\n            focusInAspect.setFocusIn(false);\r\n        }\r\n    }\r\n\r\n    function showChoices() {\r\n        if ( !popupAspect.isChoicesVisible() )\r\n        {\r\n            popupAspect.updatePopupLocation();\r\n            eventLoopFlag.set();\r\n            popupAspect.setChoicesVisible(true);\r\n            \r\n            // add listeners that manages close dropdown on  click outside container\r\n            choicesElement.addEventListener(\"mousedown\", skipoutMousedown);\r\n            document.addEventListener(\"mouseup\", documentMouseup);\r\n        }\r\n    }\r\n\r\n    function hideChoices() {\r\n        resetMouseCandidateChoice();\r\n        hoveredChoiceAspect.resetHoveredChoice();\r\n        if (popupAspect.isChoicesVisible())\r\n        {\r\n            // COOMENT OUT DEBUGGING popup layout\r\n            popupAspect.setChoicesVisible(false);\r\n            \r\n            choicesElement.removeEventListener(\"mousedown\", skipoutMousedown);\r\n            document.removeEventListener(\"mouseup\", documentMouseup);\r\n        }\r\n    }\r\n\r\n    var preventDefaultClickEvent = null;\r\n\r\n    var componentDisabledEventBinder = EventBinder();\r\n\r\n\r\n    // TODO: remove setTimeout: set on start of mouse event reset on end\r\n    function skipoutAndResetMousedown(){\r\n        skipoutMousedown();\r\n        window.setTimeout(()=>resetSkipFocusout());\r\n    }\r\n    picksElement.addEventListener(\"mousedown\", skipoutAndResetMousedown);\r\n\r\n    function clickToShowChoices(event){\r\n        filterDom.setFocusIfNotTarget(event.target);\r\n        if (preventDefaultClickEvent != event) {\r\n            if (popupAspect.isChoicesVisible()){\r\n                hideChoices() \r\n            } else {\r\n                if (filterManagerAspect.getNavigateManager().getCount()>0)\r\n                    showChoices();\r\n            }\r\n        }\r\n        preventDefaultClickEvent=null;\r\n    }\r\n\r\n    \r\n\r\n    function processUncheck(uncheckOption, event){\r\n        // we can't remove item on \"click\" in the same loop iteration - it is unfrendly for 3PP event handlers (they will get detached element)\r\n        // never remove elements in the same event iteration\r\n        window.setTimeout(()=>uncheckOption())\r\n        preventDefaultClickEvent = event; // setPreventDefaultMultiSelectEvent\r\n    }\r\n\r\n    // function handleOnRemoveButton(onRemove, setSelectedFalse){\r\n    //     // processRemoveButtonClick removes the item\r\n    //     // what is a problem with calling 'remove' directly (not using  setTimeout('remove', 0)):\r\n    //     // consider situation \"MultiSelect\" on DROPDOWN (that should be closed on the click outside dropdown)\r\n    //     // therefore we aslo have document's click's handler where we decide to close or leave the DROPDOWN open.\r\n    //     // because of the event's bubling process 'remove' runs first. \r\n    //     // that means the event's target element on which we click (the x button) will be removed from the DOM together with badge \r\n    //     // before we could analize is it belong to our dropdown or not.\r\n    //     // important 1: we can't just the stop propogation using stopPropogate because click outside dropdown on the similar \r\n    //     // component that use stopPropogation will not close dropdown (error, dropdown should be closed)\r\n    //     // important 2: we can't change the dropdown's event handler to leave dropdown open if event's target is null because of\r\n    //     // the situation described above: click outside dropdown on the same component.\r\n    //     // Alternatively it could be possible to use stopPropogate but together create custom click event setting new target \r\n    //     // that belomgs to DOM (e.g. panel)\r\n\r\n\r\n    //     onRemove(event => {\r\n    //         processUncheck(setSelectedFalse, event);\r\n    //         hideChoices();\r\n    //         resetFilterAspect.resetFilter(); \r\n    //     });\r\n    // }\r\n    \r\n    function handleOnRemoveButton(setSelectedFalse){ return (event) => {\r\n        processUncheck(setSelectedFalse, event);\r\n        resetLayoutAspect.resetLayout(); \r\n    }}\r\n    \r\n    let mouseCandidateEventBinder = EventBinder();\r\n    var resetMouseCandidateChoice = () => {\r\n        mouseCandidateEventBinder.unbind();\r\n    };\r\n\r\n    var mouseOverToHoveredAndReset = (wrap) => {\r\n        if (!wrap.choice.isHoverIn)\r\n            navigateAspect.hoverIn(wrap);\r\n        resetMouseCandidateChoice();\r\n    };\r\n \r\n    function adoptChoiceElement(wrap){\r\n        let choiceElement = wrap.choice.choiceElement;\r\n        // in chrome it happens on \"become visible\" so we need to skip it, \r\n        // for IE11 and edge it doesn't happens, but for IE11 and Edge it doesn't happens on small \r\n        // mouse moves inside the item. \r\n        // https://stackoverflow.com/questions/59022563/browser-events-mouseover-doesnt-happen-when-you-make-element-visible-and-mous\r\n        \r\n        var onChoiceElementMouseover = () => \r\n        {\r\n            if (eventLoopFlag.get())\r\n            {\r\n                resetMouseCandidateChoice();\r\n                mouseCandidateEventBinder.bind(choiceElement, 'mousemove', ()=>mouseOverToHoveredAndReset(wrap));\r\n                mouseCandidateEventBinder.bind(choiceElement, 'mousedown', ()=>mouseOverToHoveredAndReset(wrap));\r\n            }\r\n            else\r\n            {\r\n                if (!wrap.choice.isHoverIn)\r\n                {\r\n                    // NOTE: mouseleave is not enough to guarantee remove hover styles in situations\r\n                    // when style was setuped without mouse (keyboard arrows)\r\n                    // therefore force reset manually (done inside hoverIn)\r\n                    navigateAspect.hoverIn(wrap);\r\n                }                \r\n            }\r\n        }\r\n        \r\n        // note 1: mouseleave preferred to mouseout - which fires on each descendant\r\n        // note 2: since I want add aditional info panels to the dropdown put mouseleave on dropdwon would not work\r\n        var onChoiceElementMouseleave = () => {\r\n            if (!eventLoopFlag.get()) {\r\n                hoveredChoiceAspect.resetHoveredChoice();\r\n            }\r\n        }\r\n        var overAndLeaveEventBinder = EventBinder();\r\n        overAndLeaveEventBinder.bind(choiceElement, 'mouseover',  onChoiceElementMouseover);\r\n        overAndLeaveEventBinder.bind(choiceElement, 'mouseleave', onChoiceElementMouseleave);\r\n\r\n        return overAndLeaveEventBinder.unbind;\r\n    }\r\n\r\n    \r\n    filterDom.onFocusIn(()=>focusInAspect.setFocusIn(true));\r\n    filterDom.onFocusOut(() => { \r\n            if (!getSkipFocusout()){ // skip initiated by mouse click (we manage it different way)\r\n                resetLayoutAspect.resetLayout(); // if do not do this we will return to filtered list without text filter in input\r\n                focusInAspect.setFocusIn(false);\r\n            }\r\n            resetSkipFocusout();\r\n        }\r\n    );\r\n\r\n    // it can be initated by 3PP functionality\r\n    // sample (1) BS functionality - input x button click - clears input\r\n    // sample (2) BS functionality - esc keydown - clears input\r\n    // and there could be difference in processing: (2) should hide the menu, then reset , when (1) should just reset without hiding.\r\n\r\n    function afterInput(){\r\n        eventLoopFlag.set(); // means disable some mouse handlers; otherwise we will get \"Hover On MouseEnter\" when filter's changes should remove hover\r\n\r\n        let visibleCount = filterManagerAspect.getNavigateManager().getCount();\r\n\r\n        if (visibleCount>0){\r\n            let panelIsVisble = popupAspect.isChoicesVisible();\r\n            if (!panelIsVisble){\r\n                showChoices(); \r\n            }\r\n            if (visibleCount == 1) {\r\n                navigateAspect.hoverIn(filterManagerAspect.getNavigateManager().getHead())\r\n            } else {\r\n                if (panelIsVisble)\r\n                    hoveredChoiceAspect.resetHoveredChoice();\r\n            }   \r\n        }else{\r\n            if (popupAspect.isChoicesVisible())\r\n                hideChoices();\r\n        }\r\n    }\r\n\r\n    filterDom.onInput(() => {\r\n        let {filterInputValue, isEmpty} = inputAspect.processInput();\r\n        if (isEmpty)\r\n            filterManagerAspect.processEmptyInput();\r\n        else\r\n            filterDom.setWidth(filterInputValue);  \r\n\r\n        afterInput();\r\n    });\r\n\r\n    function keyDownArrow(down) {\r\n        let wrap = navigateAspect.navigate(down);  \r\n        if (wrap)\r\n        {\r\n            navigateAspect.hoverIn(wrap); // !\r\n            showChoices(); // !\r\n        }\r\n    }\r\n\r\n    function hoveredToSelected(){\r\n        let hoveredWrap = hoveredChoiceAspect.getHoveredChoice(); \r\n        if (hoveredWrap){\r\n            let wasToggled = optionToggleAspect.toggle(hoveredWrap); \r\n            if (wasToggled) {\r\n                resetLayoutAspect.resetLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: bind it more declarative way? (compact code)\r\n    var onKeyDown = (event) => {\r\n        let keyCode = event.which;\r\n        var empty = filterDom.isEmpty();\r\n        if ([ 13,\r\n              27  // '27-esc' there is \"just in case\", I can imagine that there are user agents that do UNDO\r\n            ].indexOf(keyCode)>=0 \r\n            || (keyCode == 9 && !empty) //  otherwice there are no keyup (true at least for '9-tab'),\r\n            ) {\r\n                event.preventDefault(); \r\n            \r\n            // '13-enter'  - prevention against form's default button \r\n            // but doesn't help with bootsrap modal ESC or ENTER (close behaviour);\r\n        }\r\n        if ([ 38, 40 ].indexOf(keyCode) >= 0 )\r\n            event.preventDefault(); \r\n        if (keyCode == 8 /*backspace*/) {\r\n            // NOTE: this will process backspace only if there are no text in the input field\r\n            // If user will find this inconvinient, we will need to calculate something like this\r\n            // let isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n            if (empty) {\r\n                let pick = picksList.getTail();\r\n                if (pick){ \r\n                    pick.setSelectedFalse(); \r\n                    popupAspect.updatePopupLocation();\r\n                }\r\n            }\r\n        }\r\n        // ---------------------------------------------------------------------------------\r\n        // NOTE: no preventDefault called in case of empty for 9-tab\r\n        else if (keyCode == 9  /*tab*/) { // NOTE: no keydown for this (without preventDefaul after TAB keyup event will be targeted another element)  \r\n            if (empty) { \r\n                hideChoices();  // hideChoices inside (and no filter reset since it is empty) \r\n            }\r\n        }\r\n        else if (keyCode == 27 /*esc*/ ) { // NOTE: forbid the ESC to close the modal (in case the nonempty or dropdown is open)\r\n        \r\n            if (!empty  || popupAspect.isChoicesVisible())\r\n                event.stopPropagation()\r\n        }\r\n        else if (keyCode == 38) {\r\n            keyDownArrow(false); // up\r\n        }\r\n        else if (keyCode == 40) {\r\n            keyDownArrow(true); // down\r\n        }\r\n    }\r\n    var onKeyUp = (event) => {\r\n        let keyCode = event.which;\r\n        //var handler = keyUp[event.which/* key code */];\r\n        //handler();    \r\n        if (keyCode == 9) {\r\n            if (popupAspect.isChoicesVisible()) {\r\n                hoveredToSelected();\r\n            } \r\n        }\r\n        else if (keyCode == 13 ) {\r\n            if (popupAspect.isChoicesVisible()) {\r\n                hoveredToSelected();\r\n            } else {\r\n                if (filterManagerAspect.getNavigateManager().getCount()>0){\r\n                    showChoices();\r\n                }\r\n            }\r\n        }\r\n        else if (keyCode == 27) { // escape\r\n            // is it always empty (bs x can still it) \r\n            resetLayoutAspect.resetLayout();\r\n        }\r\n    }\r\n\r\n    filterDom.onKeyDown(onKeyDown);    \r\n    filterDom.onKeyUp(onKeyUp);\r\n\r\n    let origSetDisabledComponent = setDisabledComponentAspect.setDisabledComponent; \r\n    setDisabledComponentAspect.setDisabledComponent = (isComponentDisabled) => {\r\n        origSetDisabledComponent(isComponentDisabled);\r\n        if (isComponentDisabled)\r\n            componentDisabledEventBinder.unbind();\r\n        else\r\n            componentDisabledEventBinder.bind(picksElement, \"click\",  clickToShowChoices); \r\n    }\r\n\r\n    resetLayoutAspect.resetLayout = composeSync(\r\n        hideChoices,\r\n        resetLayoutAspect.resetLayout // resetFilter by default\r\n    );\r\n\r\n    let origCreatePickHandlers = createPickHandlersAspect.createPickHandlers;\r\n    createPickHandlersAspect.createPickHandlers = (wrap) => {\r\n        let pickHandlers = origCreatePickHandlers(wrap);\r\n        pickHandlers.removeOnButton = handleOnRemoveButton(pickHandlers.removeOnButton);\r\n        return pickHandlers;\r\n    } \r\n\r\n    let origBuildChoice = buildChoiceAspect.buildChoice;\r\n    buildChoiceAspect.buildChoice = (wrap) => {\r\n        origBuildChoice(wrap);\r\n        let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n\r\n        wrap.choice.remove = composeSync(wrap.choice.remove, () => {\r\n            if (pickHandlers.removeAndDispose) {\r\n                pickHandlers.removeAndDispose();\r\n                pickHandlers.removeAndDispose=null;\r\n            }\r\n        })\r\n        \r\n        let unbindChoiceElement = adoptChoiceElement(wrap);\r\n        wrap.choice.dispose = composeSync(unbindChoiceElement, wrap.choice.dispose);\r\n    }\r\n\r\n    return {\r\n        dispose(){\r\n            resetMouseCandidateChoice();\r\n            picksElement.removeEventListener(\"mousedown\", skipoutAndResetMousedown);\r\n            componentDisabledEventBinder.unbind();\r\n        }\r\n    }\r\n}\r\n","\r\nexport function SetDisabledComponentAspect(picksList, picksDom){\r\n    return {\r\n        setDisabledComponent(isComponentDisabled){\r\n            picksList.forEach(pick=>pick.pickDomManagerHandlers.updateRemoveDisabled())\r\n            picksDom.disable(isComponentDisabled);\r\n        }\r\n    }\r\n}\r\n\r\nexport function UpdateDisabledComponentAspect(componentPropertiesAspect, setDisabledComponentAspect\r\n    ){\r\n    let isComponentDisabled;\r\n    return {\r\n        updateDisabledComponent(){\r\n            let newIsComponentDisabled = componentPropertiesAspect.getDisabled();\r\n            if (isComponentDisabled!==newIsComponentDisabled){\r\n                isComponentDisabled=newIsComponentDisabled;\r\n                setDisabledComponentAspect.setDisabledComponent(newIsComponentDisabled);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function ResetLayoutAspect(resetLayout){\r\n    return {\r\n        resetLayout\r\n    }\r\n}\r\n\r\nexport function AppearanceAspect(updateDisabledComponentAspect){\r\n    return {\r\n        updateAppearance(){\r\n            updateDisabledComponentAspect.updateDisabledComponent();\r\n        }\r\n    }\r\n}\r\n\r\nexport function LoadAspect(fillChoicesAspect, appearanceAspect){\r\n    return {\r\n        load(){\r\n            fillChoicesAspect.fillChoices();\r\n            appearanceAspect.updateAppearance(); \r\n        }\r\n    }\r\n}","export function PickButtonAspect(buttonHTML){\r\n    return {\r\n        getButtonHTML : () => buttonHTML\r\n    }\r\n}","export function BuildPickAspect(\r\n    picksDom, \r\n    pickDomFactory\r\n){\r\n    return {\r\n        buildPick(wrap, removeOnButton){\r\n            let {pickElement, attach, detach} = picksDom.createPickElement(); \r\n            let {pickDomManager} = pickDomFactory.create(pickElement, wrap, removeOnButton); \r\n            let pickDomManagerHandlers = pickDomManager.init();\r\n\r\n            let pick = {\r\n                pickDomManagerHandlers,\r\n                pickElementAttach: attach,\r\n                dispose: () => { \r\n                    detach(); \r\n                    pickDomManager.dispose(); \r\n                    pickDomManagerHandlers = null;\r\n                    pick.pickElementAttach = null;\r\n                    pick.dispose = null;  \r\n                }\r\n            }\r\n            return pick;\r\n        }\r\n    }\r\n}","export function InputAspect(\r\n    filterDom,\r\n    filterManagerAspect,\r\n    fullMatchAspect\r\n    ){\r\n\r\n    return {\r\n        // overrided in SelectedOptionPlugin\r\n        processInput(){ \r\n            let filterInputValue = filterDom.getValue();\r\n            let text = filterInputValue.trim();\r\n            var isEmpty=false;\r\n            if (text == '')\r\n                isEmpty=true;\r\n            else\r\n            {\r\n                filterManagerAspect.setFilter(text.toLowerCase());\r\n            }\r\n            \r\n            if (!isEmpty)\r\n            {\r\n                if ( filterManagerAspect.getNavigateManager().getCount() == 1)\r\n                {\r\n                    // todo: move exact match to filterManager\r\n                    let fullMatchWrap =  filterManagerAspect.getNavigateManager().getHead();\r\n                    let text = filterManagerAspect.getFilter();\r\n                    if (fullMatchWrap.choice.searchText == text)\r\n                    {\r\n                        //console.log(\"fullMatchAspect.fullMatch\");\r\n                        let success = fullMatchAspect.fullMatch(fullMatchWrap); \r\n                        if (success) {\r\n                            filterDom.setEmpty();\r\n                            isEmpty = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {filterInputValue, isEmpty};\r\n        }\r\n    }\r\n}","export function ResetFilterListAspect(filterDom, filterManagerAspect){\r\n    return {\r\n        forceResetFilter(){  // over in PlaceholderPlugin\r\n            filterDom.setEmpty();\r\n            filterManagerAspect.processEmptyInput(); // over in PlaceholderPlugin\r\n        }\r\n    }\r\n}\r\n\r\nexport function ResetFilterAspect(filterDom, resetFilterListAspect){\r\n    return {\r\n        resetFilter(){ // call in OptionsApiPlugin\r\n            if (!filterDom.isEmpty())  // call in Placeholder\r\n                resetFilterListAspect.forceResetFilter(); // over in Placeholder\r\n        }\r\n    }\r\n}\r\n\r\nexport function FocusInAspect(picksDom){\r\n    return {\r\n        setFocusIn(focus){ // call in OptionsApiPlugin\r\n            picksDom.setIsFocusIn(focus) // unique call, call BsAppearancePlugin\r\n            picksDom.toggleFocusStyling() // over BsAppearancePlugin\r\n        }\r\n    }\r\n}\r\n\r\n","export function CountableChoicesListInsertAspect(countableChoicesList, wrapsCollection){\r\n    return {\r\n        countableChoicesListInsert(wrap, key){\r\n            let choiceNext = wrapsCollection.getNext(key);\r\n            countableChoicesList.add(wrap, choiceNext)\r\n        }\r\n    }\r\n}","import {PluginManager, plugStaticDom} from './PluginManager'\r\n\r\nimport {composeSync, List, extendIfUndefined} from './ToolsJs';\r\nimport {PickDomFactory} from './PickDomFactory';\r\nimport {ChoiceDomFactory} from './ChoiceDomFactory';\r\n\r\nimport {StaticDomFactory, CreateElementAspect} from './StaticDomFactory';\r\n\r\nimport {PicksDom} from './PicksDom';\r\nimport {FilterDom} from './FilterDom';\r\n\r\nimport {ChoicesDomFactory} from './ChoicesDomFactory';\r\nimport {PopupAspect} from './PopupAspect';\r\n \r\nimport {ComponentPropertiesAspect, TriggerAspect, OnChangeAspect} from './ComponentPropertiesAspect';\r\nimport {OptionsAspect, OptionPropertiesAspect} from './OptionsAspect';\r\n\r\nimport {ChoicesEnumerableAspect } from './ChoicesEnumerableAspect'\r\nimport {FilterManagerAspect, NavigateManager, FilterPredicateAspect } from './FilterManagerAspect'\r\nimport {BuildAndAttachChoiceAspect, BuildChoiceAspect} from './BuildChoiceAspect'\r\nimport {FillChoicesAspect} from './FillChoicesAspect'\r\n\r\nimport {UpdateDataAspect } from './UpdateDataAspect'\r\n\r\nimport {CreateWrapAspect, CreateChoiceBaseAspect, OptionToggleAspect, CreatePickHandlersAspect, RemovePickAspect, \r\n    AddPickAspect, FullMatchAspect, ChoiceClickAspect, IsChoiceSelectableAspect, ProducePickAspect} from './CreateWrapAspect.js'\r\nimport {NavigateAspect, HoveredChoiceAspect} from './NavigateAspect'\r\nimport {Wraps} from './Wraps'\r\n\r\n\r\nimport {PickButtonAspect} from './PickButtonAspect'\r\n\r\nimport {BuildPickAspect} from './BuildPickAspect'\r\nimport {InputAspect} from './InputAspect'\r\nimport {ResetFilterAspect, FocusInAspect, ResetFilterListAspect} from './ResetFilterListAspect'\r\n\r\nimport {MultiSelectInlineLayout} from './MultiSelectInlineLayout'\r\n\r\nimport {SetDisabledComponentAspect, UpdateDisabledComponentAspect, LoadAspect, AppearanceAspect, ResetLayoutAspect} from './AppearanceAspect'\r\nimport {DoublyLinkedList, ArrayFacade} from './ToolsJs'\r\nimport {CountableChoicesListInsertAspect} from './CountableChoicesListInsertAspect'\r\n\r\n/// environment - common for many; configuration for concreate\r\nexport function BsMultiSelect(element, environment, configuration, onInit){\r\n    var {createPopper, window, plugins} = environment;\r\n    \r\n    if (typeof createPopper === 'undefined') {\r\n        createPopper = environment.Popper;\r\n        if (typeof createPopper !== 'undefined') {\r\n            //console.log(`DashboarCode.BsMultiSelect: 'environment.Popper' is depricated, use - 'environment.createPopper'}`);\r\n        } else {\r\n            throw new Error(\"BsMultiSelect: Popper component (https://popper.js.org) is required\")\r\n        }\r\n    }\r\n\r\n    let { containerClass,\r\n          css, \r\n          getDisabled,\r\n          options, \r\n          getText\r\n        } = configuration;\r\n    \r\n    let disposeAspect = {};\r\n    let triggerAspect = TriggerAspect(element, environment.trigger);\r\n    let onChangeAspect = OnChangeAspect(triggerAspect, 'dashboardcode.multiselect:change');\r\n    let componentPropertiesAspect = ComponentPropertiesAspect(getDisabled??(() => false));\r\n    let optionsAspect   = OptionsAspect(options); \r\n    let optionPropertiesAspect = OptionPropertiesAspect(getText);\r\n    let isChoiceSelectableAspect = IsChoiceSelectableAspect();\r\n    let createWrapAspect        = CreateWrapAspect();\r\n    let createChoiceBaseAspect   = CreateChoiceBaseAspect(optionPropertiesAspect);\r\n    //let setOptionSelectedAspect = SetOptionSelectedAspect(optionPropertiesAspect);\r\n    \r\n    let addPickAspect = AddPickAspect();\r\n    let removePickAspect = RemovePickAspect();\r\n    \r\n    let createElementAspect = CreateElementAspect(name => window.document.createElement(name));\r\n    \r\n    let choicesDomFactory = ChoicesDomFactory(createElementAspect);\r\n    let staticDomFactory  = StaticDomFactory(choicesDomFactory, createElementAspect);\r\n    \r\n    let wrapsCollection = ArrayFacade();\r\n    \r\n    let countableChoicesList = DoublyLinkedList(\r\n        (wrap)=>wrap.choice.itemPrev, \r\n        (warp, v)=>warp.choice.itemPrev=v, \r\n        (wrap)=>wrap.choice.itemNext, \r\n        (wrap, v)=>wrap.choice.itemNext=v\r\n    );\r\n    \r\n    let countableChoicesListInsertAspect = CountableChoicesListInsertAspect(countableChoicesList, wrapsCollection);\r\n\r\n    let choicesEnumerableAspect = ChoicesEnumerableAspect(countableChoicesList, wrap=>wrap.choice.itemNext)\r\n    \r\n    let filteredChoicesList = DoublyLinkedList(\r\n        (wrap)=>wrap.choice.filteredPrev, \r\n        (wrap, v)=>wrap.choice.filteredPrev=v, \r\n        (wrap)=>wrap.choice.filteredNext, \r\n        (wrap, v)=>wrap.choice.filteredNext=v\r\n    );\r\n    \r\n    let emptyNavigateManager = NavigateManager(\r\n        countableChoicesList,\r\n        (wrap)=>wrap.choice.itemPrev,\r\n        (wrap)=>wrap.choice.itemNext \r\n        \r\n    ); \r\n    let filteredNavigateManager = NavigateManager(\r\n        filteredChoicesList, \r\n        (wrap)=>wrap.choice.filteredPrev,\r\n        (wrap)=>wrap.choice.filteredNext ); \r\n\r\n    let filterPredicateAspect = FilterPredicateAspect()\r\n    let filterManagerAspect = FilterManagerAspect(\r\n        emptyNavigateManager,\r\n        filteredNavigateManager,\r\n        \r\n        filteredChoicesList, \r\n        choicesEnumerableAspect,\r\n        filterPredicateAspect\r\n    );\r\n\r\n    let hoveredChoiceAspect = HoveredChoiceAspect()\r\n    let navigateAspect = NavigateAspect(hoveredChoiceAspect, \r\n        (down, hoveredChoice)=>filterManagerAspect.getNavigateManager().navigate(down, hoveredChoice));\r\n    let picksList = List();\r\n    let wraps = Wraps(\r\n        wrapsCollection,\r\n        ()=>countableChoicesList.reset(), \r\n        (w)=>countableChoicesList.remove(w),\r\n        (w, key)=>countableChoicesListInsertAspect.countableChoicesListInsert(w, key));\r\n\r\n    let aspects = {\r\n        environment, configuration, triggerAspect, onChangeAspect, componentPropertiesAspect, disposeAspect,\r\n        countableChoicesList, countableChoicesListInsertAspect,\r\n        optionsAspect, optionPropertiesAspect, \r\n        createWrapAspect, createChoiceBaseAspect, isChoiceSelectableAspect, \r\n        createElementAspect,\r\n        choicesDomFactory, staticDomFactory,\r\n        filterPredicateAspect, wrapsCollection, choicesEnumerableAspect, \r\n        filteredChoicesList, filterManagerAspect, hoveredChoiceAspect, navigateAspect, picksList, wraps,\r\n        addPickAspect, removePickAspect\r\n    }\r\n\r\n    plugStaticDom(plugins, aspects); // apply cssPatch to css, apply selectElement support;  \r\n\r\n    let {choicesDom, createStaticDom} = staticDomFactory.create(css)\r\n\r\n    let {staticDom, staticManager} = createStaticDom(element, containerClass)\r\n\r\n    // after this we can use staticDom in construtctor, this simplifies parameters passing a lot   \r\n\r\n    let filterDom = FilterDom(staticDom.disposablePicksElement, createElementAspect, css);\r\n    let popupAspect = PopupAspect(choicesDom.choicesElement, filterDom.filterInputElement, createPopper);\r\n    let resetFilterListAspect = ResetFilterListAspect(filterDom, filterManagerAspect)\r\n    let resetFilterAspect =  ResetFilterAspect(filterDom, resetFilterListAspect)\r\n    \r\n\r\n    // TODO get picksDom  from staticDomFactory\r\n    let picksDom  = PicksDom(staticDom.picksElement, staticDom.disposablePicksElement, createElementAspect, css);\r\n    let focusInAspect = FocusInAspect(picksDom);\r\n    \r\n    let pickButtonAspect = PickButtonAspect(configuration.pickButtonHTML);\r\n    \r\n    let pickDomFactory = PickDomFactory(css, componentPropertiesAspect, optionPropertiesAspect, pickButtonAspect);\r\n    let buildPickAspect = BuildPickAspect(picksDom, pickDomFactory);\r\n    let producePickAspect = ProducePickAspect(picksList, removePickAspect, buildPickAspect)\r\n    let createPickHandlersAspect = CreatePickHandlersAspect(producePickAspect);\r\n    \r\n    let choiceDomFactory = ChoiceDomFactory(css, optionPropertiesAspect);\r\n    let optionToggleAspect  = OptionToggleAspect(createPickHandlersAspect, addPickAspect);\r\n    let fullMatchAspect = FullMatchAspect(createPickHandlersAspect, addPickAspect);\r\n    let inputAspect = InputAspect(filterDom, filterManagerAspect, fullMatchAspect);    \r\n\r\n    let choiceClickAspect = ChoiceClickAspect(optionToggleAspect, filterDom);\r\n    let buildChoiceAspect = BuildChoiceAspect( choicesDom, choiceDomFactory, choiceClickAspect);\r\n    let buildAndAttachChoiceAspect =  BuildAndAttachChoiceAspect(buildChoiceAspect);\r\n    let resetLayoutAspect = ResetLayoutAspect(() => resetFilterAspect.resetFilter());\r\n\r\n    let setDisabledComponentAspect = SetDisabledComponentAspect(picksList, picksDom);\r\n    let updateDisabledComponentAspect = UpdateDisabledComponentAspect(componentPropertiesAspect,setDisabledComponentAspect );\r\n    let appearanceAspect = AppearanceAspect(updateDisabledComponentAspect);\r\n    \r\n    let fillChoicesAspect = FillChoicesAspect(\r\n        window.document, createWrapAspect, createChoiceBaseAspect, optionsAspect, wraps, buildAndAttachChoiceAspect );\r\n    let loadAspect = LoadAspect(fillChoicesAspect, appearanceAspect);\r\n    let updateDataAspect = UpdateDataAspect(choicesDom, wraps, picksList, fillChoicesAspect, resetLayoutAspect);\r\n\r\n    extendIfUndefined(aspects, {\r\n        staticDom, picksDom, choicesDom,filterDom, resetLayoutAspect, pickDomFactory, choiceDomFactory,\r\n        popupAspect, staticManager, buildChoiceAspect, optionToggleAspect,  choiceClickAspect, \r\n        buildAndAttachChoiceAspect , fillChoicesAspect, \r\n        buildPickAspect, producePickAspect, createPickHandlersAspect, inputAspect, resetFilterListAspect, resetFilterAspect, \r\n        resetLayoutAspect, focusInAspect, \r\n        updateDisabledComponentAspect, setDisabledComponentAspect, appearanceAspect, loadAspect,\r\n        updateDataAspect , fullMatchAspect} )\r\n    \r\n    let pluginManager = PluginManager(plugins, aspects);\r\n    let multiSelectInlineLayout =  MultiSelectInlineLayout(aspects);\r\n\r\n    let api = {component: \"BsMultiSelect.api\"} // key used in memory leak analyzes\r\n   \r\n    pluginManager.buildApi(api);\r\n    // after this we can pass aspects methods call without wrapping - there should be no more overridings. TODO freeze aspects?\r\n    api.dispose = composeSync(\r\n        resetLayoutAspect.resetLayout,\r\n        disposeAspect.dispose,\r\n        pluginManager.dispose, \r\n        ()=>{picksList.forEach(pick=>pick.dispose());},\r\n        multiSelectInlineLayout.dispose, // TODO move to layout\r\n        wraps.dispose,\r\n        staticManager.dispose, popupAspect.dispose, picksDom.dispose, filterDom.dispose );\r\n    \r\n    api.updateAppearance = appearanceAspect.updateAppearance;\r\n    api.updateData = updateDataAspect.updateData;\r\n    api.update = () => {\r\n        updateDataAspect.updateData();\r\n        appearanceAspect.updateAppearance();\r\n    }\r\n\r\n    api.updateDisabled = updateDisabledComponentAspect.updateDisabledComponent;\r\n    // TODO api.updateOption = (key) => {/* all updates: selected, disabled, hidden, text */}\r\n\r\n    onInit?.(api, aspects);\r\n    picksDom.pickFilterElement.appendChild(filterDom.filterInputElement);\r\n    picksDom.picksElement.appendChild(picksDom.pickFilterElement); \r\n    staticManager.appendToContainer();\r\n    popupAspect.init();\r\n    loadAspect.load();\r\n    \r\n    return api;\r\n}\r\n","import {closestByClassName} from '../ToolsDom'\r\n\r\nexport function Bs5Plugin(){\r\n}\r\n\r\nBs5Plugin.plugDefaultConfig = (defaults) => {\r\n    defaults.css = css;\r\n    setDefaults(defaults);\r\n}\r\n\r\n\r\nfunction setDefaults(defaults){\r\n    defaults.useCssPatch = true;\r\n    defaults.cssPatch = cssPatch;\r\n    defaults.pickButtonHTML = '<button aria-label=\"Remove\" tabIndex=\"-1\" type=\"button\"></button>'\r\n    defaults.composeGetSize = composeGetSize;\r\n    defaults.getDefaultLabel = getDefaultLabel;\r\n}\r\n\r\nfunction composeGetSize(selectElement){\r\n    let inputGroupElement = closestByClassName(selectElement, 'input-group');\r\n    let getSize = null;\r\n    if (inputGroupElement){\r\n        getSize = function(){\r\n            var value = null;\r\n            if (inputGroupElement.classList.contains('input-group-lg'))\r\n                value = 'lg';\r\n            else if (inputGroupElement.classList.contains('input-group-sm'))\r\n                value = 'sm';\r\n            return value;\r\n        }\r\n    }\r\n    else{ \r\n        getSize = function(){\r\n            var value = null;\r\n            if (selectElement.classList.contains('form-select-lg') || selectElement.classList.contains('form-control-lg')) // changed for BS4\r\n                value = 'lg';\r\n            else if (selectElement.classList.contains('form-select-sm') || selectElement.classList.contains('form-control-sm'))\r\n                value = 'sm'; \r\n            return value;\r\n        }\r\n    }\r\n    return getSize;\r\n}\r\n\r\nfunction getDefaultLabel(selectElement){\r\n    let value = null;\r\n    let query = `label[for=\"${selectElement.id}\"]`;\r\n    let p1 = selectElement.parentElement;\r\n    value = p1.querySelector(query); // label can be wrapped into col-auto\r\n    if (!value){\r\n        let p2 = p1.parentElement;\r\n        value = p2.querySelector(query);\r\n    }\r\n    return value;\r\n}\r\n\r\nconst css = {\r\n    choices: 'dropdown-menu', // bs4, in bsmultiselect.scss as ul.dropdown-menu\r\n    choice_hover:  'hover',  //  not bs4, in scss as 'ul.dropdown-menu li.hover'\r\n    choice_selected: '', \r\n    choice_disabled: '', \r\n\r\n    picks: 'form-control',  // bs4, in scss 'ul.form-control'\r\n    picks_focus: 'focus', // not bs4, in scss 'ul.form-control.focus'\r\n    picks_disabled: 'disabled', //  not bs4, in scss 'ul.form-control.disabled'\r\n    pick_disabled: '',  \r\n    \r\n    pickFilter: '', \r\n    filterInput: '',\r\n\r\n    // used in pickContentGenerator\r\n    pick: 'badge text-dark', // bs4\r\n    pickContent: '',\r\n    pickContent_disabled: 'disabled', // not bs4, in scss 'ul.form-control li span.disabled'\r\n    pickButton: 'btn-close', // bs4\r\n\r\n    // used in choiceContentGenerator\r\n    // choice:  'dropdown-item', // it seems like hover should be managed manually since there should be keyboard support\r\n    choiceCheckBox_disabled: 'disabled', //  not bs4, in scss as 'ul.form-control li .custom-control-input.disabled ~ .custom-control-label'\r\n    choiceContent: 'form-check', // bs4 d-flex required for rtl to align items\r\n    choiceCheckBox: 'form-check-input', // bs4\r\n    choiceLabel: 'form-check-label',\r\n    choiceLabel_disabled: ''  \r\n}\r\n\r\nconst cssPatch = {\r\n    choices: {listStyleType:'none'},\r\n    picks: {listStyleType:'none', display:'flex', flexWrap:'wrap',  height: 'auto', marginBottom: '0'},\r\n    choice: 'px-md-2 px-1',  \r\n    choice_hover: 'text-primary bg-light', \r\n    filterInput: {\r\n        border:'0px', height: 'auto', boxShadow:'none', \r\n        padding:'0', margin:'0', \r\n        outline:'none', backgroundColor:'transparent',\r\n        backgroundImage: 'none' // otherwise BS .was-validated set its image\r\n    },\r\n    filterInput_empty: 'form-control', // need for placeholder, TODO test form-control-plaintext\r\n\r\n    // used in PicksDom\r\n    picks_disabled: {backgroundColor: '#e9ecef'},\r\n\r\n    picks_focus: {borderColor: '#80bdff', boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'},\r\n    picks_focus_valid: {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)'},\r\n    picks_focus_invalid: {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)'},\r\n    \r\n    // used in BsAppearancePlugin\r\n    picks_def: {minHeight: 'calc(2.25rem + 2px)'},\r\n    picks_lg:  {minHeight: 'calc(2.875rem + 2px)'},\r\n    picks_sm:  {minHeight: 'calc(1.8125rem + 2px)'},\r\n    \r\n    // used in pickContentGenerator\r\n    pick: {paddingLeft: '0px' },\r\n    pickButton: {fontSize:'0.8em',  float : \"none\", verticalAlign: \"text-top\"},\r\n    pickContent_disabled: {opacity: '.65'}, \r\n    \r\n    // used in choiceContentGenerator\r\n    choiceContent: {justifyContent: 'flex-start'}, // BS problem: without this on inline form menu items justified center\r\n    choiceLabel: {color: 'inherit'}, // otherwise BS .was-validated set its color\r\n    choiceCheckBox: {color: 'inherit'},\r\n    choiceLabel_disabled: {opacity: '.65'},  // more flexible than {color: '#6c757d'}; note: avoid opacity on pickElement's border; TODO write to BS4 \r\n\r\n    //floating plugin\r\n    floating_choices: {minHeight: '58px'},\r\n    floating_choices_empty_unfocus: {paddingTop: '1.625rem', paddingBottom : '.625rem', },\r\n    floating_label_empty_unfocus: {opacity: '.65', transform : 'scale(.85) translateY(-.5rem) translateX(.15rem)'},\r\n}\r\n\r\n","import {defCall} from '../ToolsJs';\r\n\r\nexport function LabelPlugin(pluginData){\r\n    let {configuration, staticDom, filterDom} = pluginData;\r\n    let {containerClass, label} = configuration\r\n    let getLabelElementAspect = () => defCall(label); \r\n    let labelPluginData = {getLabelElementAspect}; // overrided by BS Appearance Plugin\r\n    pluginData.labelPluginData=labelPluginData;\r\n    let createInputId = null;\r\n    let {selectElement, containerElement} = staticDom;\r\n    let {filterInputElement} = filterDom;\r\n    if(selectElement)\r\n        createInputId = () => `${containerClass}-generated-input-${((selectElement.id)?selectElement.id:selectElement.name).toLowerCase()}-id`;\r\n    else\r\n        createInputId = () => `${containerClass}-generated-filter-${containerElement.id}`;\r\n\r\n    return {\r\n        buildApi(){\r\n            let labelElement = labelPluginData.getLabelElementAspect();\r\n            let backupedForAttribute = null; // state saved between init and dispose\r\n            if (labelElement) {\r\n                backupedForAttribute = labelElement.getAttribute('for');\r\n                var newId = createInputId();\r\n                filterInputElement.setAttribute('id', newId);\r\n                labelElement.setAttribute('for',newId);\r\n            }\r\n            if (backupedForAttribute)\r\n                return () => labelElement.setAttribute('for',backupedForAttribute);\r\n        }\r\n    }\r\n}","import {getIsRtl, AttributeBackup} from '../ToolsDom';\r\nimport {isBoolean} from '../ToolsJs';\r\n\r\nexport function RtlPlugin(pluginData){\r\n    \r\n    let {configuration, popupAspect, staticDom} = pluginData;\r\n    let {isRtl} = configuration;\r\n    let forceRtlOnContainer = false; \r\n    if (isBoolean(isRtl))\r\n        forceRtlOnContainer = true;\r\n    else\r\n        isRtl = getIsRtl(staticDom.initialElement);\r\n    \r\n    var attributeBackup = AttributeBackup();\r\n    if (forceRtlOnContainer){\r\n        attributeBackup.set(staticDom.containerElement, \"dir\", \"rtl\");\r\n    }\r\n    else if (staticDom.selectElement){\r\n        var dirAttributeValue = staticDom.selectElement.getAttribute(\"dir\");\r\n        if (dirAttributeValue){\r\n            attributeBackup.set(staticDom.containerElement, \"dir\", dirAttributeValue);\r\n        }\r\n    } \r\n    if (isRtl)\r\n        popupAspect.popperConfiguration.placement = 'bottom-end';\r\n    return {\r\n        dispose(){\r\n            attributeBackup.restore;\r\n        }\r\n    }\r\n}","import {EventBinder, closestByTagName} from '../ToolsDom';\r\n\r\nexport function FormResetPlugin(pluginData){\r\n    var {staticDom, environment} = pluginData;\r\n    return {\r\n        buildApi(api){\r\n            var eventBuilder = EventBinder();\r\n            if (staticDom.selectElement){\r\n                var form = closestByTagName(staticDom.selectElement, 'FORM');\r\n                if (form) {\r\n                    eventBuilder.bind(form, \r\n                        'reset', \r\n                        () => environment.window.setTimeout( ()=>api.updateData() ) );\r\n                }\r\n            }\r\n            return eventBuilder.unbind;\r\n        }\r\n    }\r\n}","function createValidity(valueMissing, customError){\r\n    return Object.freeze({\r\n        valueMissing,\r\n        customError,\r\n        valid: !(valueMissing || customError),\r\n    });\r\n}\r\n\r\nexport function ValidityApi(visibleElement, isValueMissingObservable, valueMissingMessage, onValid, trigger){\r\n    var customValidationMessage = \"\";\r\n    var validationMessage = \"\";\r\n    var validity = null;\r\n    var willValidate = true;\r\n    \r\n    function setMessage(valueMissing, customError){\r\n        validity = createValidity(valueMissing, customError);\r\n        validationMessage = customError?customValidationMessage:(valueMissing?valueMissingMessage:\"\")\r\n        visibleElement.setCustomValidity(validationMessage);\r\n        onValid(validity.valid);\r\n    }\r\n\r\n    setMessage(isValueMissingObservable.getValue(), false);\r\n\r\n    isValueMissingObservable.attach(\r\n        (value) => {\r\n            setMessage(value, validity.customError);\r\n        }\r\n    );\r\n    var checkValidity = () => {\r\n        if (!validity.valid)\r\n            trigger('dashboardcode.multiselect:invalid')\r\n        return validity.valid;\r\n    }\r\n    return {\r\n        validationMessage,\r\n        willValidate,\r\n        validity,\r\n        setCustomValidity(message){\r\n            customValidationMessage = message;\r\n            setMessage(validity.valueMissing, customValidationMessage?true:false);\r\n        },\r\n        checkValidity,\r\n        reportValidity(){\r\n            visibleElement.reportValidity();\r\n            return checkValidity();\r\n        }\r\n    }\r\n}","import {ValidityApi} from '../ValidityApi'\r\nimport {ObservableValue, ObservableLambda, defCall, isBoolean, composeSync} from '../ToolsJs';\r\nimport {getDataGuardedWithPrefix} from '../ToolsDom';\r\n\r\nconst defValueMissingMessage = 'Please select an item in the list'\r\n\r\nexport function ValidationApiPlugin(pluginData){\r\n    var {configuration, triggerAspect, onChangeAspect, optionsAspect, \r\n        selectElementPluginData, staticDom, filterDom, updateDataAspect} = pluginData;\r\n    // TODO: required could be a function\r\n    let {getIsValueMissing, valueMissingMessage, required} = configuration;\r\n    if (!isBoolean(required))\r\n        required = selectElementPluginData?.required; \r\n    else if (!isBoolean(required))\r\n        required = false;\r\n    valueMissingMessage = defCall(valueMissingMessage,\r\n        ()=> getDataGuardedWithPrefix(staticDom.initialElement,\"bsmultiselect\",\"value-missing-message\"),\r\n        defValueMissingMessage)\r\n\r\n    if (!getIsValueMissing) {\r\n        getIsValueMissing = () => {\r\n            let count = 0;\r\n            let optionsArray = optionsAspect.getOptions();\r\n            for (var i=0; i < optionsArray.length; i++) {\r\n                if (optionsArray[i].selected) \r\n                    count++;\r\n            }\r\n            return count===0;\r\n        }\r\n    }\r\n    \r\n    var isValueMissingObservable = ObservableLambda(()=>required && getIsValueMissing());\r\n    var validationApiObservable  = ObservableValue(!isValueMissingObservable.getValue());\r\n\r\n    onChangeAspect.onChange = composeSync(isValueMissingObservable.call, onChangeAspect.onChange);\r\n    updateDataAspect.updateData = composeSync(isValueMissingObservable.call, updateDataAspect.updateData);\r\n    pluginData.validationApiPluginData = {validationApiObservable};\r\n\r\n    var validationApi = ValidityApi(\r\n        filterDom.filterInputElement, \r\n        isValueMissingObservable, \r\n        valueMissingMessage,\r\n        (isValid)=>validationApiObservable.setValue(isValid),\r\n        triggerAspect.trigger\r\n        );\r\n\r\n    return {\r\n        buildApi(api){\r\n            api.validationApi = validationApi;\r\n        },\r\n        dispose(){\r\n            isValueMissingObservable.detachAll(); \r\n            validationApiObservable.detachAll();\r\n        }\r\n    }\r\n}\r\n\r\nValidationApiPlugin.plugDefaultConfig = (defaults)=>{\r\n    defaults.valueMissingMessage = '';\r\n}","import {closestByClassName, siblingsAsArray} from '../ToolsDom';\r\nimport {addStyling} from '../ToolsStyling'\r\nimport {ObservableLambda, composeSync} from '../ToolsJs';\r\n\r\nexport function BsAppearancePlugin(pluginData){\r\n    let {configuration, validationApiPluginData, \r\n        picksDom, staticDom, labelPluginData, appearanceAspect, componentPropertiesAspect} = pluginData;\r\n    let {getValidity, getSize, useCssPatch, css, composeGetSize, getDefaultLabel} = configuration;\r\n    let selectElement = staticDom.selectElement;\r\n    \r\n    if (labelPluginData){\r\n        let origGetLabelElementAspect = labelPluginData.getLabelElementAspect;\r\n        labelPluginData.getLabelElementAspect = () => {\r\n            var e = origGetLabelElementAspect();\r\n            if (e)\r\n                return e;\r\n            else{\r\n                if (selectElement){\r\n                    let labelElement = getDefaultLabel(selectElement);\r\n                    return labelElement;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    if (staticDom.selectElement) {\r\n        if(!getValidity)\r\n            getValidity = composeGetValidity(selectElement)\r\n        if(!getSize) \r\n            getSize = composeGetSize(selectElement)\r\n    } else {\r\n        if (!getValidity)\r\n            getValidity = () => null\r\n        if (!getSize)\r\n            getSize = () => null\r\n    }\r\n\r\n    componentPropertiesAspect.getSize=getSize;\r\n    componentPropertiesAspect.getValidity=getValidity;\r\n\r\n    var updateSize;\r\n    if (!useCssPatch){\r\n        updateSize= () => updateSizeForAdapter(picksDom.picksElement, getSize)\r\n    }\r\n    else{\r\n        const {picks_lg, picks_sm, picks_def} = css;\r\n        updateSize = () => updateSizeJsForAdapter(picksDom.picksElement, picks_lg, picks_sm, picks_def, getSize);\r\n    }\r\n\r\n    if (useCssPatch){\r\n        var origToggleFocusStyling = picksDom.toggleFocusStyling;\r\n        picksDom.toggleFocusStyling = () => {\r\n            var validity =  validationObservable.getValue();\r\n            var isFocusIn = picksDom.getIsFocusIn();\r\n            origToggleFocusStyling(isFocusIn)\r\n            if (isFocusIn){\r\n                if (validity===false) { \r\n                    // but not toggle events (I know it will be done in future)\r\n                    picksDom.setIsFocusIn(isFocusIn);\r\n                    \r\n                    addStyling(picksDom.picksElement, css.picks_focus_invalid)\r\n                } else if (validity===true) {\r\n                    // but not toggle events (I know it will be done in future)\r\n                    picksDom.setIsFocusIn(isFocusIn);\r\n                    \r\n                    addStyling(picksDom.picksElement, css.picks_focus_valid)  \r\n                }              \r\n            }\r\n        }\r\n    }\r\n\r\n    var getWasValidated = () => {\r\n        var wasValidatedElement = closestByClassName(staticDom.initialElement, 'was-validated');\r\n        return wasValidatedElement?true:false;\r\n    }\r\n    var wasUpdatedObservable = ObservableLambda(()=>getWasValidated());\r\n    var getManualValidationObservable = ObservableLambda(()=>getValidity());\r\n    let validationApiObservable = validationApiPluginData?.validationApiObservable;\r\n    \r\n    var validationObservable = ObservableLambda(\r\n        () => wasUpdatedObservable.getValue()?validationApiObservable.getValue():getManualValidationObservable.getValue()\r\n    )\r\n  \r\n    validationObservable.attach(\r\n        (value)=>{\r\n            var  {validMessages, invalidMessages} = getMessagesElements(staticDom.containerElement);\r\n            updateValidity( \r\n            picksDom.picksElement,\r\n            validMessages, invalidMessages,\r\n            value);\r\n            picksDom.toggleFocusStyling();\r\n        }\r\n    )\r\n    wasUpdatedObservable.attach(\r\n        ()=>validationObservable.call()\r\n    )\r\n    validationApiObservable.attach(\r\n        ()=>validationObservable.call()\r\n    )\r\n    getManualValidationObservable.attach(\r\n        ()=>validationObservable.call()\r\n    )\r\n\r\n    appearanceAspect.updateAppearance = composeSync(\r\n        appearanceAspect.updateAppearance, \r\n        updateSize, \r\n        validationObservable.call, getManualValidationObservable.call);\r\n\r\n    return {\r\n        buildApi(api){\r\n            api.updateSize = updateSize;\r\n            api.updateValidity = ()=> getManualValidationObservable.call();\r\n            api.updateWasValidated = ()=>wasUpdatedObservable.call();\r\n        },\r\n        dispose(){\r\n            wasUpdatedObservable.detachAll();\r\n            validationObservable.detachAll();\r\n            getManualValidationObservable.detachAll();\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateValidity(picksElement, validMessages, invalidMessages, validity){\r\n    if (validity===false){\r\n        picksElement.classList.add('is-invalid');\r\n        picksElement.classList.remove('is-valid');\r\n        invalidMessages.map(e=>e.style.display='block'); \r\n        validMessages.map(e=>e.style.display='none');      \r\n    }\r\n    else if (validity===true){\r\n        picksElement.classList.remove('is-invalid');\r\n        picksElement.classList.add('is-valid');\r\n        invalidMessages.map(e=>e.style.display='none'); \r\n        validMessages.map(e=>e.style.display='block'); \r\n    }else {\r\n        picksElement.classList.remove('is-invalid');\r\n        picksElement.classList.remove('is-valid');\r\n        invalidMessages.map(e=>e.style.display=''); \r\n        validMessages.map(e=>e.style.display=''); \r\n    }\r\n}\r\n\r\nfunction updateSize(picksElement, size){\r\n    if (size==\"lg\"){\r\n        picksElement.classList.add('form-control-lg');\r\n        picksElement.classList.remove('form-control-sm');\r\n    }\r\n    else if (size==\"sm\"){\r\n        picksElement.classList.remove('form-control-lg');\r\n        picksElement.classList.add('form-control-sm');\r\n    }\r\n    else{\r\n        picksElement.classList.remove('form-control-lg');\r\n        picksElement.classList.remove('form-control-sm');\r\n    }\r\n}\r\n\r\nfunction updateSizeJs(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, size){\r\n    updateSize(picksElement, size);\r\n    if (size==\"lg\"){\r\n        addStyling(picksElement, picksLgStyling);\r\n    } else if (size==\"sm\"){\r\n        addStyling(picksElement, picksSmStyling);\r\n    } else {\r\n        addStyling(picksElement, picksDefStyling);\r\n    }\r\n}\r\n\r\nfunction updateSizeForAdapter(picksElement, getSize){\r\n    updateSize(picksElement, getSize())\r\n}\r\n\r\nfunction updateSizeJsForAdapter(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, getSize){\r\n    updateSizeJs(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, getSize())\r\n}\r\n\r\nfunction getMessagesElements(containerElement){\r\n    var siblings = siblingsAsArray(containerElement);\r\n    var invalidMessages =  siblings.filter(e=>e.classList.contains('invalid-feedback') || \r\n        e.classList.contains('invalid-tooltip'));\r\n    var validMessages =  siblings.filter(e=>e.classList.contains('valid-feedback') || \r\n        e.classList.contains('valid-tooltip'));\r\n    return {validMessages, invalidMessages}    \r\n} \r\n\r\nfunction composeGetValidity(selectElement){\r\n    var getValidity = () => \r\n        selectElement.classList.contains('is-invalid')?false:\r\n        (selectElement.classList.contains('is-valid')?true:null);\r\n    return getValidity;\r\n}\r\n\r\n\r\n\r\n","export function HiddenOptionPlugin(pluginData){\r\n    let {configuration, createWrapAspect, isChoiceSelectableAspect,\r\n        wrapsCollection, buildChoiceAspect, buildAndAttachChoiceAspect,\r\n        countableChoicesListInsertAspect, countableChoicesList} = pluginData;\r\n\r\n    countableChoicesListInsertAspect.countableChoicesListInsert = (wrap, key) => {\r\n        if ( !wrap.isOptionHidden ){\r\n            let choiceNext = wrapsCollection.getNext(key, c=>!c.isOptionHidden );\r\n            countableChoicesList.add(wrap, choiceNext)\r\n        }\r\n    }\r\n\r\n    let origBuildAndAttachChoice = buildAndAttachChoiceAspect.buildAndAttachChoice;\r\n    buildAndAttachChoiceAspect.buildAndAttachChoice=(wrap, getNextElement)=>{\r\n        if (wrap.isOptionHidden){ \r\n            buildHiddenChoice(wrap);\r\n        }\r\n        else{ \r\n            origBuildAndAttachChoice(wrap, getNextElement);\r\n        }\r\n    }\r\n\r\n    var origIsSelectable = isChoiceSelectableAspect.isSelectable;\r\n    isChoiceSelectableAspect.isSelectable = (wrap) => origIsSelectable(wrap) && !wrap.isOptionHidden;\r\n\r\n    let {getIsOptionHidden, options} = configuration;\r\n    if (options) {\r\n        if (!getIsOptionHidden)\r\n            getIsOptionHidden = (option) => (option.hidden===undefined)?false:option.hidden;     \r\n    } else {\r\n        if (!getIsOptionHidden)\r\n            getIsOptionHidden = (option) => {\r\n                return option.hidden;     \r\n            } \r\n    }\r\n    \r\n    var orig–°reateWrap = createWrapAspect.createWrap;\r\n    createWrapAspect.createWrap = (option) => {\r\n        let wrap = orig–°reateWrap(option);\r\n        wrap.isOptionHidden = getIsOptionHidden(option);\r\n        return wrap;\r\n    };\r\n\r\n    return {\r\n        buildApi(api){     \r\n            let getNextNonHidden =  (key) => wrapsCollection.getNext(key, c => !c.isOptionHidden );\r\n\r\n            api.updateOptionsHidden = () => \r\n                wrapsCollection.forLoop( (wrap, key) => \r\n                        updateChoiceHidden(wrap, key, getNextNonHidden, countableChoicesList, getIsOptionHidden, buildChoiceAspect)\r\n                    );\r\n\r\n            api.updateOptionHidden  = (key) => \r\n                updateChoiceHidden(wrapsCollection.get(key), key, getNextNonHidden, countableChoicesList, getIsOptionHidden, buildChoiceAspect);\r\n            // TODO create updateHidden ? \r\n            // it is too complex since we need to find the next non hidden, when this depends on key \r\n            // there should be the backreference \"wrap -> index\" invited before\r\n            // api.updateOptionHidden  = (key) => wrapsCollection.get(key).updateHidden();\r\n        }\r\n    }\r\n}\r\n\r\nfunction buildHiddenChoice(wrap){\r\n    wrap.updateSelected = () => void 0;\r\n    \r\n    wrap.choice.isChoiceElementAttached = false;\r\n    wrap.choice.choiceElement = null;\r\n    wrap.choice.choiceElementAttach = null;\r\n    wrap.choice.setVisible = null; \r\n    wrap.choice.setHoverIn = null;\r\n    wrap.choice.remove = null; \r\n    \r\n    wrap.choice.dispose = () => { \r\n        wrap.choice.dispose = null;\r\n    };\r\n\r\n    wrap.dispose = () => { \r\n        wrap.choice.dispose();\r\n        wrap.dispose = null;\r\n    };\r\n\r\n}\r\n\r\nfunction updateChoiceHidden(wrap, key, getNextNonHidden, countableChoicesList, getIsOptionHidden, buildChoiceAspect){\r\n    let newIsOptionHidden = getIsOptionHidden(wrap.option);\r\n    if (newIsOptionHidden != wrap.isOptionHidden)\r\n    {\r\n        wrap.isOptionHidden= newIsOptionHidden;\r\n        if (wrap.isOptionHidden) {\r\n\r\n            countableChoicesList.remove(wrap);\r\n            wrap.choice.remove(); \r\n            buildHiddenChoice(wrap);\r\n        } else {\r\n            let nextChoice = getNextNonHidden(key);\r\n            countableChoicesList.add(wrap, nextChoice);\r\n            buildChoiceAspect.buildChoice(wrap);\r\n            wrap.choice.choiceElementAttach(nextChoice?.choice.choiceElement);\r\n        }\r\n    }\r\n}\r\n","import {createCss, extendCss} from '../ToolsStyling';\r\nimport {isBoolean} from '../ToolsJs';\r\n\r\nexport function CssPatchPlugin(){\r\n}\r\n\r\nCssPatchPlugin.plugMergeSettings = (configuration, defaults, settings) => {\r\n    let cssPatch = settings?.cssPatch;\r\n    if (isBoolean(cssPatch))\r\n        throw new Error(\"BsMultiSelect: 'cssPatch' was used instead of 'useCssPatch'\") // often type of error\r\n    configuration.cssPatch = createCss(defaults.cssPatch, cssPatch); // replace classes, merge styles\r\n}\r\n\r\nCssPatchPlugin.plugStaticDom = (configurationPluginData) => {\r\n    let {configuration} = configurationPluginData;\r\n    if (configuration.useCssPatch)\r\n        extendCss(configuration.css, configuration.cssPatch); \r\n}","import {composeSync} from '../ToolsJs';\r\nimport {getDataGuardedWithPrefix} from '../ToolsDom';\r\nimport {toggleStyling} from '../ToolsStyling';\r\n\r\nexport function PlaceholderPlugin(pluginData){\r\n    let {configuration, staticManager, picksList, picksDom, filterDom, staticDom, updateDataAspect,\r\n        resetFilterListAspect, filterManagerAspect} = pluginData;\r\n    let {placeholder,  css} = configuration;\r\n    let {picksElement} = picksDom;\r\n    let filterInputElement = filterDom.filterInputElement;\r\n    if (!placeholder){\r\n        placeholder = getDataGuardedWithPrefix(staticDom.initialElement,\"bsmultiselect\",\"placeholder\");\r\n    }\r\n\r\n    function setEmptyInputWidth(isVisible){\r\n        if(isVisible)\r\n            filterInputElement.style.width ='100%';\r\n        else\r\n            filterInputElement.style.width ='2ch';\r\n    }\r\n    var emptyToggleStyling = toggleStyling(filterInputElement, css.filterInput_empty);\r\n    function showPlacehodler(isVisible){\r\n        if (isVisible)\r\n        {\r\n            filterInputElement.placeholder = placeholder?placeholder:'';\r\n            picksElement.style.display = 'block';\r\n        }\r\n        else\r\n        {\r\n            filterInputElement.placeholder = '';\r\n            picksElement.style.display = 'flex';\r\n        }\r\n        emptyToggleStyling(isVisible);\r\n        setEmptyInputWidth(isVisible);\r\n    }\r\n    showPlacehodler(true);\r\n   \r\n    function setDisabled(isComponentDisabled){ \r\n        filterInputElement.disabled = isComponentDisabled;\r\n    };\r\n    let isEmpty = () => picksList.isEmpty() && filterDom.isEmpty()\r\n\r\n    function updatePlacehodlerVisibility(){\r\n        showPlacehodler(isEmpty());\r\n    };\r\n    function updateEmptyInputWidth(){\r\n        setEmptyInputWidth(isEmpty())\r\n    };\r\n            \r\n    let origDisable = picksDom.disable;\r\n    picksDom.disable = (isComponentDisabled)=>{\r\n        setDisabled(isComponentDisabled);\r\n        origDisable(isComponentDisabled);\r\n    };\r\n\r\n    staticManager.appendToContainer = composeSync(staticManager.appendToContainer, updateEmptyInputWidth);\r\n\r\n    filterManagerAspect.processEmptyInput = composeSync(updateEmptyInputWidth, filterManagerAspect.processEmptyInput);\r\n    resetFilterListAspect.forceResetFilter = composeSync(resetFilterListAspect.forceResetFilter, updatePlacehodlerVisibility);\r\n            \r\n    let origAdd = picksList.add;\r\n    picksList.add = (pick) => { \r\n        let returnValue = origAdd(pick);\r\n        if (picksList.getCount()==1) \r\n            updatePlacehodlerVisibility()\r\n        /*wrap.*/pick.dispose = composeSync(/*wrap.*/pick.dispose, ()=>\r\n            { \r\n                if (picksList.getCount()==0) \r\n                    updatePlacehodlerVisibility()\r\n            })\r\n        return returnValue;\r\n    };\r\n\r\n    updateDataAspect.updateData = composeSync(updateDataAspect.updateData, updatePlacehodlerVisibility);\r\n    \r\n}","import  {EventBinder} from '../ToolsDom';\r\nimport  {addStyling, toggleStyling} from '../ToolsStyling';\r\n\r\nexport function JQueryMethodsPlugin(pluginData){\r\n    let {staticDom, choicesDom, filterDom, picksList} = pluginData;\r\n    return {\r\n        buildApi(api){\r\n            api.getContainer = () =>  staticDom.containerElement;\r\n            api.getChoices = () => choicesDom.choicesElement;\r\n            api.getFilterInput = () => filterDom.filterInputElement;\r\n            api.getPicks = () => picksDom.picksElement;\r\n            \r\n            api.picksCount = () => picksList.getCount();\r\n            //api.staticContent = popupAspect; // depricated, alternative accept to popupAspect.setChoicesVisible\r\n\r\n            pluginData.jQueryMethodsPluginData = {EventBinder, addStyling, toggleStyling}\r\n        }\r\n    }\r\n}","export function OptionsApiPlugin(pluginData){\r\n    let {buildAndAttachChoiceAspect, wraps, wrapsCollection, createWrapAspect, createChoiceBaseAspect,\r\n        optionsAspect, resetLayoutAspect} = pluginData;\r\n    return {\r\n        buildApi(api){\r\n\r\n            api.updateOptionAdded = (key) => {  // TODO: generalize index as key \r\n                let options = optionsAspect.getOptions();\r\n                let option = options[key];\r\n                \r\n                let wrap = createWrapAspect.createWrap(option);\r\n                wrap.choice= createChoiceBaseAspect.createChoiceBase(option);\r\n                wraps.insert(key, wrap);\r\n                let nextChoice = ()=> wrapsCollection.getNext(key, c => c.choice.choiceElement);\r\n\r\n                buildAndAttachChoiceAspect.buildAndAttachChoice(\r\n                        wrap,\r\n                        () => nextChoice()?.choice.choiceElement\r\n                    )\r\n            }\r\n        \r\n            api.updateOptionRemoved = (key) => { // TODO: generalize index as key \r\n                resetLayoutAspect.resetLayout(); // always hide 1st, then reset filter\r\n                \r\n                var wrap = wraps.remove(key);\r\n                wrap.choice.remove?.();\r\n                wrap.dispose?.();\r\n            }\r\n        }\r\n    }\r\n}","import {closestByTagName, findDirectChildByTagName, closestByClassName} from '../ToolsDom';\r\nimport {composeSync} from '../ToolsJs';\r\n\r\nexport function SelectElementPlugin(){\r\n}\r\n\r\nSelectElementPlugin.plugStaticDom = (aspects)=>{\r\n    let {configuration, staticDomFactory, createElementAspect,\r\n         componentPropertiesAspect, onChangeAspect, triggerAspect, optionsAspect, disposeAspect} = aspects;\r\n    let {create: origCreate} = staticDomFactory;\r\n    staticDomFactory.create = (css) => {\r\n        let {choicesDom, createStaticDom: origCreateStaticDom} = origCreate(css);\r\n        let {choicesElement} = choicesDom;\r\n        return { \r\n            choicesDom,\r\n            createStaticDom(element, containerClass){\r\n                let selectElement = null;\r\n                let containerElement = null;\r\n                let picksElement = null;\r\n                if (element.tagName == 'SELECT') {\r\n                    selectElement = element;\r\n                    if (containerClass){\r\n                        containerElement = closestByClassName(selectElement, containerClass)\r\n                        if (containerElement)\r\n                            picksElement = findDirectChildByTagName(containerElement, 'UL');\r\n                    }\r\n                } else if (element.tagName == 'DIV') {\r\n                    selectElement = findDirectChildByTagName(element, 'SELECT');\r\n                    if (selectElement) {\r\n                        if (containerClass){\r\n                            containerElement = closestByClassName(element, containerClass);\r\n                            if (containerElement)\r\n                                picksElement = findDirectChildByTagName(containerElement, 'UL');\r\n                        }\r\n                    } else {\r\n                        return origCreateStaticDom(element, containerClass);\r\n                    } \r\n                }\r\n\r\n                let disposableContainerElement = false;\r\n                if (!containerElement) {\r\n                    containerElement = createElementAspect.createElement('DIV');\r\n                    containerElement.classList.add(containerClass);\r\n                    disposableContainerElement= true;\r\n                }\r\n            \r\n                let disposablePicksElement = false;\r\n                if (!picksElement) {\r\n                    picksElement = createElementAspect.createElement('UL');\r\n                    disposablePicksElement = true; \r\n                }\r\n            \r\n                if (selectElement){\r\n                    var backupDisplay = selectElement.style.display;\r\n                    selectElement.style.display = 'none';\r\n\r\n                    var backupedRequired = selectElement.required;\r\n                    aspects.selectElementPluginData =  {required: backupedRequired};\r\n                    if(selectElement.required===true)\r\n                        selectElement.required = false;\r\n\r\n                    let {getDisabled} = configuration;\r\n\r\n                    if(!getDisabled) {\r\n                        var fieldsetElement = closestByTagName(selectElement, 'FIELDSET');\r\n                        if (fieldsetElement) {\r\n                            componentPropertiesAspect.getDisabled = () => selectElement.disabled || fieldsetElement.disabled;\r\n                        } else {\r\n                            componentPropertiesAspect.getDisabled = () => selectElement.disabled;\r\n                        }\r\n                    }\r\n                    onChangeAspect.onChange = composeSync(() => triggerAspect.trigger('change'), onChangeAspect.onChange) \r\n                    optionsAspect.getOptions = () => selectElement.options;\r\n                    \r\n                    // if (!setSelected){\r\n                    //     setSelected = (option, value) => {option.selected = value};\r\n                    //     // NOTE: adding this (setAttribute) break Chrome's html form reset functionality:\r\n                    //     // if (value) option.setAttribute('selected','');\r\n                    //     // else option.removeAttribute('selected');\r\n                    // }\r\n                    \r\n                    disposeAspect.dispose = composeSync(disposeAspect.dispose, () => {\r\n                        selectElement.required = backupedRequired;\r\n                        selectElement.style.display = backupDisplay;\r\n                    });\r\n                }\r\n\r\n                return {\r\n                    staticDom: {\r\n                            initialElement:element,\r\n                            containerElement,\r\n                            picksElement,\r\n                            disposablePicksElement,\r\n                            selectElement\r\n                            }, \r\n                    staticManager :{\r\n                        appendToContainer(){ \r\n                            if (disposableContainerElement){\r\n                                selectElement.parentNode.insertBefore(containerElement, selectElement.nextSibling) \r\n                                containerElement.appendChild(choicesElement)\r\n                            } else {\r\n                                selectElement.parentNode.insertBefore(choicesElement, selectElement.nextSibling)\r\n                            }\r\n                            if (disposablePicksElement)\r\n                                containerElement.appendChild(picksElement)\r\n                        },\r\n                    dispose(){ \r\n                        choicesElement.parentNode.removeChild(choicesElement);\r\n                        if (disposableContainerElement)\r\n                            selectElement.parentNode.removeChild(containerElement) \r\n                        if (disposablePicksElement)\r\n                            containerElement.removeChild(picksElement)\r\n                    }\r\n                }};\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\n// TODO: there should be two new \"independent aspects\" AddPickAspect and RemovePickAspect \r\n// plugin should overdrive them : call setWrapSelected and etc\r\n// therefore there should new component API methods\r\n// addOptionPick(key) -> call addPick(pick) which returns removePick() \r\n// SetOptionSelectedAspect, OptionToggleAspect should be moved there \r\n// OptionToggleAspect overrided in DisabledOptionPlugin\r\n\r\n// wrap.isOptionSelected ,  wrap.updateSelected\r\nexport function SelectedOptionPlugin(aspects){\r\n    let {configuration, wrapsCollection, \r\n        createWrapAspect, buildChoiceAspect, removePickAspect,\r\n        resetLayoutAspect, picksList, isChoiceSelectableAspect, optionToggleAspect,\r\n        /*inputAspect, filterDom, filterManagerAspect,*/ createPickHandlersAspect, addPickAspect,  fullMatchAspect, \r\n        onChangeAspect, filterPredicateAspect\r\n        } = aspects;\r\n    let {getSelected : getIsOptionSelected, setSelected : setIsOptionSelected, options} = configuration;\r\n    \r\n    if (options) {\r\n        if (!setIsOptionSelected){\r\n            setIsOptionSelected = (option, value) => {option.selected = value};\r\n        }\r\n        if (!getIsOptionSelected)\r\n            getIsOptionSelected = (option) => option.selected;     \r\n    } else { // selectElement\r\n        if (!getIsOptionSelected){\r\n            getIsOptionSelected = (option) => option.selected;\r\n        }\r\n        if (!setIsOptionSelected){\r\n            setIsOptionSelected = (option, value) => {option.selected = value};\r\n            // NOTE: adding this (setAttribute) break Chrome's html form reset functionality:\r\n            // if (value) option.setAttribute('selected','');\r\n            // else option.removeAttribute('selected');\r\n        }\r\n    }\r\n\r\n    let origFilterPredicate = filterPredicateAspect.filterPredicate;\r\n    filterPredicateAspect.filterPredicate = (wrap, text) =>\r\n        !wrap.isOptionSelected  &&  origFilterPredicate(wrap, text)\r\n\r\n\r\n    let  origBuildChoice = buildChoiceAspect.buildChoice;\r\n    buildChoiceAspect.buildChoice= (wrap) => {\r\n        origBuildChoice(wrap);\r\n        wrap.updateSelected = () => {\r\n            wrap.choice.choiceDomManagerHandlers.updateSelected();\r\n            onChangeAspect.onChange();\r\n        }\r\n        wrap.dispose = composeSync( ()=>{wrap.updateSelected = null}, wrap.dispose)\r\n    }\r\n\r\n    // TODO: test this instead of wrap.updateSelected\r\n    // function updateSelected(wrap){\r\n    //     if (wrap.pick){\r\n    //         if (wrap.isOptionSelected)\r\n    //             pickHandlers.producePick();\r\n    //         else {\r\n    //             pickHandlers.removeAndDispose();\r\n    //             pickHandlers.removeAndDispose=null;\r\n    //         }\r\n    //     }\r\n    //     wrap.choice.choiceDomManagerHandlers.updateSelected();\r\n    //     onChangeAspect.onChange();\r\n    // }\r\n\r\n\r\n    function composeUpdateSelected(wrap, booleanValue){\r\n        return () => {\r\n            wrap.isOptionSelected = booleanValue;\r\n            wrap.updateSelected();\r\n        }\r\n    }\r\n\r\n    function trySetWrapSelected(option, updateSelected, booleanValue){ //  wrap.option\r\n        let success = false;\r\n        var confirmed = setIsOptionSelected(option, booleanValue);\r\n        if (!(confirmed===false)) {\r\n            updateSelected();\r\n            success = true;\r\n        }\r\n        return success;\r\n    }\r\n\r\n    let origCreateWrap = createWrapAspect.createWrap;\r\n    createWrapAspect.createWrap = (option)=>{\r\n        let wrap = origCreateWrap(option);\r\n        wrap.isOptionSelected = getIsOptionSelected(option);\r\n        wrap.updateSelected = null; // can it be combined ?\r\n        return wrap;\r\n    }\r\n    \r\n\r\n    let origToggle = optionToggleAspect.toggle; // TODO: improve design, no replace\r\n    optionToggleAspect.toggle= (wrap) => {\r\n        return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, !wrap.isOptionSelected), !wrap.isOptionSelected)\r\n    }\r\n \r\n    let origFullMatch = fullMatchAspect.fullMatch;\r\n    fullMatchAspect.fullMatch = (wrap) => {\r\n        return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, true), true);\r\n    }\r\n\r\n    let removePickOrig = removePickAspect.removePick; // TODO: improve design, no replace\r\n    removePickAspect.removePick = (wrap, pick) => { // TODO: try remove pick\r\n        return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, false), false);\r\n    }\r\n\r\n    \r\n    let origCreatePickHandlers =  createPickHandlersAspect.createPickHandlers;\r\n    createPickHandlersAspect.createPickHandlers = (wrap)=>{\r\n        let pickHandlers = origCreatePickHandlers(wrap);\r\n        wrap.updateSelected = composeSync(\r\n            ()=>{\r\n                if (wrap.isOptionSelected){\r\n                    let pick = pickHandlers.producePick();\r\n                    wrap.pick = pick;\r\n                    pick.dispose = composeSync(pick.dispose, ()=>{wrap.pick=null;});\r\n                }\r\n                else {\r\n                    pickHandlers.removeAndDispose();\r\n                    pickHandlers.removeAndDispose=null;\r\n                }\r\n            },\r\n            wrap.updateSelected\r\n        )\r\n\r\n        addPickAspect.addPick(wrap, pickHandlers); \r\n        return pickHandlers;\r\n    }\r\n\r\n    let origAddPick =  addPickAspect.addPick;\r\n    addPickAspect.addPick = (wrap, pickHandlers) => {\r\n        if (wrap.isOptionSelected){\r\n            let pick = origAddPick(wrap, pickHandlers);\r\n            wrap.pick = pick;\r\n            pick.dispose = composeSync(pick.dispose, ()=>{wrap.pick=null;});\r\n            return pick;\r\n        }\r\n    }\r\n\r\n    return {\r\n        buildApi(api){\r\n            api.selectAll= ()=>{\r\n                resetLayoutAspect.resetLayout(); // always hide 1st\r\n                wrapsCollection.forLoop(\r\n                    wrap => {\r\n                        if (isChoiceSelectableAspect.isSelectable(wrap) &&  !wrap.isOptionSelected)\r\n                            trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, true), true)\r\n                    }\r\n                ); \r\n            }\r\n        \r\n            api.deselectAll= ()=>{\r\n                resetLayoutAspect.resetLayout(); // always hide 1st\r\n                picksList.forEach(pick=>pick.setSelectedFalse())\r\n            }\r\n\r\n            api.setOptionSelected = (key, value) => {\r\n                let wrap = wrapsCollection.get(key);\r\n                return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, value), value);\r\n            }\r\n\r\n            // used in FormRestoreOnBackwardPlugin\r\n            api.updateOptionsSelected = () => wrapsCollection.forLoop( wrap => updateChoiceSelected(wrap, getIsOptionSelected))\r\n            api.updateOptionSelected = (key) => updateChoiceSelected(wrapsCollection.get(key), getIsOptionSelected)\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateChoiceSelected(wrap, getIsOptionSelected){\r\n    let newIsSelected = getIsOptionSelected(wrap.option);\r\n    if (newIsSelected != wrap.isOptionSelected)\r\n    {\r\n        wrap.isOptionSelected = newIsSelected;\r\n        wrap.updateSelected?.(); // some hidden oesn't have element (and need to be updated)\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function DisabledOptionPlugin(pluginData){\r\n    let {configuration, isChoiceSelectableAspect, createWrapAspect,  buildChoiceAspect,\r\n        filterPredicateAspect, wrapsCollection, optionToggleAspect, buildPickAspect } = pluginData;\r\n    \r\n    let {getIsOptionDisabled, options} = configuration;\r\n    if (options) {\r\n        if (!getIsOptionDisabled)\r\n            getIsOptionDisabled = (option) => (option.disabled===undefined) ? false : option.disabled;     \r\n    } else { // selectElement\r\n        if (!getIsOptionDisabled)\r\n            getIsOptionDisabled = (option) => option.disabled;     \r\n    }\r\n\r\n    // TODO check this instead of wrap.updateDisabled\r\n    // function updateDisabled(wrap){\r\n    //     wrap?.choice?.choiceDomManagerHandlers?.updateDisabled?.();\r\n    //     wrap?.pick?.pickDomManagerHandlers?.updateDisabled?.();\r\n    // }\r\n\r\n    let orig–°reateWrap = createWrapAspect.createWrap;\r\n    createWrapAspect.createWrap = (option) => {\r\n        let wrap = orig–°reateWrap(option);\r\n        wrap.isOptionDisabled = getIsOptionDisabled(option); // TODO: remove usage wrap.isOptionDisabled\r\n        wrap.updateDisabled = null; \r\n        return wrap;\r\n    };\r\n\r\n    let origToggle = optionToggleAspect.toggle;\r\n    optionToggleAspect.toggle = (wrap) => {\r\n        let success = false;\r\n        if (wrap.isOptionSelected!==undefined){\r\n            if (wrap.isOptionSelected || !wrap.isOptionDisabled) // TODO: declare dependency on SelectedOptionPlugin\r\n                success = origToggle(wrap);\r\n        }\r\n        else{\r\n            if (!wrap.isOptionDisabled) {\r\n                success = origToggle(wrap);\r\n            }\r\n        }\r\n        return success;\r\n    };\r\n\r\n    let origIsSelectable = isChoiceSelectableAspect.isSelectable\r\n    isChoiceSelectableAspect.isSelectable = (wrap) => {\r\n        return  origIsSelectable(wrap) && !wrap.isOptionDisabled ;\r\n    };\r\n\r\n    let origFilterPredicate = filterPredicateAspect.filterPredicate;\r\n    filterPredicateAspect.filterPredicate = (wrap, text) => {\r\n        return  !wrap.isOptionDisabled && origFilterPredicate(wrap, text) ;\r\n    };\r\n\r\n    let origBuildChoice = buildChoiceAspect.buildChoice;\r\n    buildChoiceAspect.buildChoice = (wrap) => {\r\n        origBuildChoice(wrap);\r\n        wrap.updateDisabled = wrap.choice.choiceDomManagerHandlers.updateDisabled\r\n        wrap.choice.dispose = composeSync(()=>{wrap.updateDisabled=null;}, wrap.choice.dispose);\r\n    }\r\n\r\n    \r\n    let origBuildPick = buildPickAspect.buildPick;\r\n    buildPickAspect.buildPick = (wrap, removeOnButton) => {\r\n        let pick = origBuildPick(wrap, removeOnButton);\r\n        \r\n        pick.updateDisabled = () => pick.pickDomManagerHandlers.updateDisabled();\r\n        pick.dispose = composeSync(pick.dispose, ()=>{pick.updateDisabled=null});\r\n\r\n        let choiceUpdateDisabledBackup = wrap.updateDisabled;\r\n        wrap.updateDisabled = composeSync(choiceUpdateDisabledBackup, pick.updateDisabled); // add pickDisabled\r\n        pick.dispose = composeSync(pick.dispose, \r\n            ()=>{\r\n                wrap.updateDisabled = choiceUpdateDisabledBackup; // remove pickDisabled\r\n                wrap.updateDisabled(); // make \"true disabled\" without it checkbox only looks disabled\r\n            }\r\n        )\r\n        return pick;\r\n    }\r\n\r\n    return {\r\n        buildApi(api){\r\n            api.updateOptionsDisabled = () => wrapsCollection.forLoop( wrap => updateChoiceDisabled(wrap, getIsOptionDisabled))\r\n            api.updateOptionDisabled = (key) => updateChoiceDisabled(wrapsCollection.get(key), getIsOptionDisabled)\r\n        }\r\n    };\r\n}\r\n\r\nfunction updateChoiceDisabled(wrap, getIsOptionDisabled){\r\n    let newIsDisabled = getIsOptionDisabled(wrap.option);\r\n    if (newIsDisabled != wrap.isOptionDisabled)\r\n    {\r\n        wrap.isOptionDisabled= newIsDisabled;\r\n        wrap.updateDisabled?.(); // some hidden oesn't have element (and need to be updated)\r\n    }\r\n}","export function FormRestoreOnBackwardPlugin(pluginData){\r\n    let {staticDom, environment, loadAspect, configuration} = pluginData;\r\n    let window = environment.window;\r\n    return {\r\n        buildApi(api){\r\n            if (!api.updateOptionsSelected){\r\n                if (options && configuration.setSelected)\r\n                    throw new Error(\"BsMultisilect: FormRestoreOnBackwardPlugin requires SelectedOptionPlugin defined first\");\r\n            }\r\n            else{\r\n                let origLoad = loadAspect.load;\r\n                loadAspect.load = ()=>{\r\n                    origLoad();\r\n                    // support browser's \"step backward\" and form's values restore\r\n                    if (staticDom.selectElement && window.document.readyState !=\"complete\"){\r\n                        window.setTimeout(function(){api.updateOptionsSelected()});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","export function PicksApiPlugin(pluginData){\r\n    let {picksList, createWrapAspect, createPickHandlersAspect, addPickAspect} = pluginData;\r\n    return {\r\n        buildApi(api){\r\n            api.forEachPeak = (f) => \r\n                picksList.forEach(wrap=>f(wrap.option));\r\n            // TODO: getHeadPeak\r\n            api.getTailPeak = () => picksList.getTail()?.option;\r\n            api.countPeaks = () => picksList.getCount();\r\n            api.isEmptyPeaks = () => picksList.isEmpty();\r\n            \r\n            api.addPick = (option) => {\r\n                let wrap = createWrapAspect.createWrap(option);\r\n                // TODO should be moved to specific plugins\r\n                wrap.updateDisabled = ()=>{};\r\n                wrap.updateHidden = ()=>{};\r\n                let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n                addPickAspect.addPick(wrap, pickHandlers);\r\n            }\r\n        }\r\n    }\r\n}","import {BsMultiSelect as BsMultiSelectBase}  from './BsMultiSelect'\r\nimport {plugDefaultConfig, plugMergeSettings}  from './PluginManager'\r\nimport {Bs5Plugin} from './plugins/Bs5Plugin'\r\nimport {LabelPlugin} from './plugins/LabelPlugin'\r\nimport {RtlPlugin} from './plugins/RtlPlugin'\r\nimport {FormResetPlugin} from './plugins/FormResetPlugin'\r\nimport {ValidationApiPlugin} from './plugins/ValidationApiPlugin'\r\nimport {BsAppearancePlugin} from './plugins/BsAppearancePlugin'\r\nimport {HiddenOptionPlugin} from './plugins/HiddenOptionPlugin'\r\nimport {CssPatchPlugin} from './plugins/CssPatchPlugin'\r\nimport {PlaceholderPlugin} from './plugins/PlaceholderPlugin'\r\nimport {JQueryMethodsPlugin} from './plugins/JQueryMethodsPlugin'\r\nimport {OptionsApiPlugin} from './plugins/OptionsApiPlugin'\r\nimport {SelectElementPlugin} from './plugins/SelectElementPlugin'\r\n\r\nimport {SelectedOptionPlugin} from './plugins/SelectedOptionPlugin'\r\nimport {DisabledOptionPlugin} from './plugins/DisabledOptionPlugin'\r\nimport {FormRestoreOnBackwardPlugin} from './plugins/FormRestoreOnBackwardPlugin'\r\nimport {PicksApiPlugin} from './plugins/PicksApiPlugin'\r\n\r\nimport {createCss} from './ToolsStyling'\r\nimport {extendIfUndefined, composeSync} from './ToolsJs'\r\n\r\nimport  {EventBinder} from './ToolsDom'\r\nimport  {addStyling, toggleStyling} from './ToolsStyling'\r\n\r\nconst defaults = {containerClass : \"dashboardcode-bsmultiselect\"}\r\nconst defaultPlugins = [Bs5Plugin, CssPatchPlugin, SelectElementPlugin, LabelPlugin, HiddenOptionPlugin, ValidationApiPlugin, \r\n    BsAppearancePlugin, FormResetPlugin, RtlPlugin, PlaceholderPlugin , OptionsApiPlugin,\r\n    JQueryMethodsPlugin, SelectedOptionPlugin, FormRestoreOnBackwardPlugin,  DisabledOptionPlugin, PicksApiPlugin];\r\n\r\nfunction BsMultiSelect(element, environment, settings){\r\n    if (!environment.trigger)\r\n        environment.trigger = (e, name) => e.dispatchEvent(new environment.window.Event(name))\r\n\r\n    if (!environment.plugins)\r\n        environment.plugins = defaultPlugins;\r\n    \r\n    let configuration = {};\r\n\r\n    configuration.css = createCss(defaults.css, settings?.css);\r\n    plugMergeSettings(defaultPlugins, configuration, defaults, settings);\r\n\r\n    extendIfUndefined(configuration, settings);\r\n    extendIfUndefined(configuration, defaults);\r\n\r\n    return BsMultiSelectBase(element, environment, configuration, settings?.onInit);\r\n}\r\n\r\nplugDefaultConfig(defaultPlugins, defaults);\r\nBsMultiSelect.defaults=defaults;\r\nBsMultiSelect.tools = {EventBinder, addStyling, toggleStyling, composeSync}\r\nBsMultiSelect.plugins = {Bs5Plugin, CssPatchPlugin, SelectElementPlugin, LabelPlugin, HiddenOptionPlugin, ValidationApiPlugin, \r\n    BsAppearancePlugin, FormResetPlugin, RtlPlugin, PlaceholderPlugin , OptionsApiPlugin, JQueryMethodsPlugin, SelectedOptionPlugin, FormRestoreOnBackwardPlugin,  DisabledOptionPlugin, PicksApiPlugin}\r\n\r\nexport  {\r\n    BsMultiSelect, \r\n    addStyling, toggleStyling, composeSync,\r\n    Bs5Plugin, CssPatchPlugin, SelectElementPlugin, LabelPlugin, HiddenOptionPlugin, ValidationApiPlugin, \r\n    BsAppearancePlugin, FormResetPlugin, RtlPlugin, PlaceholderPlugin , OptionsApiPlugin,\r\n    JQueryMethodsPlugin, SelectedOptionPlugin, FormRestoreOnBackwardPlugin,  DisabledOptionPlugin, PicksApiPlugin}"]}