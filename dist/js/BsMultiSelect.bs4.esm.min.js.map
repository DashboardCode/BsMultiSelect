{"version":3,"sources":["../../src/ToolsDom.js","../../src/ToolsJs.js","../../src/ToolsStyling.js","../../src/PickDomFactory.js","../../src/PicksDomFactory.js","../../src/ChoiceDomFactory.js","../../src/ChoicesDomFactory.js","../../src/FilterDomFactory.js","../../src/DomFactories.js","../../src/plugins/BsAppearancePlugin.js","../../src/plugins/BsAppearanceBs4Plugin.js","../../src/plugins/BsAppearanceBs4CssPatchPlugin.js","../../src/plugins/LabelForAttributePlugin.js","../../src/plugins/RtlPlugin.js","../../src/plugins/FormResetPlugin.js","../../src/plugins/ValidationApiPlugin.js","../../src/plugins/HiddenOptionPlugin.js","../../src/plugins/CssPatchPlugin.js","../../src/plugins/CssPatchBs4Plugin.js","../../src/plugins/JQueryMethodsPlugin.js","../../src/plugins/OptionsApiPlugin.js","../../src/plugins/FormRestoreOnBackwardPlugin.js","../../src/plugins/SelectElementPlugin.js","../../src/plugins/SelectedOptionPlugin.js","../../src/plugins/DisabledOptionPlugin.js","../../src/plugins/PicksApiPlugin.js","../../src/plugins/PicksPlugin.js","../../src/plugins/CreatePopperPlugin.js","../../src/plugins/ChoicesDynamicStylingPlugin.js","../../src/plugins/HighlightPlugin.js","../../src/plugins/CustomChoiceStylingsPlugin.js","../../src/plugins/CustomPickStylingsPlugin.js","../../src/plugins/UpdateAppearancePlugin.js","../../src/plugins/DisableComponentPlugin.js","../../src/plugins/PlaceholderPlugin.js","../../src/plugins/PlaceholderCssPatchPlugin.js","../../src/plugins/FloatingLabelPlugin.js","../../src/plugins/WarningCssPatchPlugin.js","../../src/plugins/WarningPlugin.js","../../src/plugins/WarningBs4Plugin.js","../../src/PluginSet.js","../../src/ToolSet.js","../../src/StaticDomFactory.js","../../src/CreateElementAspect.js","../../src/ChoicesVisibilityAspect.js","../../src/SpecialPicksEventsAspect.js","../../src/ComponentPropertiesAspect.js","../../src/OptionsAspect.js","../../src/ChoicesEnumerableAspect.js","../../src/FilterManagerAspect.js","../../src/BuildChoiceAspect.js","../../src/OptionsLoopAspect.js","../../src/UpdateDataAspect.js","../../src/CreateWrapAspect.js","../../src/NavigateAspect.js","../../src/Wraps.js","../../src/PickButtonAspect.js","../../src/BuildPickAspect.js","../../src/InputAspect.js","../../src/ResetFilterListAspect.js","../../src/MultiSelectInlineLayoutAspect.js","../../src/ResetLayoutAspect.js","../../src/LoadAspect.js","../../src/CountableChoicesListInsertAspect.js","../../src/PicksElementAspect.js","../../src/AfterInputAspect.js","../../src/BsMultiSelect.js","../../src/PluginManager.js","../../src/BsMultiSelectDepricatedParameters.js","../../src/MultiSelectBuilder.js","../../src/ModuleFactory.js","../../src/BsMultiSelect.esm.js"],"names":["findDirectChildByTagName","element","tagName","value","i","children","length","tmp","closestByTagName","closest","e","closestByClassName","className","classList","contains","closestByAttribute","attributeName","attribute","getAttribute","containsAndSelf","node","otherNode","getDataGuardedWithPrefix","prefix","name","tmp1","tmp2","predicate","Element","parentNode","siblingsAsArray","l","push","getIsRtl","isRtl","EventBinder","list","bind","eventName","handler","addEventListener","unbind","forEach","removeEventListener","EventTumbler","on","off","AttributeBackup","set","currentAtribute","setAttribute","restore","removeAttribute","EventLoopProlongableFlag","window","flag","pr","get","timeout","clearTimeout","setTimeout","ResetableFlag","reset","isBoolean","isString","String","extendIfUndefined","destination","source","property","undefined","shallowClearClone","sources","v","s","hasOwnProperty","forEachRecursion","f","prev","indexRecursion","index","List","tail","count","add","next","remove","getTail","getCount","isEmpty","DoublyLinkedList","getPrev","setPrev","getNext","setNext","head","getHead","ArrayFacade","key","splice","start","c","forLoop","composeSync","functions","defCall","Function","ObservableValue","getValue","setValue","newValue","attach","detachAll","ObservableLambda","func","call","ObjectValuesEx","object","arr","addStyling","styling","backupStyling","classes","styles","slice","style","removeStyling","toggleStyling","isOn","isF","force","extendClasses","out","param","actionStr","actionArr","isRemoveEmptyClasses","split","Array","extend","actionObj","Object","Styling","a","o","freeze","createStyling","isReplace","params","extendInt","p","concat","createCss","stylings1","stylings2","param1","param2","extendCss","PickDomFactoryPlugCss","css","pickContent","pickContent_disabled","pickButton","PickDomFactoryPlugCssBs5","PickDomFactoryPlugCssPatch","cssPatch","opacity","PickDomFactoryPlugCssPatchBs4","float","fontSize","lineHeight","PickDomFactory","createElementAspect","optionPropertiesAspect","pickButtonAspect","create","pickElement","wrap","buttonHTML","getButtonHTML","createElementFromHtml","pickContentElement","querySelector","pickButtonElement","eventBinder","disableToggle","pickDom","pickDomManagerHandlers","updateData","textContent","getText","option","updateDisabled","isOptionDisabled","dispose","PicksDomFactory","picksElement","isDisposablePicksElement","pickFilterElement","createElement","picks","pickFilter","disableToggleStyling","picks_disabled","focusToggleStyling","picks_focus","isFocusIn","createPickElement","pick","beforeElement","insertBefore","detach","removeChild","disable","isComponentDisabled","toggleFocusStyling","getIsFocusIn","setIsFocusIn","newIsFocusIn","PicksDomFactoryPlugCss","PicksDomFactoryPlugCssPatch","listStyleType","display","flexWrap","height","marginBottom","cursor","backgroundColor","borderColor","boxShadow","PicksDomFactoryPlugCssPatchBs4","paddingLeft","paddingRight","paddingInlineStart","paddingInlineEnd","ChoiceDomFactory","updateDataInternal","choiceElement","toggle","choiceDom","choiceDomManagerHandlers","choiceContentElement","choiceCheckBoxElement","choiceLabelElement","choiceContent","choiceCheckBox","choiceLabel","choiceSelectedToggle","choice_selected","updateSelected","isOptionSelected","checked","choice","isHoverIn","choiceHoverToggle","choiceDisabledToggle","choice_disabled","choiceCheckBoxDisabledToggle","choiceCheckBox_disabled","choiceLabelDisabledToggle","choiceLabel_disabled","choiceCursorDisabledToggle","isCheckBoxDisabled","disabled","choice_disabled_hover","choice_hover","updateHoverIn","innerHTML","ChoiceDomFactoryPlugCss","ChoiceDomFactoryPlugCssBs5","color","ChoiceDomFactoryPlugCssPatch","ChoicesDomFactory","choicesListElement","choicesElement","appendChild","createChoiceElement","isVisible","choices","choicesList","ChoicesDomFactoryPlugCss","ChoicesDomFactoryPlugCssPatch","FilterDomFactory","filterInputElement","filterInput","setEmpty","setFocus","focus","width","text","setFocusIfNotTarget","target","onInput","onFilterInputInput","onFocusIn","onFocusOut","onfilterInputKeyDown","onFilterInputKeyUp","FilterDomFactoryPlugCss","border","FilterDomFactoryPlugCssPatch","padding","margin","createDefaultCssBs4","defaultCss","PickDomFactoryPlugCssBs4","createDefaultCssBs5","BsAppearancePlugin","plugStaticDomBus","buildAspects","plugStaticDom","after","labelAspect","staticDom","console","configuration","aspects","getDefaultLabel","selectElement","origLabelAspectGetLabel","getLabel","log","labelElement","layout","validationApiAspect","picksDom","updateAppearanceAspect","componentPropertiesAspect","floatingLabelAspect","getSize","useCssPatch","getValidity","composeGetSize","initialElement","isFloatingLabel","composeGetValidity","updateSize","picks_sm","picks_def","picks_floating_def","picks_lg","updateSizeJsForAdapter","updateSizeForAdapter","origToggleFocusStyling","picks_focus_invalid","validity","picks_focus_valid","wasUpdatedObservable","wasValidatedElement","getManualValidationObservable","getWasValidated","validationApiObservable","validationObservable","getMessagesElements","containerElement","validMessages","invalidMessages","updateValidity","updateAppearance","buildApi","api","map","updateSizeClasses","size","updateSizeJsPicks","picksLgStyling","picksSmStyling","picksDefStyling","updateSizeJs","siblings","defaults","pickButtonHTML","inputGroupElement","formGroup","id","minHeight","BsAppearanceBs4CssPatchPlugin","LabelForAttributePlugin","label","labelNewIdAspect","LabelNewIdAspect","filterDom","loadAspect","disposeAspect","LabelForAttributeAspect","load","labelForAttributeAspect","update","LabelAspect","createInputId","containerClass","newId","backupedForAttribute","RtlPlugin","popperRtlAspect","forceRtlOnContainer","attributeBackup","dirAttributeValue","FormResetPlugin","updateDataAspect","environment","eventBuilder","defValueMissingMessage","ValidationApiPlugin","valueMissingMessage","triggerAspect","onChangeAspect","optionsAspect","getIsValueMissing","required","getValueRequired","getOptions","optionsArray","isValueMissingObservable","ValidationApiAspect","isValid","trigger","ValidityApi","visibleElement","onValid","customValidationMessage","valueMissing","customError","willValidate","valid","setMessage","validationMessage","message","checkValidity","reportValidity","HiddenOptionPlugin","createWrapAspect","isChoiceSelectableAspect","wrapsCollection","buildChoiceAspect","buildAndAttachChoiceAspect","countableChoicesListInsertAspect","countableChoicesList","isOptionHidden","countableChoicesListInsert","origBuildAndAttachChoice","buildAndAttachChoice","getNextElement","origIsSelectable","isSelectable","options","getIsOptionHidden","hidden","origCreateWrap","createWrap","updateChoiceHidden","getNextNonHidden","buildHiddenChoice","isChoiceElementAttached","choiceElementAttach","setHoverIn","newIsOptionHidden","nextChoice","buildChoice","CssPatchPlugin","settings","Error","CssPatchBs4Plugin","JQueryMethodsPlugin","choicesDom","picksList","OptionsApiPlugin","wraps","createChoiceBaseAspect","resetLayoutAspect","updateOptionAdded","createChoiceBase","_nextChoice","updateOptionRemoved","resetLayout","FormRestoreOnBackwardPlugin","updateOptionsSelectedAspect","updateOptionsSelected","SelectElementPlugin","staticDomFactory","optGroupAspect","choicesDomFactory","filterDomFactory","picksDomFactory","createStaticDom","origCreateStaticDom","origStaticDomFactoryCreate","disposableContainerElement","backupDisplay","backupedRequired","getDisabled","fieldsetElement","onChange","optGroup","toLowerCase","staticManager","nextSibling","appendToContainer","document","readyState","origLoadAspectLoop","domContentLoadedHandler","SelectedOptionPlugin","setSelected","setIsOptionSelected","getSelected","selected","getIsOptionSelected","removePickAspect","optionToggleAspect","createPickHandlersAspect","addPickAspect","fullMatchAspect","filterPredicateAspect","filterPredicate","origFilterPredicate","composeUpdateSelected","booleanValue","trySetWrapSelected","success","origBuildChoice","fullMatch","origCreatePickHandlers","createPickHandlers","pickHandlers","removeAndDispose","origAddPick","addPick","deselectAll","setSelectedFalse","UpdateOptionsSelectedAspect","updateChoiceSelected","newIsSelected","DisabledOptionPlugin","buildPickAspect","getIsOptionDisabled","origToggle","origBuildPick","buildPick","removeOnButton","choiceUpdateDisabledBackup","updateChoiceDisabled","newIsDisabled","PicksApiPlugin","forEachPeak","getTailPeak","_picksList$getTail","countPeaks","isEmptyPeaks","updateHidden","PicksPlugin","origReset","origAdd","CreatePopperPlugin","PopperRtlAspect","createPopper","globalPopper","Popper","createModifiersVX","anchorElement","popperConfiguration","createPopperConstructor","createPopperVX","CreateModifiersV1","CreateModifiersV2","createPopperConfigurationAspect","CreatePopperConfigurationAspect","createPopperAspect","CreatePopperAspect","choicesVisibilityAspect","specialPicksEventsAspect","CreatePopper_ConstrunctorAspect","pop","init","origBackSpace","updatePopupLocation","preventOverflow","enabled","hide","modifiers","popper","createConfiguration","destroy","placement","ChoicesDynamicStylingPlugin","choicesDynamicStyling","minimalChoicesDynamicStylingMaxHeight","useChoicesDynamicStyling","setChoicesVisible","visible","origSetChoicesVisible","backSpace","navigateAspect","y","documentElement","innerHeight","pos","Math","round","new_y","max","setProperty","ChoicesDynamicStylingPlugin_scrollHandle","origNavigateAspectNavigate","HighlightPlugin","useHighlighting","highlightAspect","HighlightAspect","choiceDomFactory","plugStaticDomFactories","origCreateChoiceDomFactory","updateHighlighted","highlighter","filterManagerAspect","processEmptyInput","origProcessEmptyInput","setFilter","origSetFilter","origSetVisible","CustomChoiceStylingsPlugin","customChoiceStylings","ExtendChoiceDomFactory","customChoiceStylingsAspect","origChoiceDomFactoryCreate","CustomChoiceStylingsAspect","handlers","customChoiceStylingsClosure","custom","CustomPickStylingsPlugin","customPickStylings","pickDomFactory","ExtendPickDomFactory","customPickStylingsAspect","origPickDomFactoryCreate","CustomPickStylingsAspect","customPickStylingsClosure","updateComponentDisabled","UpdateAppearancePlugin","updateAspect","UpdateAppearanceAspect","DisableComponentPlugin","origCreatePickDomFactory","picksElementAspect","onClick","origOnClick","newIsComponentDisabled","disableComponent","onClickUnbind","PlaceholderPlugin","resetFilterListAspect","isIE11","placeholder","ignoreNextInputResetableFlag","setPlaceholder","placeholderStopInputAspect","setPlaceholderOrig","origOnInput","emptyToggleStyling","showPlacehodler","setEmptyInputWidth","origDisable","updateEmptyInputWidth","setDisabled","returnValue","updatePlacehodlerVisibility","PlaceholderStopInputAspect","resetableFlag","PlaceholderCssPatchPlugin","filterInput_empty","label_floating_lifted","FloatingLabelPlugin","picks_floating_lifted","liftToggleStyling2","liftToggleStyling1","liftedLabel","updateLiftedLabel","forceResetFilter","FloatingLabelAspect","WarningCssPatchPlugin","warning","defNoResultsWarningMessage","WarningPlugin","noResultsWarning","isNoResultsWarningEnabled","afterInputAspect","WarningAspect","ExtendAfterInputAspect","warningAspect","pop2","origWarningAspectShow","msg","origVisible","showChoices","visibleCount","origNotVisible","origAppendToContainer","warningElement","show","WarningBs4Plugin","Bs4PluginSet","BsAppearanceBs4Plugin","multiSelectPlugins","utilities","StaticDomFactory","showError","removableContainerClass","CreateElementAspect","ChoicesVisibilityAspect","SpecialPicksEventsAspect","TriggerAspect","OnChangeAspect","OptionsAspect","ChoicesEnumerableAspect","NavigateManager","navigate","searchText","indexOf","filteredChoicesList","choicesEnumerableAspect","showEmptyFilter","filterText","FilterManagerAspect","getNavigateManager","emptyNavigateManager","filteredNavigateManager","getFilter","filteredNext","filteredPrev","BuildAndAttachChoiceAspect","BuildChoiceAspect","setVisible","choiceClickAspect","choiceClick","isFilteredIn","OptionAttachAspect","loop","OptionsLoopAspect","UpdateDataAspect","optionsLoopAspect","IsChoiceSelectableAspect","ChoiceClickAspect","OptionToggleAspect","AddPickAspect","producePick","FullMatchAspect","removePick","RemovePickAspect","ProducePickAspect","event","fixSelectedFalse","pickElementAttach","removeFromPicksList","CreatePickHandlersAspect","producePickAspect","CreateChoiceBaseAspect","trim","itemPrev","CreateWrapAspect","HoveredChoiceAspect","hoveredChoice","getHoveredChoice","setHoveredChoice","resetHoveredChoice","hoverIn","hoveredChoiceAspect","down","Wraps","listFacade_reset","listFacade_remove","listFacade_add","insert","PickButtonAspect","BuildPickAspect","InputAspect","processInput","filterInputValue","_text","fullMatchWrap","ResetFilterListAspect","resetFilter","setFocusIn","MultiSelectInlineLayoutAspect","focusInAspect","inputAspect","skipFocusout","choicesElementMousedownEventTumbler","skipoutMousedown","documentMouseup","isChoicesVisible","eventLoopFlag","hideChoices","resetMouseCandidateChoice","documentMouseupEventTumbler","preventDefaultClickEvent","handleOnRemoveButton","uncheckOption","resetSkipFocusout","processUncheck","mouseCandidateEventBinder","keyDownArrow","onKeyDown","keyCode","empty","preventDefault","stopPropagation","onKeyUp","which","hoveredWrap","hoveredToSelected","clickToShowChoices","setWidth","notVisible","afterInput","onMousedown","skipoutAndResetMousedown","overAndLeaveEventBinder","onChoiceElementMouseover","mouseOverToHoveredAndReset","unbindChoiceElement","ResetLayoutAspect","LoadAspect","CountableChoicesListInsertAspect","choiceNext","PicksElementAspect","componentDisabledEventBinder","skipoutAndResetMousedownEventBinder","AfterInputAspect","panelIsVisble","BsMultiSelect","pluginManager","onInit","MSInputMethodContext","documentMode","ComponentPropertiesAspect","OptionPropertiesAspect","html","warp","itemNext","FilterPredicateAspect","w","NavigateAspect","resetFilterAspect","ResetFilterAspect","FocusInAspect","optionAttachAspect","UpdateAspect","multiSelectInlineLayoutAspect","component","plugins","buildAspectsList","ComposePluginManagerFactory","eventHandlers","events","PluginManager","instances","disposes","_instances$i$buildApi","_instances$i","_instances$i2","_instances$i$dispose","newAspects","_eventHandlers$i$valu","_eventHandlers$i$valu2","_eventHandlers$i$valu3","_eventHandlers$i$valu4","_eventHandlers$i$valu5","_eventHandlers$i$valu6","instance","_eventHandlers$i$valu7","_eventHandlers$i$valu8","transformStyles","old","opt","transformClasses","adjustLegacySettings","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","inputColor","useCss","getIsInValid","MultiSelectBuilder","pluginManagerFactory","buildConfiguration","_options","ModuleFactory$1","customizationPlugins","dispatchEvent","Event","pluginsArray","ModuleFactory","multiSelectPluginsObj","BsMultiSelectDefault","picksPluginsObj","BsPicksDefault","picksPluginsArray","Default","BsPicks","MultiSelectTools","allPlugins","ModuleFactoryImpl","bsMultiSelect"],"mappings":"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","sourcesContent":["export function findDirectChildByTagName(element, tagName){\r\n    let value = null;\r\n    for (let i = 0; i<element.children.length; i++)\r\n    {\r\n        let tmp = element.children[i];\r\n        if (tmp.tagName==tagName)\r\n        {\r\n            value = tmp;\r\n            break;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n\r\nexport function composeEventTrigger(window){ \r\n    let trigger;\r\n    if (typeof(window.Event) === 'function'){\r\n        trigger = (e, eventName) =>{ \r\n            var event = new window.Event(eventName);\r\n            e.dispatchEvent(event);\r\n        }\r\n    }\r\n    else\r\n        trigger = (e, eventName) =>  { // IE 11 polyfill\r\n            let event = window.document.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, false, false, undefined);\r\n            e.dispatchEvent(event);\r\n    }\r\n    return trigger;\r\n}\r\n\r\nexport function closestByTagName(element, tagName){\r\n    return closest(element, e => e.tagName === tagName) // TODO support xhtml?  e.tagName.toUpperCase() ?\r\n}\r\n\r\nexport function closestByClassName(element, className){\r\n    return closest(element, e => e.classList.contains(className))\r\n}\r\n\r\nexport function closestByAttribute(element, attributeName, attribute){\r\n    return closest(element, e => e.getAttribute(attributeName)===attribute )\r\n}\r\n\r\nexport function containsAndSelf(node, otherNode ){\r\n    return node === otherNode || node.contains(otherNode);  \r\n}\r\n\r\nexport function getDataGuardedWithPrefix(element, prefix, name){\r\n    var tmp1 = element.getAttribute('data-' + prefix + '-' + name);\r\n    if (tmp1) {\r\n        return tmp1;\r\n    } else  {\r\n        var tmp2 = element.getAttribute('data-' + name);\r\n        if (tmp2)\r\n            return tmp2;\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction closest(element, predicate){\r\n    if (!element || !(element instanceof Element)) return null; // should be element, not document (TODO: check iframe)\r\n     \r\n    if (predicate(element)) return element;\r\n    return closest(element.parentNode, predicate);\r\n}\r\n\r\nexport function siblingsAsArray(element){\r\n    var value = []\r\n    if (element.parentNode){\r\n        var children = element.parentNode.children;\r\n        var l = element.parentNode.children.length;\r\n        if (children.length>1){\r\n            for (var i=0; i < l; ++i){\r\n                var e = children[i];\r\n                if (e!=element)\r\n                    value.push(e);\r\n                \r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\n\r\nexport function getIsRtl(element){\r\n    var isRtl = false;\r\n    var e = closestByAttribute(element,\"dir\",\"rtl\");\r\n    if (e)\r\n        isRtl = true;\r\n    return isRtl;\r\n}\r\n\r\nexport function EventBinder(){\r\n    var list = [];\r\n    return {\r\n        bind(element, eventName, handler) {\r\n            element.addEventListener(eventName, handler)\r\n            list.push( {element, eventName, handler} )\r\n        },\r\n        unbind() {\r\n            list.forEach( e=> {\r\n                let {element, eventName, handler}=e;\r\n                element.removeEventListener(eventName, handler)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function EventTumbler(element, eventName, handler){\r\n    return {\r\n        on() {\r\n            element.addEventListener(eventName, handler)\r\n        },\r\n        off() {\r\n            element.removeEventListener(eventName, handler)\r\n        }\r\n    }\r\n}\r\n\r\nexport function AttributeBackup(){\r\n    var list = [];\r\n    return {\r\n        set(element, attributeName, attribute){\r\n            var currentAtribute =  element.getAttribute(attributeName); \r\n            list.push( {element, currentAtribute, attribute} )\r\n            element.setAttribute(attributeName, attribute)\r\n        },\r\n        restore(){\r\n            list.forEach(e=>{\r\n                let {element, attributeName, attribute} = e;\r\n                if (attributeName)\r\n                    element.setAttribute(attributeName, attribute)\r\n                else\r\n                    element.removeAttribute(attributeName)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function EventLoopFlag(window) {\r\n    var flag = false;\r\n    return {\r\n        get(){\r\n            return flag;\r\n        },\r\n        set(){\r\n            flag = true;\r\n            pr = window.setTimeout( \r\n                () => {  \r\n                        flag = false;\r\n            })\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport function EventLoopProlongableFlag(window) {\r\n    var flag = false;\r\n    var pr = null;\r\n    return {\r\n        get(){\r\n            return flag;\r\n        },\r\n        set(timeout){\r\n            if (flag && pr){\r\n                window.clearTimeout(pr);\r\n            }\r\n            flag = true;\r\n            pr = window.setTimeout( \r\n                () => {  \r\n                        flag = false;\r\n                        pr=null;\r\n                }, timeout?timeout:0)\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport function ResetableFlag() {\r\n    var flag = false;\r\n    return {\r\n        get(){\r\n            return flag;\r\n        },\r\n        set(){\r\n            flag = true;\r\n        },\r\n        reset(){\r\n            flag = false;\r\n        }\r\n    }\r\n}","export function isBoolean(value){\r\n    return value === true || value === false;\r\n}\r\n\r\nexport function isString(value){\r\n    return value instanceof String || typeof(value) === 'string';\r\n}\r\n\r\nexport function extendIfUndefined(destination, source) {\r\n    for (let property in source)\r\n        if (destination[property] === undefined)\r\n            destination[property] = source[property];\r\n}\r\n\r\nexport function shallowClearClone(source, ...sources) { // override previous, no null and undefined\r\n    var destination = {};\r\n    for (let property in source){ // TODO:  Object.assign (need polyfill for IE11)\r\n        let v = source[property];\r\n        if (!(v === null || v===undefined))\r\n            destination[property] = v;\r\n    }\r\n    if(sources)\r\n        sources.forEach(\r\n            s=>{\r\n                for(let property in s){\r\n                    let v = s[property];\r\n                    if (!(v === null || v===undefined))\r\n                        destination[property] = v;\r\n                    else\r\n                        if (destination.hasOwnProperty(property)){\r\n                            delete destination[property];\r\n                        }\r\n                }\r\n            }\r\n        )\r\n    return destination;\r\n}\r\n\r\nfunction forEachRecursion(f, e){\r\n    if (!e)\r\n        return;\r\n    let goOn = f(e.value); \r\n    if (!(goOn===false))\r\n        forEachRecursion(f, e.prev);\r\n}\r\n\r\nfunction indexRecursion(index, e){\r\n    if (!e.prev)\r\n        return index;\r\n    indexRecursion(++index, e.prev);\r\n}\r\n\r\nexport function List(){\r\n    var tail = null;\r\n    var count = 0;\r\n    return {\r\n        add(e){\r\n            if (tail){\r\n                tail.next = {value:e, prev:tail, next:null};\r\n                tail = tail.next;\r\n            } else \r\n                tail = {value:e, prev:null, next:null}\r\n            count++;\r\n            let node = tail;\r\n            function remove(){\r\n                if (node.prev){\r\n                    (node.prev).next = node.next;\r\n                }\r\n                if (node.next){\r\n                    (node.next).prev = node.prev;\r\n                }\r\n                if (tail == node){\r\n                    tail = node.prev;\r\n                }\r\n                count--;\r\n            }\r\n            function index(){\r\n                return indexRecursion(0, node);\r\n            }\r\n            return {remove, index};\r\n        },\r\n        forEach(f){\r\n            forEachRecursion(f, tail);\r\n        },\r\n        getTail(){ return (tail)?tail.value:null },\r\n        getCount(){ return count },\r\n        isEmpty(){ return count==0 },\r\n        reset(){ tail=null; count = 0 }\r\n    }\r\n}\r\n\r\nexport function DoublyLinkedList(getPrev, setPrev, getNext, setNext){\r\n    var head = null, tail = null;\r\n    var count = 0;\r\n    return {\r\n        add(e, next){\r\n            if (!tail){\r\n                head = tail = e;\r\n                setPrev(e, null);\r\n                setNext(e, null);\r\n            }\r\n            else {\r\n                if (!next){\r\n                    setPrev(e, tail);\r\n                    setNext(e, null);\r\n                    setNext(tail, e);\r\n                    tail = e;\r\n                } \r\n                else{\r\n                    if (next===head)\r\n                        head=e;\r\n                    let prev = getPrev(next);\r\n                    setNext(e, next);\r\n                    setPrev(next, e);\r\n                    if (prev){\r\n                        setPrev(e, prev);\r\n                        setNext(prev, e);\r\n                    } else {\r\n                        setPrev(e, null);\r\n                    }\r\n                } \r\n            }\r\n            count++;\r\n        },\r\n        remove(e){\r\n            let next = getNext(e);\r\n            let prev = getPrev(e);\r\n            if (prev) {\r\n                setNext(prev, next)\r\n            }\r\n            if (next) {\r\n                 setPrev(next, prev)\r\n            }\r\n            if (tail == e) {\r\n                tail = prev;\r\n            }\r\n            if (head == e) {\r\n                head = next; \r\n            }\r\n            count--;\r\n        }, \r\n        getHead(){ return head },\r\n        getTail(){ return tail },\r\n        getCount(){ return count },\r\n        isEmpty(){ return count==0 },\r\n        reset(){ \r\n            tail=head=null; \r\n            count = 0; }\r\n    }\r\n}\r\n\r\nexport function DoublyLinkedCollection(getPrev, setPrev, getNext, setNext){\r\n    var list = [];\r\n    var head = null, tail = null;\r\n    return {\r\n        push(e){\r\n            list.push(e);\r\n            if (!tail){\r\n                head = tail = e;\r\n                setPrev(e, null);\r\n                setNext(e, null);\r\n            }\r\n            else {\r\n                setPrev(e, tail);\r\n                setNext(e, null);\r\n                setNext(tail, e);\r\n                tail = e;\r\n            }\r\n        },\r\n        add(e, key){\r\n            list.splice(key, 0, e);\r\n            if (!tail){\r\n                head = tail = e;\r\n                setPrev(e, null);\r\n                setNext(e, null);\r\n            }\r\n            else {\r\n                let next = list[key];\r\n                if (!next) {\r\n                    setPrev(e, tail);\r\n                    setNext(e, null);\r\n                    setNext(tail, e);\r\n                    tail = e;\r\n                } \r\n                else {\r\n                    if (next===head)\r\n                        head=e;\r\n                    let prev = getPrev(next);\r\n                    setNext(e, next);\r\n                    setPrev(next, e);\r\n                    if (prev){\r\n                        setPrev(e, prev);\r\n                        setNext(prev, e);\r\n                    } else {\r\n                        setPrev(e, null);\r\n                    }\r\n                } \r\n            }\r\n        },\r\n        get: (key) => list[key],\r\n        remove(key){\r\n            var e = list[key];\r\n            list.splice(key, 1);\r\n            let next = getNext(e);\r\n            let prev = getPrev(e);\r\n            if (prev) {\r\n                setNext(prev, next)\r\n            }\r\n            if (next) {\r\n                 setPrev(next, prev)\r\n            }\r\n            if (tail == e) {\r\n                tail = prev;\r\n            }\r\n            if (head == e) {\r\n                head = next; \r\n            }\r\n            return e;\r\n        }, \r\n        forLoop(f){\r\n            for(let i=0; i<list.length; i++)\r\n            {\r\n                let e = list[i];\r\n                f(e);\r\n            }\r\n        },\r\n        getHead(){ return head },\r\n        getTail(){ return tail },\r\n        getCount(){ return list.length },\r\n        isEmpty(){ return list.length==0 },\r\n        reset(){ \r\n            list=[];\r\n            tail=head=null; \r\n            }\r\n    }\r\n}\r\n\r\nexport function ArrayFacade(){\r\n    var list = [];\r\n    return {\r\n        push(e){\r\n            list.push(e);\r\n        },\r\n        add(e, key){\r\n            list.splice(key, 0, e);\r\n        },\r\n        get: (key) => list[key],\r\n        getNext: (key, predicate) => {\r\n            let count = list.length;\r\n            let start = key+1;\r\n            if (key<count) {\r\n                if (!predicate)\r\n                    return list[start];\r\n                for (let i = start; i < count; i++) {\r\n                    let c = list[i];\r\n                    if (predicate(c))\r\n                        return c;\r\n                }\r\n            }\r\n        },\r\n        remove(key){\r\n            var e = list[key];\r\n            list.splice(key, 1);\r\n            return e;\r\n        }, \r\n        forLoop(f){\r\n            for(let i=0; i<list.length; i++)\r\n            {\r\n                let e = list[i];\r\n                f(e, i);\r\n            }\r\n        },\r\n        getHead(){ return list[0] },\r\n        getCount(){ return list.length },\r\n        isEmpty(){ return list.length==0 },\r\n        reset(){ list=[];}\r\n    }\r\n}\r\n\r\nexport function composeSync(...functions){\r\n    return () => \r\n        functions.forEach(\r\n        (f) => {\r\n            if (f)\r\n                f();\r\n        }\r\n    )\r\n}\r\n\r\nexport function defCall(...functions){\r\n    for (let f of functions) \r\n        if (f) {\r\n            if (f instanceof Function){\r\n                let tmp =  f();\r\n                if (tmp)\r\n                    return tmp;\r\n            }\r\n            else\r\n                return f \r\n        }\r\n}\r\n\r\nexport function ObservableValue(value){\r\n    var list = List();\r\n    return {\r\n        getValue(){\r\n            return value;\r\n        },\r\n        setValue(newValue){\r\n            value = newValue;\r\n            list.forEach(f=>f(newValue));\r\n        },\r\n        attach(f){\r\n            return list.add(f)\r\n        },\r\n        detachAll(){\r\n            list.reset();\r\n        }\r\n    }\r\n}\r\n\r\nexport function ObservableLambda(func){\r\n    var list = List();\r\n    var value = func();\r\n    return {\r\n        getValue(){\r\n            return value;\r\n        },\r\n        call(){\r\n            value = func();\r\n            list.forEach(f=>f(value));\r\n        },\r\n        attach(f){\r\n            return list.add(f)\r\n        },\r\n        detachAll(){\r\n            list.reset();\r\n        }\r\n    }\r\n}\r\n\r\n// export function ObjectValues(object){ // Object.values(plugins) - problem for IE11; full impementation of polifill is mor complex, but for our purpose this is enough\r\n//     var arr = [];\r\n// \tfor (var key in object) {\r\n//         arr.push(object[key]);\r\n// \t}\r\n// \treturn arr;\r\n// }\r\n\r\nexport function ObjectValuesEx(object){ \r\n    var arr = [];\r\n\tfor (var key in object) {\r\n        arr.push({key:key, value:object[key]});\r\n\t}\r\n\treturn arr;\r\n}","import {shallowClearClone, isString} from './ToolsJs';\r\n\r\nexport function addStyling(element, styling){\r\n    var backupStyling = {classes:[], styles:{}}\r\n    if (styling) {\r\n        var {classes, styles} = styling;\r\n        classes.forEach(e => element.classList.add(e)) // todo use add(classes)\r\n        backupStyling.classes = classes.slice();\r\n        for (let property in styles){\r\n            backupStyling.styles[property] = element.style[property];\r\n            element.style[property] = styles[property]; // todo use Object.assign (need polyfill for IE11)\r\n        }\r\n    }\r\n    return backupStyling;\r\n}\r\n\r\nfunction removeStyling(element, styling){\r\n    if (styling) {\r\n        var {classes, styles} = styling;\r\n        classes.forEach(e=>element.classList.remove(e)) // todo use remove(classes)\r\n        for (let property in styles)\r\n            element.style[property]  = styles[property]; // todo use Object.assign (need polyfill for IE11)\r\n    }\r\n}\r\n\r\nexport function toggleStyling(element, styling){\r\n    var backupStyling = {classes:[], styles:{}};\r\n    var isOn=false;\r\n    var isF = styling instanceof Function;\r\n    return (value, force)=>{\r\n        if (value) {\r\n            if (isOn===false){\r\n                backupStyling = addStyling(element, isF?styling():styling)\r\n                isOn=true;\r\n            } else if (force){\r\n                removeStyling(element, backupStyling);\r\n                backupStyling =addStyling(element, isF?styling():styling)\r\n            }\r\n        } else {\r\n            if (isOn===true || force===true){\r\n                removeStyling(element, backupStyling);\r\n                isOn=false;\r\n            } \r\n        }\r\n    }\r\n}\r\n\r\nfunction extendClasses(out, param, actionStr, actionArr, isRemoveEmptyClasses){\r\n    if (isString(param)){\r\n        if (param === \"\"){\r\n            if (isRemoveEmptyClasses){\r\n                out.classes = [];\r\n            }\r\n        } else {\r\n            let c = param.split(' ');\r\n            out.classes = actionStr(c);\r\n        }\r\n        return true;\r\n    } else if (param instanceof Array){\r\n        if (param.length==0){\r\n            if (isRemoveEmptyClasses){\r\n                out.classes = [];\r\n            }\r\n        }\r\n        else{\r\n            out.classes = actionArr(param);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction extend(value, param, actionStr, actionArr, actionObj, isRemoveEmptyClasses){\r\n    var success = extendClasses(value, param, actionStr, actionArr, isRemoveEmptyClasses);\r\n    if (success === false){\r\n        if (param instanceof Object){\r\n            var {classes, styles} = param;\r\n            extendClasses(value, classes, actionStr, actionArr, isRemoveEmptyClasses);\r\n            \r\n            if (styles) {\r\n                value.styles = actionObj(styles);\r\n            } else if (!classes) {\r\n                value.styles = actionObj(param)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function Styling(param){\r\n    var value = {classes:[], styles:{}};\r\n    if (param){\r\n        extend(value, param, a=>a, a=>a.slice(), o=>shallowClearClone(o), true);\r\n    }\r\n    return Object.freeze(value);\r\n}\r\n\r\nfunction createStyling(isReplace, param, ...params){\r\n    var value = {classes:[], styles:{}};\r\n    if (param){\r\n        extend(value, param, a=>a, a=>a.slice(), o=>shallowClearClone(o),true);\r\n        if (params){\r\n            var {classes, styles} = value;\r\n            var extendInt = isReplace? (p)=>extend(value, p, s=>s, a=>a.slice(), o=> shallowClearClone(styles, o),true):\r\n                (p)=>extend(value, p, a=>classes.concat(a), a=>classes.concat(a), o=>shallowClearClone(styles, o),false)\r\n            params.forEach(p=> extendInt(p));\r\n        }\r\n    }\r\n    return Styling(value);\r\n}\r\n\r\nexport function createCss(stylings1, stylings2){\r\n    var destination = {};\r\n    for (let property in stylings1) {\r\n        let param1 = stylings1[property];\r\n\r\n        let param2 = stylings2?stylings2[property]:undefined;\r\n        if (param2===undefined)\r\n            destination[property] = Styling(param1)\r\n        else{\r\n            destination[property] = createStyling(true, param1, param2); \r\n        }\r\n    }\r\n    if (stylings2)\r\n        for (let property in stylings2) {\r\n            if (!stylings1[property])\r\n                destination[property] = Styling(stylings2[property])\r\n        }\r\n    return destination;\r\n}\r\n\r\nexport function extendCss(stylings1, stylings2){\r\n    for (let property in stylings2) {\r\n        let param2 = stylings2[property];\r\n        let param1 = stylings1[property];\r\n        if (param1 === undefined)\r\n            stylings1[property] = Styling(param2)\r\n        else{\r\n            stylings1[property] = createStyling(false, param1, param2); \r\n        }\r\n    }\r\n}","import  {EventBinder} from './ToolsDom';\r\nimport  {addStyling, toggleStyling} from './ToolsStyling';\r\n\r\n\r\nexport function PickDomFactoryPlugCss(css){\r\n    css.pickContent = '';\r\n    css.pickContent_disabled = 'disabled';\r\n    css.pickButton = 'close';\r\n}\r\n\r\nexport function PickDomFactoryPlugCssBs4(css){\r\n    css.pickButton = 'close';\r\n}\r\n\r\nexport function PickDomFactoryPlugCssBs5(css){\r\n    css.pickButton = 'btn-close';\r\n}\r\n\r\nexport function PickDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.pickContent_disabled = {opacity: '.65'};\r\n}\r\n\r\nexport function PickDomFactoryPlugCssPatchBs4(cssPatch){\r\n    cssPatch.pickButton = {float : \"none\", fontSize:'1.5em', lineHeight: '.9em', };\r\n}\r\n\r\n\r\nexport function PickDomFactoryPlugCssPatchBs5(cssPatch){\r\n    cssPatch.pickButton = {float : \"none\", fontSize:'0.8em', verticalAlign: \"text-top\"};\r\n}\r\n\r\nexport function PickDomFactory(css, createElementAspect, optionPropertiesAspect, pickButtonAspect){\r\n    return { \r\n        create(pickElement, wrap, remove){\r\n            let buttonHTML = pickButtonAspect.getButtonHTML();\r\n            createElementAspect.createElementFromHtml(pickElement, '<span></span>'+buttonHTML);\r\n            let pickContentElement = pickElement.querySelector('SPAN');\r\n            let pickButtonElement  = pickElement.querySelector('BUTTON');\r\n            let eventBinder = EventBinder();\r\n            eventBinder.bind(pickButtonElement, \"click\", remove);\r\n            \r\n            addStyling(pickContentElement, css.pickContent);\r\n            addStyling(pickButtonElement, css.pickButton);\r\n            let disableToggle = toggleStyling(pickContentElement, css.pickContent_disabled);\r\n\r\n            function updateData(){\r\n                pickContentElement.textContent = optionPropertiesAspect.getText(wrap.option); \r\n            }\r\n            function updateDisabled(){\r\n                disableToggle(wrap.isOptionDisabled)\r\n            }\r\n\r\n            return {\r\n                pickDom:{\r\n                    pickContentElement,\r\n                    pickButtonElement,\r\n                },\r\n                pickDomManagerHandlers:{\r\n                    updateData,\r\n                    updateDisabled,\r\n                },\r\n                dispose(){\r\n                    eventBinder.unbind();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import {addStyling, toggleStyling} from './ToolsStyling';\r\n\r\nexport function PicksDomFactory(css, createElementAspect){\r\n    return {\r\n        create(picksElement, isDisposablePicksElement){\r\n            var pickFilterElement  = createElementAspect.createElement('LI');\r\n    \r\n            addStyling(picksElement,      css.picks);\r\n            addStyling(pickFilterElement, css.pickFilter);\r\n        \r\n            let disableToggleStyling = toggleStyling(picksElement, css.picks_disabled);\r\n            let focusToggleStyling   = toggleStyling(picksElement, css.picks_focus);\r\n            let isFocusIn = false;\r\n        \r\n            return {\r\n                picksElement,\r\n                pickFilterElement,\r\n\r\n                createPickElement(){\r\n                    var pickElement = createElementAspect.createElement('LI');\r\n                    addStyling(pickElement, css.pick);\r\n                    return {\r\n                        pickElement, \r\n                        attach: (beforeElement) => picksElement.insertBefore(pickElement, beforeElement??pickFilterElement),\r\n                        detach: () => picksElement.removeChild(pickElement)\r\n                    };\r\n                },\r\n                disable(isComponentDisabled){\r\n                    disableToggleStyling(isComponentDisabled)\r\n                },\r\n                toggleFocusStyling(){\r\n                    focusToggleStyling(isFocusIn)\r\n                },\r\n                getIsFocusIn(){\r\n                    return isFocusIn;\r\n                },\r\n                setIsFocusIn(newIsFocusIn){\r\n                    isFocusIn = newIsFocusIn\r\n                }, \r\n                dispose(){\r\n                    if (!isDisposablePicksElement){\r\n                        disableToggleStyling(false)\r\n                        focusToggleStyling(false)\r\n\r\n                        if (pickFilterElement.parentNode)\r\n                            pickFilterElement.parentNode.removeChild(pickFilterElement)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function PicksDomFactoryPlugCss(css){\r\n    css.picks = 'form-control';\r\n    css.pickFilter = '';\r\n    css.picks_disabled = 'disabled';\r\n    css.picks_focus = 'focus';\r\n    css.pick = 'badge';\r\n}\r\n\r\nexport function PicksDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.picks = {listStyleType:'none', display:'flex', flexWrap:'wrap',  height: 'auto', marginBottom: '0',cursor: 'text'},\r\n    cssPatch.picks_disabled =  {backgroundColor: '#e9ecef'};\r\n    cssPatch.picks_focus = {borderColor: '#80bdff', boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'};\r\n}\r\n\r\nexport function PicksDomFactoryPlugCssPatchBs4(cssPatch){\r\n    cssPatch.pick = {paddingLeft: '0', paddingRight: '.5rem', paddingInlineStart:'0', paddingInlineEnd:'0.5rem', lineHeight: '1.5em'};\r\n}\r\n\r\nexport function PicksDomFactoryPlugCssPatchBs5(cssPatch){\r\n    cssPatch.pick = {paddingLeft: '0', paddingRight: '.5rem', paddingInlineStart:'0', paddingInlineEnd:'0.5rem', color:'var(--bs-dark)'};\r\n}","import {EventBinder} from './ToolsDom';\r\nimport {addStyling, toggleStyling} from './ToolsStyling';\r\n\r\nexport function ChoiceDomFactory(css, createElementAspect,  optionPropertiesAspect){\r\n    var updateDataInternal = function(wrap, element){\r\n        element.textContent = optionPropertiesAspect.getText(wrap.option);\r\n    }\r\n    //TODO move check which aspects availbale like wrap.hasOwnProperty(\"isOptionSelected\") to there\r\n    return {\r\n        create(choiceElement, wrap, toggle){\r\n            let choiceDom = null;\r\n            let choiceDomManagerHandlers = null;\r\n            let eventBinder = EventBinder();\r\n                eventBinder.bind(choiceElement, \"click\",  toggle);\r\n            \r\n            if (wrap.hasOwnProperty(\"isOptionSelected\")){\r\n                createElementAspect.createElementFromHtml(choiceElement, '<div><input formnovalidate type=\"checkbox\"><label></label></div>');\r\n                \r\n                let choiceContentElement = choiceElement.querySelector('DIV');\r\n                let choiceCheckBoxElement = choiceContentElement.querySelector('INPUT');\r\n                let choiceLabelElement = choiceContentElement.querySelector('LABEL');\r\n                \r\n                addStyling(choiceContentElement,  css.choiceContent); \r\n                addStyling(choiceCheckBoxElement, css.choiceCheckBox); \r\n                addStyling(choiceLabelElement,    css.choiceLabel); \r\n\r\n                choiceDom = {\r\n                    choiceElement,\r\n                    choiceContentElement,\r\n                    choiceCheckBoxElement,\r\n                    choiceLabelElement\r\n                };\r\n                \r\n                let choiceSelectedToggle = toggleStyling(choiceElement, css.choice_selected);\r\n                let updateSelected = function(){ \r\n                    choiceSelectedToggle(wrap.isOptionSelected);\r\n                    choiceCheckBoxElement.checked = wrap.isOptionSelected;\r\n                    if (wrap.isOptionDisabled || wrap.choice.isHoverIn){\r\n                        choiceHoverToggle(wrap.choice.isHoverIn, true);\r\n                    }\r\n                }\r\n\r\n                let choiceDisabledToggle = toggleStyling(choiceElement, css.choice_disabled);\r\n                let choiceCheckBoxDisabledToggle = toggleStyling(choiceCheckBoxElement, css.choiceCheckBox_disabled);\r\n                let choiceLabelDisabledToggle = toggleStyling(choiceLabelElement, css.choiceLabel_disabled);\r\n                let choiceCursorDisabledToggle = toggleStyling(choiceElement, {classes:[], styles:{cursor:\"default\"}}); \r\n                let updateDisabled = function(){\r\n                    choiceDisabledToggle(wrap.isOptionDisabled);\r\n                    choiceCheckBoxDisabledToggle(wrap.isOptionDisabled);\r\n                    choiceLabelDisabledToggle(wrap.isOptionDisabled);\r\n    \r\n                    // do not desable checkBox if option is selected! there should be possibility to unselect \"disabled\"\r\n                    let isCheckBoxDisabled = wrap.isOptionDisabled && !wrap.isOptionSelected;\r\n                    choiceCheckBoxElement.disabled = isCheckBoxDisabled;\r\n                    choiceCursorDisabledToggle(isCheckBoxDisabled);\r\n                }\r\n\r\n                let choiceHoverToggle    = toggleStyling(choiceElement, ()=>{\r\n                    if (css.choice_disabled_hover &&  wrap.isOptionDisabled===true && wrap.isOptionSelected===false)\r\n                        return css.choice_disabled_hover;\r\n                    else\r\n                        return css.choice_hover;\r\n                });\r\n                let updateHoverIn = function(){\r\n                    choiceHoverToggle(wrap.choice.isHoverIn);\r\n                }\r\n\r\n                choiceDomManagerHandlers = {\r\n                    updateData: ()=>updateDataInternal(wrap, choiceLabelElement),\r\n                    updateHoverIn,\r\n                    updateDisabled,\r\n                    updateSelected, \r\n                }\r\n            }else{\r\n                let choiceHoverToggle    = toggleStyling(choiceElement, ()=>\r\n                    (wrap.isOptionDisabled && css.choice_disabled_hover)?css.choice_disabled_hover:css.choice_hover);\r\n                \r\n                let updateHoverIn = function(){\r\n                    choiceHoverToggle(wrap.choice.isHoverIn);\r\n                }\r\n                choiceElement.innerHTML = '<span></span>';\r\n                let choiceContentElement = choiceElement.querySelector('SPAN');\r\n                choiceDom = {\r\n                    choiceElement,\r\n                    choiceContentElement,\r\n                };\r\n                choiceDomManagerHandlers = {\r\n                    updateData: ()=>updateDataInternal(wrap, choiceContentElement),\r\n                    updateHoverIn\r\n                }\r\n            }\r\n            \r\n            return {\r\n                choiceDom,\r\n                choiceDomManagerHandlers, \r\n                dispose(){\r\n                    eventBinder.unbind();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function ChoiceDomFactoryPlugCss(css){\r\n    css.choiceCheckBox_disabled = 'disabled'; //  not bs, in scss as 'ul.form-control li .custom-control-input.disabled ~ .custom-control-label'\r\n    css.choiceLabel_disabled = '';\r\n    css.choice_disabled_hover  = '';\r\n    css.choice_hover = 'hover'; //  not bs, in scss as 'ul.dropdown-menu li.hover'\r\n}\r\n\r\nexport function ChoiceDomFactoryPlugCssBs4(css){\r\n    css.choiceCheckBox = 'custom-control-input';\r\n    css.choiceContent = 'custom-control custom-checkbox d-flex';\r\n    css.choiceLabel = 'custom-control-label justify-content-start';\r\n    css.choice_selected = '';\r\n    css.choice_disabled = '';\r\n}\r\n\r\nexport function ChoiceDomFactoryPlugCssBs5(css){\r\n    css.choiceCheckBox = 'form-check-input'; // bs\r\n    css.choiceContent = 'form-check'; // bs d-flex required for rtl to align items\r\n    css.choiceLabel = 'form-check-label';\r\n    css.choice_selected = 'selected'; //  not bs,\r\n    css.choice_disabled = 'disabled'; //  not bs,\r\n}\r\n\r\nexport function ChoiceDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.choiceCheckBox = {color: 'inherit', cursor:'inherit'};\r\n    cssPatch.choiceContent = {justifyContent: 'flex-start', cursor:'inherit'}; // BS problem: without this on inline form menu items justified center\r\n    cssPatch.choiceLabel = {color: 'inherit', cursor:'inherit'}; // otherwise BS .was-validated set its color\r\n    cssPatch.choiceLabel_disabled = {opacity: '.65'};  // more flexible than {color: '#6c757d'}; note: avoid opacity on pickElement's border; TODO write to BS4 \r\n    cssPatch.choice_disabled_hover  = 'bg-light';\r\n    cssPatch.choice_hover = 'text-primary bg-light';\r\n}\r\n\r\n","import {addStyling} from './ToolsStyling';\r\n\r\nexport function ChoicesDomFactory(css, createElementAspect) {\r\n    return {\r\n        create(){\r\n            var choicesElement = createElementAspect.createElement('DIV');\r\n            var choicesListElement = createElementAspect.createElement('UL');\r\n            \r\n            choicesElement.appendChild(choicesListElement);\r\n            choicesElement.style.display = 'none';\r\n\r\n            addStyling(choicesElement, css.choices);\r\n            addStyling(choicesListElement, css.choicesList);\r\n            \r\n            return {\r\n                choicesElement,\r\n                choicesListElement,\r\n                createChoiceElement(){\r\n                    var choiceElement = createElementAspect.createElement('LI');\r\n                    addStyling(choiceElement, css.choice);\r\n                    return {\r\n                        choiceElement,\r\n                        setVisible: (isVisible) => choiceElement.style.display = isVisible ? 'block': 'none',\r\n                        attach: (beforeElement) => choicesListElement.insertBefore(choiceElement, beforeElement),\r\n                        detach: () => choicesListElement.removeChild(choiceElement)\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function ChoicesDomFactoryPlugCss(css){\r\n    css.choices = 'dropdown-menu';\r\n    css.choicesList = '';\r\n    css.choice = '';\r\n}\r\n\r\nexport function ChoicesDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.choicesList = {listStyleType:'none', paddingLeft:'0', paddingRight:'0', marginBottom:'0'};\r\n    cssPatch.choice = {classes:'px-md-2 px-1', styles:{cursor:'pointer'}};\r\n}\r\n\r\n","import {addStyling} from './ToolsStyling';\r\nimport {EventBinder} from './ToolsDom';\r\n\r\nexport function FilterDomFactory(css, createElementAspect){\r\n    return {\r\n        create(isDisposablePicksElement){\r\n            var filterInputElement = createElementAspect.createElement('INPUT');\r\n            addStyling(filterInputElement, css.filterInput);\r\n        \r\n            filterInputElement.setAttribute(\"type\",\"search\");\r\n            filterInputElement.setAttribute(\"autocomplete\",\"off\");\r\n            var eventBinder = EventBinder();\r\n\r\n            return {\r\n                filterInputElement,\r\n                isEmpty(){return filterInputElement.value ? false : true},\r\n                setEmpty(){\r\n                    filterInputElement.value ='';\r\n                },\r\n                getValue(){\r\n                    return filterInputElement.value;\r\n                },\r\n                setFocus(){\r\n                    filterInputElement.focus();\r\n                },\r\n                setWidth(text){\r\n                    filterInputElement.style.width = text.length * 1.3 + 2 + \"ch\"\r\n                },\r\n                // TODO: check why I need this comparision? \r\n                setFocusIfNotTarget(target){\r\n                    if (target != filterInputElement)\r\n                        filterInputElement.focus();\r\n                },\r\n                onInput(onFilterInputInput){\r\n                    eventBinder.bind(filterInputElement,'input',    onFilterInputInput);\r\n                },\r\n                onFocusIn(onFocusIn){\r\n                    eventBinder.bind(filterInputElement,'focusin',  onFocusIn);\r\n                },\r\n                onFocusOut(onFocusOut){\r\n                    eventBinder.bind(filterInputElement,'focusout', onFocusOut);\r\n                },\r\n                onKeyDown(onfilterInputKeyDown){\r\n                    eventBinder.bind(filterInputElement,'keydown',  onfilterInputKeyDown);    \r\n                },\r\n                onKeyUp(onFilterInputKeyUp){\r\n                    eventBinder.bind(filterInputElement,'keyup',    onFilterInputKeyUp);\r\n                },\r\n                dispose(){\r\n                    eventBinder.unbind();\r\n                    if (!isDisposablePicksElement){\r\n                        if (filterInputElement.parentNode)\r\n                            filterInputElement.parentNode.removeChild(filterInputElement)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function FilterDomFactoryPlugCss(css){\r\n    css.filterInput = '';\r\n}\r\n\r\nexport function FilterDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.filterInput = {\r\n        border:'0px', height: 'auto', boxShadow:'none', \r\n        padding:'0', margin:'0', \r\n        outline:'none', backgroundColor:'transparent',\r\n        backgroundImage: 'none' // otherwise BS .was-validated set its image\r\n    };\r\n}\r\n","import {PickDomFactoryPlugCss, PickDomFactoryPlugCssBs5, PickDomFactoryPlugCssBs4} from './PickDomFactory'\r\nimport {PicksDomFactoryPlugCss} from './PicksDomFactory'\r\nimport {ChoiceDomFactoryPlugCss, ChoiceDomFactoryPlugCssBs5, ChoiceDomFactoryPlugCssBs4} from './ChoiceDomFactory'\r\nimport {ChoicesDomFactoryPlugCss} from './ChoicesDomFactory'\r\nimport {FilterDomFactoryPlugCss} from './FilterDomFactory'\r\n\r\nexport function createDefaultCssBs5(){\r\n    var defaultCss={};\r\n    PickDomFactoryPlugCss(defaultCss)\r\n    PickDomFactoryPlugCssBs5(defaultCss)\r\n    PicksDomFactoryPlugCss(defaultCss)\r\n    ChoiceDomFactoryPlugCss(defaultCss)\r\n    ChoiceDomFactoryPlugCssBs5(defaultCss)\r\n    ChoicesDomFactoryPlugCss(defaultCss)\r\n    FilterDomFactoryPlugCss(defaultCss)\r\n    return defaultCss;\r\n}\r\n\r\nexport function createDefaultCssBs4(){ \r\n    var defaultCss={}\r\n    PickDomFactoryPlugCss(defaultCss)\r\n    PickDomFactoryPlugCssBs4(defaultCss)\r\n    PicksDomFactoryPlugCss(defaultCss)\r\n    ChoiceDomFactoryPlugCss(defaultCss)\r\n    ChoiceDomFactoryPlugCssBs4(defaultCss)\r\n    ChoicesDomFactoryPlugCss(defaultCss)\r\n    FilterDomFactoryPlugCss(defaultCss)\r\n    return defaultCss;\r\n}","import {closestByClassName, siblingsAsArray} from '../ToolsDom';\r\nimport {addStyling} from '../ToolsStyling'\r\nimport {ObservableLambda, composeSync} from '../ToolsJs';\r\n\r\nexport function BsAppearancePlugin(){\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n                plugStaticDomBus: {\r\n                    after: \"LabelForAttributePlugin\",\r\n                    plugStaticDom: () => {\r\n                        console.log(\"TODOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\");\r\n                        var {labelAspect, staticDom, configuration} = aspects; \r\n                        var {selectElement} = staticDom;\r\n                        var {getDefaultLabel} = configuration;\r\n                        let origLabelAspectGetLabel = labelAspect.getLabel; \r\n                        console.log(\"BsAppearancePlugin - new labelAspect.getLabel  \");\r\n                        labelAspect.getLabel = () => {\r\n                            var e = origLabelAspectGetLabel();\r\n                            if (e)\r\n                                return e;\r\n                            else{\r\n                                console.log(\"BsAppearancePlugin - new labelAspect.getLabel  - selectElement\");\r\n                                if (selectElement){\r\n                                    console.log(\"BsAppearancePlugin - new labelAspect.getLabel  - selectElement +\");\r\n                                    let labelElement = getDefaultLabel(selectElement);\r\n                                    console.log({name:\"BsAppearancePlugin - new labelAspect.getLabel  - selectElement +\", labelElement});\r\n                                    return labelElement;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                layout: () => {\r\n                    let {validationApiAspect, \r\n                        picksDom, staticDom, updateAppearanceAspect, componentPropertiesAspect, floatingLabelAspect} = aspects;\r\n                    let {getValidity, getSize, useCssPatch, css, composeGetSize} = configuration;\r\n                    \r\n                    let selectElement = staticDom.selectElement;\r\n                    \r\n                    let initialElement = staticDom.initialElement;\r\n                \r\n                    let isFloatingLabel = false;\r\n                    if (floatingLabelAspect){\r\n                        isFloatingLabel =  closestByClassName(initialElement, 'form-floating');\r\n                        floatingLabelAspect.isFloatingLabel = () => isFloatingLabel\r\n                    }\r\n                \r\n                    if (staticDom.selectElement) {\r\n                        if(!getValidity)\r\n                            getValidity = composeGetValidity(selectElement)\r\n                        if(!getSize) \r\n                            getSize = composeGetSize(selectElement)\r\n                    } else {\r\n                        if (!getValidity)\r\n                            getValidity = () => null\r\n                        if (!getSize)\r\n                            getSize = () => null\r\n                    }\r\n                \r\n                    componentPropertiesAspect.getSize=getSize;\r\n                \r\n                    componentPropertiesAspect.getValidity=getValidity;\r\n                \r\n                    var updateSize;\r\n                    if (!useCssPatch){\r\n                        updateSize= () => updateSizeForAdapter(picksDom.picksElement, getSize)\r\n                    }\r\n                    else{\r\n                        let {picks_lg, picks_sm, picks_def, picks_floating_def} = css;\r\n                        if (isFloatingLabel)\r\n                            picks_lg = picks_sm = picks_def = picks_floating_def;\r\n                        updateSize = () => updateSizeJsForAdapter(picksDom.picksElement, picks_lg, picks_sm, picks_def,  getSize);\r\n                    }\r\n                \r\n                    if (useCssPatch){\r\n                        var origToggleFocusStyling = picksDom.toggleFocusStyling;\r\n                        picksDom.toggleFocusStyling = () => {\r\n                            var validity =  validationObservable.getValue();\r\n                            var isFocusIn = picksDom.getIsFocusIn();\r\n                            origToggleFocusStyling(isFocusIn)\r\n                            if (isFocusIn){\r\n                                if (validity===false) { \r\n                                    // but not toggle events (I know it will be done in future)\r\n                                    picksDom.setIsFocusIn(isFocusIn);\r\n                                    \r\n                                    addStyling(picksDom.picksElement, css.picks_focus_invalid)\r\n                                } else if (validity===true) {\r\n                                    // but not toggle events (I know it will be done in future)\r\n                                    picksDom.setIsFocusIn(isFocusIn);\r\n                                    \r\n                                    addStyling(picksDom.picksElement, css.picks_focus_valid)  \r\n                                }              \r\n                            }\r\n                        }\r\n                    }\r\n                \r\n                    var getWasValidated = () => {\r\n                        var wasValidatedElement = closestByClassName(staticDom.initialElement, 'was-validated');\r\n                        return wasValidatedElement?true:false;\r\n                    }\r\n                    var wasUpdatedObservable = ObservableLambda(()=>getWasValidated());\r\n                    var getManualValidationObservable = ObservableLambda(()=>getValidity());\r\n                    let validationApiObservable = validationApiAspect?.validationApiObservable;\r\n                    \r\n                    var validationObservable = ObservableLambda(\r\n                        () => wasUpdatedObservable.getValue()?validationApiObservable.getValue():getManualValidationObservable.getValue()\r\n                    )\r\n                  \r\n                    validationObservable.attach(\r\n                        (value)=>{\r\n                            var  {validMessages, invalidMessages} = getMessagesElements(staticDom.containerElement);\r\n                            updateValidity( picksDom.picksElement, validMessages, invalidMessages, value);\r\n                            picksDom.toggleFocusStyling();\r\n                        }\r\n                    )\r\n                    wasUpdatedObservable.attach(\r\n                        ()=>validationObservable.call()\r\n                    )\r\n                    if (validationApiObservable)\r\n                        validationApiObservable.attach(\r\n                            ()=>validationObservable.call()\r\n                        )\r\n                    getManualValidationObservable.attach(\r\n                        ()=>validationObservable.call()\r\n                    )\r\n                \r\n                    updateAppearanceAspect.updateAppearance = composeSync(\r\n                        updateAppearanceAspect.updateAppearance, \r\n                        updateSize, \r\n                        validationObservable.call, \r\n                        getManualValidationObservable.call);\r\n                \r\n                    return {\r\n                        buildApi(api){\r\n                            api.updateSize = updateSize;\r\n                            api.updateValidity = ()=> getManualValidationObservable.call();\r\n                            api.updateWasValidated = ()=>wasUpdatedObservable.call();\r\n                        },\r\n                        dispose(){\r\n                            wasUpdatedObservable.detachAll();\r\n                            validationObservable.detachAll();\r\n                            getManualValidationObservable.detachAll();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateValidity(picksElement, validMessages, invalidMessages, validity){\r\n    if (validity===false){\r\n        picksElement.classList.add('is-invalid');\r\n        picksElement.classList.remove('is-valid');\r\n        invalidMessages.map(e=>e.style.display='block'); \r\n        validMessages.map(e=>e.style.display='none');      \r\n    }\r\n    else if (validity===true){\r\n        picksElement.classList.remove('is-invalid');\r\n        picksElement.classList.add('is-valid');\r\n        invalidMessages.map(e=>e.style.display='none'); \r\n        validMessages.map(e=>e.style.display='block'); \r\n    }else {\r\n        picksElement.classList.remove('is-invalid');\r\n        picksElement.classList.remove('is-valid');\r\n        invalidMessages.map(e=>e.style.display=''); \r\n        validMessages.map(e=>e.style.display=''); \r\n    }\r\n}\r\n\r\nfunction updateSizeClasses(picksElement, size){\r\n    if (size==\"lg\"){\r\n        picksElement.classList.add('form-control-lg');\r\n        picksElement.classList.remove('form-control-sm');\r\n    }\r\n    else if (size==\"sm\"){\r\n        picksElement.classList.remove('form-control-lg');\r\n        picksElement.classList.add('form-control-sm');\r\n    }\r\n    else{\r\n        picksElement.classList.remove('form-control-lg');\r\n        picksElement.classList.remove('form-control-sm');\r\n    }\r\n}\r\n\r\nfunction updateSizeJsPicks(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, size){\r\n    if (size==\"lg\"){\r\n        addStyling(picksElement, picksLgStyling);\r\n    } else if (size==\"sm\"){\r\n        addStyling(picksElement, picksSmStyling);\r\n    } else {\r\n        addStyling(picksElement, picksDefStyling);\r\n    }\r\n}\r\n\r\nfunction updateSizeJs(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, size){\r\n    updateSizeClasses(picksElement, size);\r\n    updateSizeJsPicks(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, size)\r\n}\r\n\r\nfunction updateSizeForAdapter(picksElement, getSize){\r\n    updateSizeClasses(picksElement, getSize())\r\n}\r\n\r\nfunction updateSizeJsForAdapter(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, getSize){\r\n    updateSizeJs(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, getSize())\r\n}\r\n\r\nfunction getMessagesElements(containerElement){\r\n    var siblings = siblingsAsArray(containerElement);\r\n    var invalidMessages =  siblings.filter(e=>e.classList.contains('invalid-feedback') || \r\n        e.classList.contains('invalid-tooltip'));\r\n    var validMessages =  siblings.filter(e=>e.classList.contains('valid-feedback') || \r\n        e.classList.contains('valid-tooltip'));\r\n    return {validMessages, invalidMessages}    \r\n} \r\n\r\nfunction composeGetValidity(selectElement){\r\n    var getValidity = () => \r\n        selectElement.classList.contains('is-invalid')?false:\r\n        (selectElement.classList.contains('is-valid')?true:null);\r\n    return getValidity;\r\n}","import {closestByClassName} from '../ToolsDom'\r\nimport {BsAppearancePlugin} from './BsAppearancePlugin'\r\n\r\nexport function BsAppearanceBs4Plugin(defaults) {\r\n    defaults.pickButtonHTML = '<button aria-label=\"Remove\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>';\r\n    defaults.composeGetSize = composeGetSize; // BsAppearancePlugin\r\n    defaults.getDefaultLabel = getDefaultLabel; // FloatingLabelPlugin, BsAppearancePlugin\r\n    return BsAppearancePlugin();\r\n}\r\n\r\nfunction composeGetSize(element){\r\n    let inputGroupElement = closestByClassName(element, 'input-group');\r\n    let getSize = null;\r\n    if (inputGroupElement){\r\n        getSize = function(){\r\n            var value = null;\r\n            if (inputGroupElement.classList.contains('input-group-lg'))\r\n                value = 'lg';\r\n            else if (inputGroupElement.classList.contains('input-group-sm'))\r\n                value = 'sm';\r\n            return value;\r\n        }\r\n    }\r\n    else{ \r\n        getSize = function(){\r\n            var value = null;\r\n            if (element.classList.contains('custom-select-lg') || element.classList.contains('form-control-lg'))\r\n                value = 'lg';\r\n            else if (element.classList.contains('custom-select-sm') || element.classList.contains('form-control-sm'))\r\n                value = 'sm'; \r\n            return value;\r\n        }\r\n    }\r\n    return getSize;\r\n}\r\n\r\nfunction getDefaultLabel(element){\r\n    let value = null;\r\n    let formGroup = closestByClassName(element,'form-group');\r\n    if (formGroup) \r\n        value = formGroup.querySelector(`label[for=\"${element.id}\"]`);\r\n    return value;\r\n}","export function BsAppearanceBs4CssPatchPlugin(defaults){\r\n    let cssPatch = defaults.cssPatch;\r\n    cssPatch.picks_def = {minHeight: 'calc(2.25rem + 2px)'};\r\n    cssPatch.picks_lg = {minHeight: 'calc(2.875rem + 2px)'};\r\n    cssPatch.picks_sm = {minHeight: 'calc(1.8125rem + 2px)'};\r\n\r\n    cssPatch.picks_focus_valid = {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)'};\r\n    cssPatch.picks_focus_invalid = {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)'};           \r\n}","import {defCall, composeSync} from '../ToolsJs';\r\n\r\nexport function LabelForAttributePlugin(defaults){\r\n    defaults.label = null;\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n\t            plugStaticDom: ()=> {\r\n                    aspects.labelAspect = LabelAspect(configuration);\r\n                    aspects.labelNewIdAspect = LabelNewIdAspect(aspects); // ?\r\n        \t    },\r\n                layout: () => {\r\n                    var {filterDom, labelAspect, loadAspect, labelNewIdAspect, disposeAspect} = aspects;\r\n    \r\n                    // TODO: move to \r\n                    console.log(\"LabelForAttributePlugin, labelNewIdAspect\");\r\n                    \r\n                    var labelForAttributeAspect = LabelForAttributeAspect(filterDom, labelAspect, labelNewIdAspect, disposeAspect);\r\n                    aspects.labelForAttributeAspect=labelForAttributeAspect;\r\n                    \r\n                    loadAspect.load = composeSync(loadAspect.load, ()=>labelForAttributeAspect.update())\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction LabelAspect(configuration){\r\n    return {\r\n        getLabel(){\r\n            return defCall(configuration.label); \r\n        }\r\n    }\r\n}\r\n\r\n// TODO migrate to configuration\r\nfunction LabelNewIdAspect(aspects){\r\n    return {\r\n        createInputId(){\r\n            let {configuration, staticDom}=aspects;\r\n            let {containerClass} = configuration;\r\n            let {containerElement} = staticDom;\r\n        \r\n            let a =`${containerClass}-generated-filter-${containerElement.id}` \r\n            console.log('LabelNewIdAspect - ' + a);\r\n            return a; \r\n            //`${containerClass}-generated-input-${((selectElement.id)?selectElement.id:selectElement.name).toLowerCase()}-id`;\r\n        }\r\n    }\r\n}\r\n\r\nfunction LabelForAttributeAspect(filterDom, labelAspect, labelNewIdAspect, disposeAspect){\r\n    return{\r\n        update(){  \r\n            //let createInputId = null;\r\n            //let {selectElement, containerElement} = staticDom;\r\n            let {filterInputElement} = filterDom;\r\n\r\n            // if (selectElement)\r\n            //     createInputId = () => `${containerClass}-generated-input-${((selectElement.id)?selectElement.id:selectElement.name).toLowerCase()}-id`;\r\n            // else\r\n            //     createInputId = () => `${containerClass}-generated-filter-${containerElement.id}`;\r\n            \r\n            let labelElement =  labelAspect.getLabel(); //getLabelElementAspect.getLabelElement();\r\n            console.log(\"LabelForAttributeAspect - \" );\r\n            if (labelElement) {\r\n                console.log(\"LabelForAttributeAspect + \" );\r\n                let backupedForAttribute = labelElement.getAttribute('for');\r\n                var newId = labelNewIdAspect.createInputId();\r\n                filterInputElement.setAttribute('id', newId);\r\n                labelElement.setAttribute('for',newId);\r\n                if (backupedForAttribute){\r\n                    disposeAspect.dispose = composeSync(\r\n                        disposeAspect.dispose, \r\n                        () =>labelElement.setAttribute('for',backupedForAttribute)\r\n                    )\r\n                }\r\n            }\r\n        } \r\n    }\r\n}","\r\nimport {getIsRtl, AttributeBackup} from '../ToolsDom';\r\nimport {isBoolean} from '../ToolsJs';\r\n\r\nexport function RtlPlugin(){\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n                layout: () => {\r\n                    let {popperRtlAspect, staticDom} = aspects;\r\n                    let {isRtl} = configuration;\r\n                    let forceRtlOnContainer = false; \r\n                    if (isBoolean(isRtl))\r\n                        forceRtlOnContainer = true;\r\n                    else\r\n                        isRtl = getIsRtl(staticDom.initialElement);\r\n\r\n                    var attributeBackup = AttributeBackup();\r\n                    if (forceRtlOnContainer){\r\n                        attributeBackup.set(staticDom.containerElement, \"dir\", \"rtl\");\r\n                    }\r\n                    else if (staticDom.selectElement){\r\n                        var dirAttributeValue = staticDom.selectElement.getAttribute(\"dir\");\r\n                        if (dirAttributeValue){\r\n                            attributeBackup.set(staticDom.containerElement, \"dir\", dirAttributeValue);\r\n                        }\r\n                    }\r\n                \r\n                    if (popperRtlAspect)\r\n                        popperRtlAspect.getIsRtl = () => isRtl;\r\n                \r\n                    return {\r\n                        dispose(){\r\n                            attributeBackup.restore();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {EventBinder, closestByTagName} from '../ToolsDom';\r\n\r\nexport function FormResetPlugin(){\r\n    return {\r\n        buildAspects: (aspects) => {\r\n            return {\r\n                layout: () => {\r\n                    var {staticDom, updateDataAspect, environment} = aspects;\r\n\r\n                    var eventBuilder = EventBinder();\r\n                    if (staticDom.selectElement){\r\n                        var form = closestByTagName(staticDom.selectElement, 'FORM');\r\n                        if (form) {\r\n                            eventBuilder.bind(form, \r\n                                'reset', \r\n                                () => environment.window.setTimeout( ()=>updateDataAspect.updateData() ) );\r\n                        }\r\n                    }\r\n                    return {\r\n                        dispose(){\r\n                            eventBuilder.unbind();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// export function FormResetPlugin(aspects){\r\n//     var {staticDom, updateDataAspect, environment} = aspects;\r\n\r\n//     var eventBuilder = EventBinder();\r\n//     if (staticDom.selectElement){\r\n//         var form = closestByTagName(staticDom.selectElement, 'FORM');\r\n//         if (form) {\r\n//             eventBuilder.bind(form, \r\n//                 'reset', \r\n//                 () => environment.window.setTimeout( ()=>updateDataAspect.updateData() ) );\r\n//         }\r\n//     }\r\n//     return {\r\n//         dispose(){\r\n//             eventBuilder.unbind();\r\n//         }\r\n//     }\r\n// }","import {ObservableValue, ObservableLambda, defCall, isBoolean, composeSync} from '../ToolsJs';\r\nimport {getDataGuardedWithPrefix} from '../ToolsDom';\r\n\r\nconst defValueMissingMessage = 'Please select an item in the list'\r\n\r\nexport function ValidationApiPlugin(defaults){\r\n    defaults.getValueRequired = function(){\r\n        return false;\r\n    }\r\n    defaults.valueMissingMessage = '';\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n                layout: () => {\r\n                    var {triggerAspect, onChangeAspect, optionsAspect, \r\n                        staticDom, filterDom, updateDataAspect} = aspects;\r\n                   // TODO: required could be a function\r\n                   let {getIsValueMissing, valueMissingMessage, required, getValueRequired} = configuration;\r\n                   if (!isBoolean(required))\r\n                       required = getValueRequired(); \r\n                   valueMissingMessage = defCall(valueMissingMessage,\r\n                       ()=> getDataGuardedWithPrefix(staticDom.initialElement,\"bsmultiselect\",\"value-missing-message\"),\r\n                       defValueMissingMessage)\r\n               \r\n                   if (!getIsValueMissing) {\r\n                       getIsValueMissing = () => {\r\n                           let count = 0;\r\n                           let optionsArray = optionsAspect.getOptions();\r\n                           for (var i=0; i < optionsArray.length; i++) {\r\n                               if (optionsArray[i].selected) \r\n                                   count++;\r\n                           }\r\n                           return count===0;\r\n                       }\r\n                   }\r\n                   \r\n                   var isValueMissingObservable = ObservableLambda(()=>required && getIsValueMissing());\r\n                   var validationApiObservable  = ObservableValue(!isValueMissingObservable.getValue());\r\n               \r\n                   onChangeAspect.onChange = composeSync(isValueMissingObservable.call, onChangeAspect.onChange);\r\n                   updateDataAspect.updateData = composeSync(isValueMissingObservable.call, updateDataAspect.updateData);\r\n               \r\n                   aspects.validationApiAspect = ValidationApiAspect(validationApiObservable);\r\n               \r\n                   return {\r\n                       buildApi(api){\r\n                           api.validationApi = ValidityApi(\r\n                               filterDom.filterInputElement, \r\n                               isValueMissingObservable, \r\n                               valueMissingMessage,\r\n                               (isValid)=>validationApiObservable.setValue(isValid),\r\n                               triggerAspect.trigger\r\n                           );\r\n                       },\r\n                       dispose(){\r\n                           isValueMissingObservable.detachAll(); \r\n                           validationApiObservable.detachAll();\r\n                       }\r\n                   }\r\n                },\r\n                layoutInit: (aspects)=> {\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ValidationApiAspect(validationApiObservable){\r\n    return {\r\n        validationApiObservable\r\n    }\r\n}\r\n\r\nfunction ValidityApi(visibleElement, isValueMissingObservable, valueMissingMessage, onValid, trigger){\r\n    var customValidationMessage = \"\";\r\n    var validationMessage = \"\";\r\n    var validity = null;\r\n    var willValidate = true;\r\n    \r\n    function setMessage(valueMissing, customError){\r\n        validity = Object.freeze({\r\n            valueMissing,\r\n            customError,\r\n            valid: !(valueMissing || customError),\r\n        });\r\n        validationMessage = customError?customValidationMessage:(valueMissing?valueMissingMessage:\"\")\r\n        visibleElement.setCustomValidity(validationMessage);\r\n        onValid(validity.valid);\r\n    }\r\n\r\n    setMessage(isValueMissingObservable.getValue(), false);\r\n\r\n    isValueMissingObservable.attach(\r\n        (value) => {\r\n            setMessage(value, validity.customError);\r\n        }\r\n    );\r\n    var checkValidity = () => {\r\n        if (!validity.valid)\r\n            trigger('dashboardcode.multiselect:invalid')\r\n        return validity.valid;\r\n    }\r\n    return {\r\n        validationMessage,\r\n        willValidate,\r\n        validity,\r\n        setCustomValidity(message){\r\n            customValidationMessage = message;\r\n            setMessage(validity.valueMissing, customValidationMessage?true:false);\r\n        },\r\n        checkValidity,\r\n        reportValidity(){\r\n            visibleElement.reportValidity();\r\n            return checkValidity();\r\n        }\r\n    }\r\n}","export function HiddenOptionPlugin(){\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n                layout: () => {\r\n                    let {createWrapAspect, isChoiceSelectableAspect,\r\n                        wrapsCollection, buildChoiceAspect, buildAndAttachChoiceAspect,\r\n                        countableChoicesListInsertAspect, countableChoicesList} = aspects;\r\n                \r\n                    countableChoicesListInsertAspect.countableChoicesListInsert = (wrap, key) => {\r\n                        if ( !wrap.isOptionHidden ){\r\n                            let choiceNext = wrapsCollection.getNext(key, c=>!c.isOptionHidden );\r\n                            countableChoicesList.add(wrap, choiceNext)\r\n                        }\r\n                    }\r\n                \r\n                    let origBuildAndAttachChoice = buildAndAttachChoiceAspect.buildAndAttachChoice;\r\n                    buildAndAttachChoiceAspect.buildAndAttachChoice=(wrap, getNextElement)=>{\r\n                        if (wrap.isOptionHidden){ \r\n                            buildHiddenChoice(wrap);\r\n                        }\r\n                        else{ \r\n                            origBuildAndAttachChoice(wrap, getNextElement);\r\n                        }\r\n                    }\r\n                \r\n                    var origIsSelectable = isChoiceSelectableAspect.isSelectable;\r\n                    isChoiceSelectableAspect.isSelectable = (wrap) => origIsSelectable(wrap) && !wrap.isOptionHidden;\r\n                \r\n                    let {getIsOptionHidden, options} = configuration;\r\n                    if (options) {\r\n                        if (!getIsOptionHidden)\r\n                            getIsOptionHidden = (option) => (option.hidden===undefined)?false:option.hidden;     \r\n                    } else {\r\n                        if (!getIsOptionHidden)\r\n                            getIsOptionHidden = (option) => {\r\n                                return option.hidden;     \r\n                            } \r\n                    }\r\n                    \r\n                    var origCreateWrap = createWrapAspect.createWrap;\r\n                    createWrapAspect.createWrap = (option) => {\r\n                        let wrap = origCreateWrap(option);\r\n                        wrap.isOptionHidden = getIsOptionHidden(option);\r\n                        return wrap;\r\n                    };\r\n                \r\n                    return {\r\n                        buildApi(api){     \r\n                            let getNextNonHidden =  (key) => wrapsCollection.getNext(key, c => !c.isOptionHidden );\r\n                \r\n                            api.updateOptionsHidden = () => \r\n                                wrapsCollection.forLoop( (wrap, key) => \r\n                                        updateChoiceHidden(wrap, key, getNextNonHidden, countableChoicesList, getIsOptionHidden, buildChoiceAspect)\r\n                                    );\r\n                \r\n                            api.updateOptionHidden  = (key) => \r\n                                updateChoiceHidden(wrapsCollection.get(key), key, getNextNonHidden, countableChoicesList, getIsOptionHidden, buildChoiceAspect);\r\n                            // TODO create updateHidden ? \r\n                            // it is too complex since we need to find the next non hidden, when this depends on key \r\n                            // there should be the backreference \"wrap -> index\" invited before\r\n                            // api.updateOptionHidden  = (key) => wrapsCollection.get(key).updateHidden();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nfunction buildHiddenChoice(wrap){\r\n    wrap.updateSelected = () => void 0;\r\n    \r\n    wrap.choice.isChoiceElementAttached = false;\r\n    wrap.choice.choiceElement = null;\r\n    wrap.choice.choiceElementAttach = null;\r\n    wrap.choice.setVisible = null; \r\n    wrap.choice.setHoverIn = null;\r\n    wrap.choice.remove = null; \r\n    \r\n    wrap.choice.dispose = () => { \r\n        wrap.choice.dispose = null;\r\n    };\r\n\r\n    wrap.dispose = () => { \r\n        wrap.choice.dispose();\r\n        wrap.dispose = null;\r\n    };\r\n}\r\n\r\nfunction updateChoiceHidden(wrap, key, getNextNonHidden, countableChoicesList, getIsOptionHidden, buildChoiceAspect){\r\n    let newIsOptionHidden = getIsOptionHidden(wrap.option);\r\n    if (newIsOptionHidden != wrap.isOptionHidden)\r\n    {\r\n        wrap.isOptionHidden= newIsOptionHidden;\r\n        if (wrap.isOptionHidden) {\r\n\r\n            countableChoicesList.remove(wrap);\r\n            wrap.choice.remove(); \r\n            buildHiddenChoice(wrap);\r\n        } else {\r\n            let nextChoice = getNextNonHidden(key);\r\n            countableChoicesList.add(wrap, nextChoice);\r\n            buildChoiceAspect.buildChoice(wrap);\r\n            wrap.choice.choiceElementAttach(nextChoice?.choice.choiceElement);\r\n        }\r\n    }\r\n}\r\n","import {createCss, extendCss} from '../ToolsStyling';\r\nimport {isBoolean} from '../ToolsJs';\r\n\r\nexport function CssPatchPlugin(defaults){\r\n    defaults.useCssPatch = true;\r\n    return {\r\n        buildAspects: (aspects, configuration, settings) => {\r\n            // merge\r\n            let cssPatch = settings?.cssPatch;\r\n            if (isBoolean(cssPatch))\r\n                throw new Error(\"BsMultiSelect: 'cssPatch' was used instead of 'useCssPatch'\") // often type of error\r\n            configuration.cssPatch = createCss(defaults.cssPatch, cssPatch); // replace classes, merge styles\r\n            return {\r\n                // TODO: this means after all cssPatch added, but this should be done different way (another static extension point?)\r\n                plugStaticDom: () => {\r\n                    if (configuration.useCssPatch)\r\n                        extendCss(configuration.css, configuration.cssPatch); \r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst _cssPatchBs5 = {\r\n    choicesList: {listStyleType:'none', paddingLeft:'0', paddingRight:'0', marginBottom:'0'},\r\n    picks: {listStyleType:'none', display:'flex', flexWrap:'wrap',  height: 'auto', marginBottom: '0', cursor: 'text'},\r\n    choice: {classes:'px-md-2 px-1', styles:{cursor:'pointer'}},\r\n    //choice_selected: 'selected',  //  remove,\r\n    //choice_disabled: 'disabled',  //  remove,\r\n    choice_hover: 'text-primary bg-light', \r\n    choice_disabled_hover: 'bg-light', // actually 'disabled, not selected'\r\n    filterInput: {\r\n        border:'0px', height: 'auto', boxShadow:'none', \r\n        padding:'0', margin:'0', \r\n        outline:'none', backgroundColor:'transparent',\r\n        backgroundImage: 'none' // otherwise BS .was-validated set its image\r\n    },\r\n    filterInput_empty: 'form-control', // need for placeholder, TODO test form-control-plaintext\r\n\r\n    // used in PicksDom\r\n    picks_disabled: {backgroundColor: '#e9ecef'},\r\n\r\n    picks_focus: {borderColor: '#80bdff', boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'},\r\n    picks_focus_valid: {borderColor: '',  boxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)'},\r\n    picks_focus_invalid: {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)'},\r\n    \r\n    // used in BsAppearancePlugin\r\n    picks_def: {minHeight: 'calc(2.25rem + 2px)'},\r\n    picks_lg:  {minHeight: 'calc(2.875rem + 2px)'},\r\n    picks_sm:  {minHeight: 'calc(1.8125rem + 2px)'},\r\n    picks_floating_def: {minHeight: 'calc(3.5rem + 2px)'},\r\n    \r\n    // used in pickContentGenerator\r\n    pick: {paddingLeft: '0', paddingRight: '.5rem', paddingInlineStart:'0', paddingInlineEnd:'0.5rem', color:'var(--bs-dark)'},\r\n    pickButton: {fontSize:'0.8em',  float : \"none\", verticalAlign: \"text-top\"},\r\n    pickContent_disabled: {opacity: '.65'}, \r\n    \r\n    // used in choiceContentGenerator\r\n    choiceContent: {justifyContent: 'flex-start', cursor:'inherit'}, // BS problem: without this on inline form menu items justified center\r\n    choiceLabel: {color: 'inherit', cursor:'inherit'}, // otherwise BS .was-validated set its color\r\n    choiceCheckBox: {color: 'inherit', cursor:'inherit'},\r\n    choiceLabel_disabled: {opacity: '.65'},  // more flexible than {color: '#6c757d'}; note: avoid opacity on pickElement's border; TODO write to BS \r\n\r\n    // floating plugin\r\n    label_floating_lifted: {opacity: '.65', transform : 'scale(.85) translateY(-.5rem) translateX(.15rem)'},\r\n    picks_floating_lifted: {paddingTop: '1.625rem', paddingLeft:'0.8rem', paddingBottom : '0'},\r\n\r\n    warning: {paddingLeft: '.25rem', paddingRight: '.25rem', zIndex: 4,  fontSize:'small', backgroundColor:'var(--bs-warning)'} // zIndex=4  since the input-group zIndex=3\r\n}\r\n\r\nconst _cssPatchBs4 = {\r\n    choicesList: {listStyleType:'none', paddingLeft:'0', paddingRight:'0', marginBottom:'0'},\r\n    picks: {listStyleType:'none', display:'flex', flexWrap:'wrap',  height: 'auto', marginBottom: '0',cursor: 'text'},\r\n    choice: {classes:'px-md-2 px-1', styles:{cursor:'pointer'}},    \r\n    choice_hover: 'text-primary bg-light', \r\n    choice_disabled_hover: 'bg-light',\r\n    filterInput: {border:'0px', height: 'auto', boxShadow:'none', \r\n        padding:'0', margin:'0', \r\n        outline:'none', backgroundColor:'transparent',\r\n        backgroundImage: 'none' // otherwise BS .was-validated set its image\r\n    },\r\n    filterInput_empty: 'form-control', // need for placeholder, TODO test form-control-plaintext\r\n\r\n    // used in PicksDom\r\n    picks_disabled: {backgroundColor: '#e9ecef'},\r\n\r\n    picks_focus: {borderColor: '#80bdff', boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'},\r\n    picks_focus_valid: {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)'},\r\n    picks_focus_invalid: {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)'},\r\n    \r\n    // used in BsAppearancePlugin\r\n    picks_def: {minHeight: 'calc(2.25rem + 2px)'},\r\n    picks_lg:  {minHeight: 'calc(2.875rem + 2px)'},\r\n    picks_sm:  {minHeight: 'calc(1.8125rem + 2px)'},\r\n    \r\n    // used in pickContentGenerator\r\n    pick: {lineHeight: '1.5em', paddingLeft: '0', paddingRight: '.5rem', paddingInlineStart:'0', paddingInlineEnd:'0.5rem'},\r\n    pickButton: {fontSize:'1.5em', lineHeight: '.9em', float : \"none\"},\r\n    pickContent_disabled: {opacity: '.65'}, \r\n    \r\n    // used in choiceContentGenerator\r\n    choiceContent: {justifyContent: 'flex-start', cursor:'inherit'}, // BS problem: without this on inline form menu items justified center\r\n    choiceLabel: {color: 'inherit', cursor:'inherit'}, // otherwise BS .was-validated set its color\r\n    choiceCheckBox: {color: 'inherit', cursor:'inherit'},\r\n    choiceLabel_disabled: {opacity: '.65'},  // more flexible than {color: '#6c757d'}; note: avoid opacity on pickElement's border; TODO write to BS4 \r\n\r\n    warning: {paddingLeft: '.25rem', paddingRight: '.25rem', zIndex: 4,  fontSize:'small', backgroundColor: 'var(--bs-warning)'}, // zIndex=4  since the input-group zIndex=3\r\n}\r\n\r\nconst _cssBs4 = {\r\n    choices: 'dropdown-menu', // bs4, in bsmultiselect.scss as ul.dropdown-menu\r\n    choicesList: '', // bs4, in bsmultiselect.scss as div.dropdown-menu>ul (first child)\r\n    choice_hover:  'hover',  //  not bs4, in scss as 'ul.dropdown-menu li.hover'\r\n    choice_selected: '', \r\n    choice_disabled: '', \r\n\r\n    picks: 'form-control',  // bs4, in scss 'ul.form-control'\r\n    picks_focus: 'focus', // not bs4, in scss 'ul.form-control.focus'\r\n    picks_disabled: 'disabled', //  not bs4, in scss 'ul.form-control.disabled'\r\n    pick_disabled: '',  \r\n    \r\n    pickFilter: '', \r\n    filterInput: '',\r\n\r\n    // used in pickContentGenerator\r\n    pick: 'badge', // bs4\r\n    pickContent: '',\r\n    pickContent_disabled: 'disabled', // not bs4, in scss 'ul.form-control li span.disabled'\r\n    pickButton: 'close', // bs4\r\n\r\n    // used in choiceContentGenerator\r\n    // choice:  'dropdown-item', // it seems like hover should be managed manually since there should be keyboard support\r\n    choiceCheckBox_disabled: 'disabled', //  not bs4, in scss as 'ul.form-control li .custom-control-input.disabled ~ .custom-control-label'\r\n    choiceContent: 'custom-control custom-checkbox d-flex', // bs4 d-flex required for rtl to align items\r\n    choiceCheckBox: 'custom-control-input', // bs4\r\n    choiceLabel: 'custom-control-label justify-content-start',\r\n    choiceLabel_disabled: '',\r\n\r\n    warning: 'alert-warning bg-warning'\r\n}\r\n\r\n\r\nconst _cssBs5 = {\r\n    choices: 'dropdown-menu', // bs, in bsmultiselect.scss as div.dropdown-menu\r\n    choicesList: '', // bs, in bsmultiselect.scss as div.dropdown-menu>ul (first child)\r\n    choice_hover:  'hover',  //  not bs, in scss as 'ul.dropdown-menu li.hover'\r\n    choice_selected: 'selected',  //  not bs,\r\n    choice_disabled: 'disabled',  //  not bs,\r\n    picks: 'form-control',  // bs, in scss 'ul.form-control'\r\n    picks_focus: 'focus', // not bs, in scss 'ul.form-control.focus'\r\n    picks_disabled: 'disabled', //  not bs, in scss 'ul.form-control.disabled'\r\n    pick_disabled: '',  \r\n    \r\n    pickFilter: '', \r\n    filterInput: '',\r\n\r\n    // used in pickContentGenerator\r\n    pick: {classes:'badge'}, // bs\r\n    pickContent: '',\r\n    pickContent_disabled: 'disabled', // not bs, in scss 'ul.form-control li span.disabled'\r\n    pickButton: 'btn-close', // bs\r\n\r\n    // used in choiceContentGenerator\r\n    // choice:  'dropdown-item', // it seems like hover should be managed manually since there should be keyboard support\r\n    choiceCheckBox_disabled: 'disabled', //  not bs, in scss as 'ul.form-control li .custom-control-input.disabled ~ .custom-control-label'\r\n    choiceContent: 'form-check', // bs d-flex required for rtl to align items\r\n    choiceCheckBox: 'form-check-input', // bs\r\n    choiceLabel: 'form-check-label',\r\n    choiceLabel_disabled: '',\r\n\r\n    label_floating_lifted: 'floating-lifted',\r\n    picks_floating_lifted: 'floating-lifted',\r\n\r\n    warning: 'alert-warning'\r\n}\r\n\r\n","import {CssPatchPlugin} from './CssPatchPlugin';\r\n\r\nimport {PickDomFactoryPlugCssPatch, PickDomFactoryPlugCssPatchBs4} from '../PickDomFactory'\r\nimport {PicksDomFactoryPlugCssPatch, PicksDomFactoryPlugCssPatchBs4} from '../PicksDomFactory'\r\nimport {ChoiceDomFactoryPlugCssPatch} from '../ChoiceDomFactory'\r\nimport {ChoicesDomFactoryPlugCssPatch} from '../ChoicesDomFactory'\r\nimport {FilterDomFactoryPlugCssPatch} from '../FilterDomFactory'\r\n\r\nexport function CssPatchBs4Plugin(defaults) {\r\n    var cssPatch = {};\r\n\r\n    PickDomFactoryPlugCssPatch(cssPatch);\r\n    PickDomFactoryPlugCssPatchBs4(cssPatch);\r\n    PicksDomFactoryPlugCssPatch(cssPatch);\r\n    PicksDomFactoryPlugCssPatchBs4(cssPatch);\r\n    ChoiceDomFactoryPlugCssPatch(cssPatch);\r\n    ChoicesDomFactoryPlugCssPatch(cssPatch);\r\n    FilterDomFactoryPlugCssPatch(cssPatch);\r\n\r\n    defaults.cssPatch = cssPatch;\r\n    return CssPatchPlugin(defaults)\r\n}","export function JQueryMethodsPlugin(){\r\n    return {\r\n        buildAspects: () => {\r\n            return {\r\n                layout: (aspects) => {\r\n                    let {staticDom, choicesDom, filterDom, picksList, picksDom} = aspects;\r\n                    return {\r\n                        buildApi(api){\r\n                            api.getContainer = () =>  staticDom.containerElement;\r\n                            api.getChoices = () => choicesDom.choicesElement;\r\n                            api.getChoicesList = () => choicesDom.choicesListElement;\r\n                            api.getFilterInput = () => filterDom.filterInputElement;\r\n                            api.getPicks = () => picksDom.picksElement;\r\n                            api.picksCount = () => picksList.getCount();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","export function OptionsApiPlugin(){\r\n    return {\r\n        buildAspects: (aspects) => {\r\n            return {\r\n                layout: () => {\r\n                    let {buildAndAttachChoiceAspect, wraps, wrapsCollection, createWrapAspect, createChoiceBaseAspect,\r\n                        optionsAspect, resetLayoutAspect} = aspects;\r\n                    return {\r\n                        buildApi(api){\r\n                \r\n                            api.updateOptionAdded = (key) => {  // TODO: generalize index as key \r\n                                let options = optionsAspect.getOptions();\r\n                                let option = options[key];\r\n                                \r\n                                let wrap = createWrapAspect.createWrap(option);\r\n                                wrap.choice= createChoiceBaseAspect.createChoiceBase(option);\r\n                                wraps.insert(key, wrap);\r\n                                let nextChoice = ()=> wrapsCollection.getNext(key, c => c.choice.choiceElement);\r\n                \r\n                                buildAndAttachChoiceAspect.buildAndAttachChoice(\r\n                                    wrap,\r\n                                    () => nextChoice()?.choice.choiceElement\r\n                                )\r\n                            }\r\n                        \r\n                            api.updateOptionRemoved = (key) => { // TODO: generalize index as key \r\n                                resetLayoutAspect.resetLayout(); // always hide 1st, then reset filter\r\n                                \r\n                                var wrap = wraps.remove(key);\r\n                                wrap.choice.remove?.();\r\n                                wrap.dispose?.();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function FormRestoreOnBackwardPlugin(){\r\n    return {\r\n        buildAspects: (aspects) => {\r\n            return {\r\n                layout: () => {\r\n                    let {staticDom, environment, loadAspect, updateOptionsSelectedAspect} = aspects;\r\n                    let window = environment.window;\r\n                \r\n                    if (staticDom.selectElement && updateOptionsSelectedAspect){\r\n                        loadAspect.load = composeSync(loadAspect.load,\r\n                            function(){\r\n                                // support browser's \"step backward\" and form's values restore\r\n                                if (window.document.readyState !=\"complete\"){\r\n                                    window.setTimeout(function(){\r\n                                        updateOptionsSelectedAspect.updateOptionsSelected();\r\n                                    // there are no need to add more updates as api.updateWasValidated() because backward never trigger .was-validate\r\n                                    // also backward never set the state to invalid\r\n                                    });\r\n                                }\r\n                            })\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n// export function FormRestoreOnBackwardPlugin(aspects){\r\n//     let {staticDom, environment, loadAspect, updateOptionsSelectedAspect} = aspects;\r\n//     let window = environment.window;\r\n\r\n//     if (staticDom.selectElement && updateOptionsSelectedAspect){\r\n//         loadAspect.load = composeSync(loadAspect.load,\r\n//             function(){\r\n//                 // support browser's \"step backward\" and form's values restore\r\n//                 if (window.document.readyState !=\"complete\"){\r\n//                     window.setTimeout(function(){\r\n//                         updateOptionsSelectedAspect.updateOptionsSelected();\r\n//                     // there are no need to add more updates as api.updateWasValidated() because backward never trigger .was-validate\r\n//                     // also backward never set the state to invalid\r\n//                     });\r\n//                 }\r\n//             })\r\n//     }\r\n// }","import {closestByTagName, findDirectChildByTagName, closestByClassName} from '../ToolsDom';\r\nimport {composeSync} from '../ToolsJs';\r\n\r\nexport function SelectElementPlugin(){\r\n    return {\r\n        buildAspects: (aspects) => {\r\n            return {\r\n                plugStaticDom: ()=> {\r\n                        let {configuration, staticDomFactory, createElementAspect,\r\n                            componentPropertiesAspect, onChangeAspect, triggerAspect, optionsAspect, optGroupAspect, disposeAspect} = aspects;\r\n                            \r\n                        let origStaticDomFactoryCreate = staticDomFactory.create;\r\n                        staticDomFactory.create = (choicesDomFactory, filterDomFactory, picksDomFactory) => {\r\n                            let {createStaticDom: origCreateStaticDom} = origStaticDomFactoryCreate(choicesDomFactory, filterDomFactory, picksDomFactory);\r\n                            return { \r\n                                createStaticDom(element, containerClass){\r\n                                    console.log(\"createStaticDom\");\r\n                                    let selectElement = null;\r\n                                    let containerElement = null;\r\n                                    let picksElement = null;\r\n                                    if (element.tagName == 'SELECT') {\r\n                                        selectElement = element;\r\n                                        if (containerClass){\r\n                                            containerElement = closestByClassName(selectElement, containerClass)\r\n                                            if (containerElement)\r\n                                                picksElement = findDirectChildByTagName(containerElement, 'UL');\r\n                                        }\r\n                                    } else if (element.tagName == 'DIV') {\r\n                                        selectElement = findDirectChildByTagName(element, 'SELECT');\r\n                                        if (selectElement) {\r\n                                            if (containerClass){\r\n                                                containerElement = closestByClassName(element, containerClass);\r\n                                                if (containerElement)\r\n                                                    picksElement = findDirectChildByTagName(containerElement, 'UL');\r\n                                            }\r\n                                        } else {\r\n                                            return origCreateStaticDom(element, containerClass);\r\n                                        } \r\n                                    }\r\n                    \r\n                                    let disposableContainerElement = false;\r\n                                    if (!containerElement) {\r\n                                        containerElement = createElementAspect.createElement('DIV');\r\n                                        containerElement.classList.add(containerClass);\r\n                                        disposableContainerElement= true;\r\n                                    }\r\n                                \r\n                                    let isDisposablePicksElement = false;\r\n                                    if (!picksElement) {\r\n                                        picksElement = createElementAspect.createElement('UL');\r\n                                        isDisposablePicksElement = true; \r\n                                    }\r\n                                \r\n                                    if (selectElement){\r\n                                        var backupDisplay = selectElement.style.display;\r\n                                        selectElement.style.display = 'none';\r\n                                        var backupedRequired = selectElement.required;\r\n                    \r\n                                        configuration.getValueRequired = function(){\r\n                                            return backupedRequired;\r\n                                        }\r\n                    \r\n                                        if(selectElement.required===true)\r\n                                            selectElement.required = false;\r\n                    \r\n                                        let {getDisabled} = configuration;\r\n                    \r\n                                        if(!getDisabled) {\r\n                                            var fieldsetElement = closestByTagName(selectElement, 'FIELDSET');\r\n                                            if (fieldsetElement) {\r\n                                                componentPropertiesAspect.getDisabled = () => selectElement.disabled || fieldsetElement.disabled;\r\n                                            } else {\r\n                                                componentPropertiesAspect.getDisabled = () => selectElement.disabled;\r\n                                            }\r\n                                        }\r\n                                        onChangeAspect.onChange = composeSync(() => triggerAspect.trigger('change'), onChangeAspect.onChange) \r\n                                        optionsAspect.getOptions = () => selectElement.options;\r\n                                        \r\n                                        if (optGroupAspect){\r\n                                            optGroupAspect.getOptionOptGroup = (option) => option.parentNode;\r\n                                            optGroupAspect.getOptGroupText   = (optGroup) => optGroup.label;\r\n                                            optGroupAspect.getOptGroupId = (optGroup) => optGroup.id;\r\n                                        }\r\n                    \r\n                                        if (aspects.labelNewIdAspect){\r\n                                            console.log(\"new aspects.labelNewIdAspect\");\r\n                                            aspects.labelNewIdAspect.createInputId = () => `${containerClass}-generated-input-${((selectElement.id)?selectElement.id:selectElement.name).toLowerCase()}-id`;\r\n                                        } else {\r\n                                            console.log(\"no new aspects.labelNewIdAspect\");\r\n                                        }\r\n                    \r\n                                        disposeAspect.dispose = composeSync(disposeAspect.dispose, () => {\r\n                                             selectElement.required = backupedRequired;\r\n                                             selectElement.style.display = backupDisplay;\r\n                                        });\r\n                                    }\r\n                                    let choicesDom = choicesDomFactory.create();\r\n                                    let filterDom = filterDomFactory.create(isDisposablePicksElement);\r\n                                    let picksDom  = picksDomFactory.create(picksElement, isDisposablePicksElement);\r\n                    \r\n                                    let {choicesElement} = choicesDom; \r\n                                    \r\n                                    return {\r\n                                        choicesDom,\r\n                                        filterDom,\r\n                                        picksDom,\r\n                    \r\n                                        staticDom:{\r\n                                                initialElement:element,\r\n                                                containerElement,\r\n                                                picksElement,\r\n                                                isDisposablePicksElement,\r\n                                                selectElement\r\n                                        }, \r\n                    \r\n                                        staticManager:{\r\n                                            appendToContainer(){ \r\n                                                if (disposableContainerElement){\r\n                                                    selectElement.parentNode.insertBefore(containerElement, selectElement.nextSibling) \r\n                                                    containerElement.appendChild(choicesElement)\r\n                                                }else {\r\n                                                    selectElement.parentNode.insertBefore(choicesElement, selectElement.nextSibling)\r\n                                                }\r\n                                                if (isDisposablePicksElement)\r\n                                                    containerElement.appendChild(picksElement)\r\n                                            },\r\n                                            dispose(){ \r\n                                                choicesElement.parentNode.removeChild(choicesElement);\r\n                                                if (disposableContainerElement)\r\n                                                    selectElement.parentNode.removeChild(containerElement) \r\n                                                if (isDisposablePicksElement)\r\n                                                    containerElement.removeChild(picksElement)\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                }\r\n                            }\r\n                        }\r\n                    \r\n                },\r\n                layout: ()=>{\r\n                    var {loadAspect, environment} = aspects;\r\n                    var document = environment.window.document;\r\n\r\n                    var origLoadAspectLoop  = loadAspect.loop;\r\n                    loadAspect.loop = function(){\r\n                        // browsers can change select value as part of \"autocomplete\" (IE11) at load time\r\n                        // or \"show preserved on go back\" (Chrome) after page is loaded but before \"ready\" event;\r\n                        // mote: they never \"restore\" selected-disabled options.\r\n                        // TODO: make the FROM Validation for 'selected-disabled' easy.\r\n                        if (document.readyState != 'loading'){\r\n                            origLoadAspectLoop();\r\n                        }else{\r\n                            var domContentLoadedHandler = function(){\r\n                                origLoadAspectLoop();\r\n                                document.removeEventListener(\"DOMContentLoaded\", domContentLoadedHandler);\r\n                            }\r\n                            document.addEventListener('DOMContentLoaded', domContentLoadedHandler); // IE9+\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\n// TODO: there should be two new \"independent aspects\" AddPickAspect and RemovePickAspect \r\n// plugin should overdrive them : call setWrapSelected and etc\r\n// therefore there should new component API methods\r\n// addOptionPick(key) -> call addPick(pick) which returns removePick() \r\n// SetOptionSelectedAspect, OptionToggleAspect should be moved there \r\n// OptionToggleAspect overrided in DisabledOptionPlugin\r\n\r\nexport function SelectedOptionPlugin(){\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n\t            plugStaticDom: ()=> {\r\n                    let {wrapsCollection} = aspects;\r\n                    let {getSelected : getIsOptionSelected, setSelected : setIsOptionSelected, options} = configuration;\r\n\r\n                    if (options) {\r\n                        if (!setIsOptionSelected){\r\n                            setIsOptionSelected = (option, value) => {option.selected = value};\r\n                        }\r\n                        if (!getIsOptionSelected)\r\n                            getIsOptionSelected = (option) => option.selected;     \r\n                    } else { // selectElement\r\n                        if (!getIsOptionSelected){\r\n                            getIsOptionSelected = (option) => option.selected;\r\n                        }\r\n                        if (!setIsOptionSelected){\r\n                            setIsOptionSelected = (option, value) => {option.selected = value};\r\n                            // NOTE: adding this (setAttribute) break Chrome's html form reset functionality:\r\n                            // if (value) option.setAttribute('selected','');\r\n                            // else option.removeAttribute('selected');\r\n                        }\r\n                    }\r\n                    configuration.getSelected= getIsOptionSelected;\r\n                    configuration.setSelected= setIsOptionSelected;\r\n                    aspects.updateOptionsSelectedAspect = UpdateOptionsSelectedAspect(wrapsCollection, getIsOptionSelected);\r\n        \t    },\r\n                layout: () => {\r\n                    let {wrapsCollection, updateOptionsSelectedAspect,\r\n                        createWrapAspect, buildChoiceAspect, removePickAspect,\r\n                        resetLayoutAspect, picksList, isChoiceSelectableAspect, optionToggleAspect,\r\n                        /*inputAspect, filterDom, filterManagerAspect,*/ createPickHandlersAspect, addPickAspect,  fullMatchAspect, \r\n                        onChangeAspect, filterPredicateAspect\r\n                        } = aspects;\r\n                    let {getSelected : getIsOptionSelected, setSelected : setIsOptionSelected} = configuration;\r\n                    \r\n                \r\n                    let origFilterPredicate = filterPredicateAspect.filterPredicate;\r\n                    filterPredicateAspect.filterPredicate = (wrap, text) =>\r\n                        !wrap.isOptionSelected  &&  origFilterPredicate(wrap, text)\r\n                \r\n                \r\n                    let  origBuildChoice = buildChoiceAspect.buildChoice;\r\n                    buildChoiceAspect.buildChoice= (wrap) => {\r\n                        origBuildChoice(wrap);\r\n                        wrap.updateSelected = () => {\r\n                            wrap.choice.choiceDomManagerHandlers.updateSelected();\r\n                            onChangeAspect.onChange();\r\n                        }\r\n                        wrap.dispose = composeSync( ()=>{wrap.updateSelected = null}, wrap.dispose)\r\n                    }\r\n                \r\n                    // TODO: test this instead of wrap.updateSelected\r\n                    // function updateSelected(wrap){\r\n                    //     if (wrap.pick){\r\n                    //         if (wrap.isOptionSelected)\r\n                    //             pickHandlers.producePick();\r\n                    //         else {\r\n                    //             pickHandlers.removeAndDispose();\r\n                    //             pickHandlers.removeAndDispose=null;\r\n                    //         }\r\n                    //     }\r\n                    //     wrap.choice.choiceDomManagerHandlers.updateSelected();\r\n                    //     onChangeAspect.onChange();\r\n                    // }\r\n                \r\n                \r\n                    function composeUpdateSelected(wrap, booleanValue){\r\n                        return () => {\r\n                            wrap.isOptionSelected = booleanValue;\r\n                            wrap.updateSelected();\r\n                        }\r\n                    }\r\n                \r\n                    function trySetWrapSelected(option, updateSelected, booleanValue){ //  wrap.option\r\n                        let success = false;\r\n                        var confirmed = setIsOptionSelected(option, booleanValue); \r\n                        if (!(confirmed===false)) {\r\n                            updateSelected(); \r\n                            success = true;\r\n                        }\r\n                        return success;\r\n                    }\r\n                \r\n                    let origCreateWrap = createWrapAspect.createWrap;\r\n                    createWrapAspect.createWrap = (option)=>{\r\n                        let wrap = origCreateWrap(option);\r\n                        wrap.isOptionSelected = getIsOptionSelected(option);\r\n                        wrap.updateSelected = null; // can it be combined ?\r\n                        return wrap;\r\n                    }\r\n                    \r\n                \r\n                    let origToggle = optionToggleAspect.toggle; // TODO: improve design, no replace\r\n                    optionToggleAspect.toggle= (wrap) => {\r\n                        return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, !wrap.isOptionSelected), !wrap.isOptionSelected)\r\n                    }\r\n                 \r\n                    let origFullMatch = fullMatchAspect.fullMatch;\r\n                    fullMatchAspect.fullMatch = (wrap) => {\r\n                        return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, true), true);\r\n                    }\r\n                \r\n                    let removePickOrig = removePickAspect.removePick; // TODO: improve design, no replace\r\n                    removePickAspect.removePick = (wrap, pick) => { // TODO: try remove pick\r\n                        return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, false), false);\r\n                    }\r\n                \r\n                    \r\n                    let origCreatePickHandlers =  createPickHandlersAspect.createPickHandlers;\r\n                    createPickHandlersAspect.createPickHandlers = (wrap)=>{\r\n                        let pickHandlers = origCreatePickHandlers(wrap);\r\n                        wrap.updateSelected = composeSync(\r\n                            ()=>{\r\n                                if (wrap.isOptionSelected){\r\n                                    let pick = pickHandlers.producePick();\r\n                                    wrap.pick = pick;\r\n                                    pick.dispose = composeSync(pick.dispose, ()=>{wrap.pick=null;});\r\n                                }\r\n                                else {\r\n                                    pickHandlers.removeAndDispose();\r\n                                    pickHandlers.removeAndDispose=null;\r\n                                }\r\n                            },\r\n                            wrap.updateSelected\r\n                        )\r\n                \r\n                        addPickAspect.addPick(wrap, pickHandlers); \r\n                        return pickHandlers;\r\n                    }\r\n                \r\n                    let origAddPick =  addPickAspect.addPick;\r\n                    addPickAspect.addPick = (wrap, pickHandlers) => {\r\n                        if (wrap.isOptionSelected){\r\n                            let pick = origAddPick(wrap, pickHandlers);\r\n                            wrap.pick = pick;\r\n                            pick.dispose = composeSync(pick.dispose, ()=>{wrap.pick=null;});\r\n                            return pick;\r\n                        }\r\n                    }\r\n                \r\n                \r\n                    return {\r\n                        buildApi(api){\r\n                            api.selectAll= ()=>{\r\n                                resetLayoutAspect.resetLayout(); // always hide 1st\r\n                                wrapsCollection.forLoop(\r\n                                    wrap => {\r\n                                        if (isChoiceSelectableAspect.isSelectable(wrap) &&  !wrap.isOptionSelected)\r\n                                            trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, true), true)\r\n                                    }\r\n                                ); \r\n                            }\r\n                        \r\n                            api.deselectAll= ()=>{\r\n                                resetLayoutAspect.resetLayout(); // always hide 1st\r\n                                picksList.forEach(pick=>pick.setSelectedFalse())\r\n                            }\r\n                \r\n                            api.setOptionSelected = (key, value) => {\r\n                                let wrap = wrapsCollection.get(key);\r\n                                return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, value), value);\r\n                            }\r\n                \r\n                            // used in FormRestoreOnBackwardPlugin\r\n                            api.updateOptionsSelected = () => updateOptionsSelectedAspect.updateOptionsSelected();\r\n                            api.updateOptionSelected = (key) => updateChoiceSelected(wrapsCollection.get(key), getIsOptionSelected)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction UpdateOptionsSelectedAspect(wrapsCollection, getIsOptionSelected){\r\n    return {\r\n        updateOptionsSelected(){\r\n            wrapsCollection.forLoop( wrap => updateChoiceSelected(wrap, getIsOptionSelected));\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateChoiceSelected(wrap, getIsOptionSelected){\r\n    let newIsSelected = getIsOptionSelected(wrap.option);\r\n    if (newIsSelected != wrap.isOptionSelected)\r\n    {\r\n        wrap.isOptionSelected = newIsSelected;\r\n        wrap.updateSelected?.(); // some hidden oesn't have element (and need to be updated)\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function DisabledOptionPlugin(){\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n                layout: () => {\r\n                    let {isChoiceSelectableAspect, createWrapAspect,  buildChoiceAspect,\r\n                        filterPredicateAspect, wrapsCollection, optionToggleAspect, buildPickAspect } = aspects;\r\n                    \r\n                    let {getIsOptionDisabled, options} = configuration;\r\n                    if (options) {\r\n                        if (!getIsOptionDisabled)\r\n                            getIsOptionDisabled = (option) => (option.disabled===undefined) ? false : option.disabled;     \r\n                    } else { // selectElement\r\n                        if (!getIsOptionDisabled)\r\n                            getIsOptionDisabled = (option) => option.disabled;\r\n                    }\r\n                \r\n                    // TODO check this instead of wrap.updateDisabled\r\n                    // function updateDisabled(wrap){\r\n                    //     wrap?.choice?.choiceDomManagerHandlers?.updateDisabled?.();\r\n                    //     wrap?.pick?.pickDomManagerHandlers?.updateDisabled?.();\r\n                    // }\r\n                \r\n                    let origCreateWrap = createWrapAspect.createWrap;\r\n                    createWrapAspect.createWrap = (option) => {\r\n                        let wrap = origCreateWrap(option);\r\n                        wrap.isOptionDisabled = getIsOptionDisabled(option); // TODO: remove usage wrap.isOptionDisabled\r\n                        wrap.updateDisabled = null; \r\n                        return wrap;\r\n                    };\r\n                \r\n                    let origToggle = optionToggleAspect.toggle;\r\n                    optionToggleAspect.toggle = (wrap) => {\r\n                        let success = false;\r\n                        if (wrap.isOptionSelected!==undefined){\r\n                            if (wrap.isOptionSelected || !wrap.isOptionDisabled) // TODO: declare dependency on SelectedOptionPlugin\r\n                                success = origToggle(wrap);\r\n                        }\r\n                        else{\r\n                            if (!wrap.isOptionDisabled) {\r\n                                success = origToggle(wrap);\r\n                            }\r\n                        }\r\n                        return success;\r\n                    };\r\n                \r\n                    let origIsSelectable = isChoiceSelectableAspect.isSelectable;\r\n                    isChoiceSelectableAspect.isSelectable = (wrap) => {\r\n                        return  origIsSelectable(wrap) && !wrap.isOptionDisabled;\r\n                    };\r\n                \r\n                    let origFilterPredicate = filterPredicateAspect.filterPredicate;\r\n                    filterPredicateAspect.filterPredicate = (wrap, text) => {\r\n                        return  !wrap.isOptionDisabled && origFilterPredicate(wrap, text) ;\r\n                    };\r\n                \r\n                    let origBuildChoice = buildChoiceAspect.buildChoice;\r\n                    buildChoiceAspect.buildChoice = (wrap) => {\r\n                        origBuildChoice(wrap);\r\n                        wrap.updateDisabled = wrap.choice.choiceDomManagerHandlers.updateDisabled\r\n                        wrap.choice.dispose = composeSync(()=>{wrap.updateDisabled=null;}, wrap.choice.dispose);\r\n                    }\r\n                    \r\n                    let origBuildPick = buildPickAspect.buildPick;\r\n                    buildPickAspect.buildPick = (wrap, removeOnButton) => {\r\n                        let pick = origBuildPick(wrap, removeOnButton);\r\n                        \r\n                        pick.updateDisabled = () => pick.pickDomManagerHandlers.updateDisabled();\r\n                        pick.dispose = composeSync(pick.dispose, ()=>{pick.updateDisabled=null});\r\n                \r\n                        let choiceUpdateDisabledBackup = wrap.updateDisabled;\r\n                        wrap.updateDisabled = composeSync(choiceUpdateDisabledBackup, pick.updateDisabled); // add pickDisabled\r\n                        pick.dispose = composeSync(pick.dispose, \r\n                            ()=>{\r\n                                wrap.updateDisabled = choiceUpdateDisabledBackup; // remove pickDisabled\r\n                                wrap.updateDisabled(); // make \"true disabled\" without it checkbox only looks disabled\r\n                            }\r\n                        )\r\n                        return pick;\r\n                    }\r\n                \r\n                    return {\r\n                        buildApi(api){\r\n                            api.updateOptionsDisabled = () => wrapsCollection.forLoop( wrap => updateChoiceDisabled(wrap, getIsOptionDisabled))\r\n                            api.updateOptionDisabled = (key) => updateChoiceDisabled(wrapsCollection.get(key), getIsOptionDisabled)\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateChoiceDisabled(wrap, getIsOptionDisabled){\r\n    let newIsDisabled = getIsOptionDisabled(wrap.option);\r\n    if (newIsDisabled != wrap.isOptionDisabled)\r\n    {\r\n        wrap.isOptionDisabled= newIsDisabled;\r\n        wrap.updateDisabled?.(); // some hidden oesn't have element (and need to be updated)\r\n    }\r\n}","export function PicksApiPlugin(){\r\n    return {\r\n        buildAspects: (aspects) => {\r\n            return {\r\n                layout: () => {\r\n                    let {picksList, createWrapAspect, createPickHandlersAspect, addPickAspect} = aspects;\r\n                    return {\r\n                        buildApi(api){\r\n                            api.forEachPeak = (f) => \r\n                                picksList.forEach(wrap=>f(wrap.option));\r\n                            // TODO: getHeadPeak\r\n                            api.getTailPeak = () => picksList.getTail()?.option;\r\n                            api.countPeaks = () => picksList.getCount();\r\n                            api.isEmptyPeaks = () => picksList.isEmpty();\r\n                            \r\n                            api.addPick = (option) => {\r\n                                let wrap = createWrapAspect.createWrap(option);\r\n                                // TODO should be moved to specific plugins\r\n                                wrap.updateDisabled = ()=>{};\r\n                                wrap.updateHidden = ()=>{};\r\n                                let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n                                addPickAspect.addPick(wrap, pickHandlers);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function PicksPlugin(){\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n                plugStaticDom: ()=> {\r\n                    let {configuration, picksList} = aspects;\r\n                    let {picks} = configuration;\r\n                    if (picks) {\r\n                        let {add: origAdd, reset: origReset} = picksList;\r\n                    \r\n                        picksList.add = (e) => {\r\n                            let {remove, index} = origAdd(e);\r\n                            picks.push(e);\r\n                            return { remove: composeSync(remove, () => void picks.splice(index(), 1)), index};\r\n                        }\r\n                    \r\n                        picksList.reset = () => {\r\n                            origReset();\r\n                            picks.length = 0;\r\n                        }\r\n                    }\r\n        \t    },\r\n                layout: () => {\r\n                    let {inputAspect, filterDom, filterManagerAspect} = aspects;\r\n                    let {picks, addOptionPicked} = configuration;\r\n                    /*\r\n                    if (!addOptionPicked){\r\n                        addOptionPicked = (option, index, value) => {\r\n                            if (value)\r\n                                picks.push(option);\r\n                            else\r\n                                picks.splice(index, 1);\r\n                            return true;\r\n                        };\r\n                    }\r\n                \r\n                    function trySetWrapSelected(option, updateSelected, booleanValue){\r\n                        let success = false;\r\n                        var confirmed = setIsOptionSelected(option, booleanValue);\r\n                        if (!(confirmed===false)) {\r\n                            updateSelected();\r\n                            success = true;\r\n                        }\r\n                        return success;\r\n                    }\r\n                \r\n                    let origProcessInput = inputAspect.processInput;\r\n                    inputAspect.processInput = () => {\r\n                        let origResult = origProcessInput();\r\n                        if (!origResult.isEmpty)\r\n                        {\r\n                            if ( filterManagerAspect.getNavigateManager().getCount() == 1)\r\n                            {\r\n                                // todo: move exact match to filterManager\r\n                                let fullMatchWrap =  filterManagerAspect.getNavigateManager().getHead();\r\n                                let text = filterManagerAspect.getFilter();\r\n                                if (fullMatchWrap.choice.searchText == text)\r\n                                {\r\n                                    let success = trySetWrapSelected(fullMatchWrap, true);\r\n                                    if (success) {\r\n                                        filterDom.setEmpty();\r\n                                        origResult.isEmpty = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return origResult;\r\n                    }*/\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function CreatePopperPlugin(){\r\n    return {\r\n        buildAspects: (aspects) => {\r\n            return {\r\n                plugStaticDom(){\r\n                    let {environment} = aspects;\r\n                    var popperRtlAspect = PopperRtlAspect();\r\n                    aspects.popperRtlAspect = popperRtlAspect;\r\n\r\n                    let {createPopper, Popper, globalPopper} = environment;\r\n                    let createModifiersVX = null;\r\n                    let createPopperVX = null;\r\n                    if (Popper) { // V2\r\n                        createPopperVX = createPopper =  (function(createPopperConstructor) {\r\n                            return function(anchorElement, element, popperConfiguration) {\r\n                                return new createPopperConstructor(anchorElement, element, popperConfiguration);\r\n                            }\r\n                        })(Popper);;\r\n                        createModifiersVX = CreateModifiersV1;\r\n                    } else if (createPopper) {\r\n                        createPopperVX = createPopper;\r\n                        createModifiersVX = CreateModifiersV2;\r\n                    } else if (globalPopper) {\r\n                        if (globalPopper.createPopper) {\r\n                            createPopperVX = globalPopper.createPopper;\r\n                            createModifiersVX = CreateModifiersV2;\r\n                        } else {\r\n                            createPopperVX = createPopper =  (function(createPopperConstructor) {\r\n                                return function(anchorElement, element, popperConfiguration) {\r\n                                    return new createPopperConstructor(anchorElement, element, popperConfiguration);\r\n                                }\r\n                            })(globalPopper);\r\n                            createModifiersVX = CreateModifiersV1;\r\n                        }\r\n                    } else {\r\n                        throw new Error(\"BsMultiSelect: Popper component (https://popper.js.org) is required\");\r\n                    }\r\n                    var createPopperConfigurationAspect = CreatePopperConfigurationAspect(createModifiersVX);\r\n                    aspects.createPopperAspect = CreatePopperAspect(createPopperVX, popperRtlAspect, createPopperConfigurationAspect); \r\n                },\r\n                attach(){\r\n                    let {createPopperAspect, filterDom, choicesDom, disposeAspect, staticManager, choicesVisibilityAspect, specialPicksEventsAspect} = aspects;\r\n                    CreatePopper_ConstrunctorAspect(createPopperAspect, filterDom, choicesDom, disposeAspect, staticManager, choicesVisibilityAspect, specialPicksEventsAspect);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction CreatePopper_ConstrunctorAspect(createPopperAspect, filterDom, choicesDom, disposeAspect, staticManager, choicesVisibilityAspect, specialPicksEventsAspect){\r\n    let filterInputElement = filterDom.filterInputElement;\r\n    let choicesElement     = choicesDom.choicesElement;\r\n\r\n    let pop = createPopperAspect.createPopper(choicesElement, filterInputElement, true);\r\n\r\n    staticManager.appendToContainer = composeSync(staticManager.appendToContainer, pop.init);\r\n\r\n    var origBackSpace = specialPicksEventsAspect.backSpace;\r\n    specialPicksEventsAspect.backSpace = (pick) => {origBackSpace(pick);  pop.update();};\r\n\r\n    disposeAspect.dispose = composeSync(disposeAspect.dispose, pop.dispose);\r\n\r\n    choicesVisibilityAspect.updatePopupLocation = composeSync(\r\n        choicesVisibilityAspect.updatePopupLocation, \r\n        function(){pop.update();}\r\n    );\r\n}\r\n\r\nfunction PopperRtlAspect(){\r\n    return {\r\n        getIsRtl(){\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n// CreatePopperPlugin.attach = (aspects)=> {\r\n//     let {createPopperAspect, filterDom, choicesDom, disposeAspect, staticManager, choicesVisibilityAspect, specialPicksEventsAspect} = aspects;\r\n//     CreatePopper_ConstrunctorAspect(createPopperAspect, filterDom, choicesDom, disposeAspect, staticManager, choicesVisibilityAspect, specialPicksEventsAspect);\r\n// }\r\n\r\n// CreatePopperPlugin.plugStaticDom = (aspects) => {\r\n//     let {environment} = aspects;\r\n//     var popperRtlAspect = PopperRtlAspect();\r\n//     aspects.popperRtlAspect = popperRtlAspect;\r\n\r\n//     let {createPopper, Popper, globalPopper} = environment;\r\n//     let createModifiersVX = null;\r\n//     let createPopperVX = null;\r\n//     if (Popper) { // V2\r\n//         createPopperVX = createPopper =  (function(createPopperConstructor) {\r\n//             return function(anchorElement, element, popperConfiguration) {\r\n//                 return new createPopperConstructor(anchorElement, element, popperConfiguration);\r\n//             }\r\n//         })(Popper);;\r\n//         createModifiersVX = CreateModifiersV1;\r\n//     } else if (createPopper) {\r\n//         createPopperVX = createPopper;\r\n//         createModifiersVX = CreateModifiersV2;\r\n//     } else if (globalPopper) {\r\n//         if (globalPopper.createPopper) {\r\n//             createPopperVX = globalPopper.createPopper;\r\n//             createModifiersVX = CreateModifiersV2;\r\n//         } else {\r\n//             createPopperVX = createPopper =  (function(createPopperConstructor) {\r\n//                 return function(anchorElement, element, popperConfiguration) {\r\n//                     return new createPopperConstructor(anchorElement, element, popperConfiguration);\r\n//                 }\r\n//             })(globalPopper);\r\n//             createModifiersVX = CreateModifiersV1;\r\n//         }\r\n//     } else {\r\n//         throw new Error(\"BsMultiSelect: Popper component (https://popper.js.org) is required\");\r\n//     }\r\n//     var createPopperConfigurationAspect = CreatePopperConfigurationAspect(createModifiersVX);\r\n//     aspects.createPopperAspect = CreatePopperAspect(createPopperVX, popperRtlAspect, createPopperConfigurationAspect);\r\n// }\r\n\r\nfunction CreateModifiersV1(preventOverflow){\r\n    return {\r\n        preventOverflow: {enabled:preventOverflow},\r\n        hide: {enabled:false},\r\n        flip: {enabled:false}\r\n    };\r\n}\r\n\r\nfunction CreateModifiersV2(preventOverflow){\r\n    var modifiers = [{\r\n            name: 'flip',\r\n            options: {\r\n                fallbackPlacements: ['bottom'],\r\n            },\r\n        }\r\n    ];\r\n    if (preventOverflow) {\r\n        modifiers.push({name: 'preventOverflow'});\r\n    }\r\n    return modifiers;\r\n}\r\n\r\nfunction CreatePopperAspect(createPopperVX, popperRtlAspect, createPopperConfigurationAspect){\r\n    return {\r\n        createPopper(element, anchorElement, preventOverflow){\r\n            let popper = null;\r\n            return {\r\n                init(){\r\n                    var isRtl = popperRtlAspect.getIsRtl();\r\n                    var popperConfiguration = createPopperConfigurationAspect.createConfiguration(preventOverflow, isRtl);\r\n                    popper = createPopperVX(anchorElement, element, popperConfiguration); \r\n\r\n                },\r\n                update(){ \r\n                    popper.update(); // become async in popper 2; use forceUpdate if sync is needed? \r\n                },\r\n                dispose(){\r\n                    popper.destroy();\r\n                }\r\n            }\r\n        }\r\n    }   \r\n}\r\n\r\nfunction CreatePopperConfigurationAspect(createModifiersVX){\r\n    return {\r\n        createConfiguration(preventOverflow, isRtl){\r\n            let modifiers = createModifiersVX(preventOverflow);\r\n            \r\n            let popperConfiguration = {\r\n                placement: 'bottom-start',\r\n                modifiers: modifiers\r\n            };\r\n\r\n            if (isRtl){\r\n                popperConfiguration.placement = 'bottom-end';\r\n            }\r\n            return popperConfiguration;\r\n        }\r\n    }   \r\n}","// aka auto height and scrolling\r\nexport function ChoicesDynamicStylingPlugin(defaults){\r\n    defaults.useChoicesDynamicStyling = false;\r\n    defaults.choicesDynamicStyling = choicesDynamicStyling;\r\n    defaults.minimalChoicesDynamicStylingMaxHeight = 20;\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n                layout: () => {\r\n                    let {choicesDynamicStyling, useChoicesDynamicStyling} = configuration;\r\n                    if (useChoicesDynamicStyling) {\r\n                        let {choicesVisibilityAspect, specialPicksEventsAspect} = aspects;\r\n                        var origSetChoicesVisible = choicesVisibilityAspect.setChoicesVisible;\r\n                        choicesVisibilityAspect.setChoicesVisible = \r\n                            function(visible){\r\n                                if (visible)\r\n                                    choicesDynamicStyling(aspects);\r\n                                origSetChoicesVisible(visible);\r\n                            };\r\n                        var origBackSpace = specialPicksEventsAspect.backSpace;\r\n                        specialPicksEventsAspect.backSpace = (pick) => { origBackSpace(pick);  choicesDynamicStyling(aspects);};\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction choicesDynamicStyling(aspects){\r\n    let {configuration, environment, choicesDom, navigateAspect} = aspects;\r\n    let window = environment.window;\r\n    let choicesElement = choicesDom.choicesElement;\r\n    let minimalChoicesDynamicStylingMaxHeight = configuration.minimalChoicesDynamicStylingMaxHeight;\r\n\r\n    //find height of the browser window\r\n    var g = window.document.getElementsByTagName('body')[0],\r\n        e = window.document.documentElement,\r\n        y = window.innerHeight || e.clientHeight  || g.clientHeight;\r\n  \r\n    //find position of choicesElement, if it's at the bottom of the page make the choicesElement shorter\r\n    var pos = choicesElement.parentNode.getBoundingClientRect();\r\n    var new_y = y - pos.top;\r\n  \r\n    //calculate multi select max-height\r\n    var msHeight = Math.max(minimalChoicesDynamicStylingMaxHeight, Math.round((new_y * 0.85))); // Michalek: 0.85 is empiric value, without it list was longer than footer height ; TODO: propose better way\r\n  \r\n    //add css height value\r\n    choicesElement.style.setProperty(\"max-height\", msHeight+\"px\");\r\n    choicesElement.style.setProperty(\"overflow-y\", \"auto\");\r\n\r\n    if (!choicesDom.ChoicesDynamicStylingPlugin_scrollHandle){\r\n        choicesDom.ChoicesDynamicStylingPlugin_scrollHandle = true;\r\n        var origNavigateAspectNavigate = navigateAspect.navigate;\r\n        navigateAspect.navigate = function(down){\r\n            var wrap = origNavigateAspectNavigate(down);\r\n            if (wrap!= null && wrap.choice!=null && wrap.choice.choiceElement!=null)\r\n            wrap.choice.choiceElement.scrollIntoView(false); // alignTo false -  scroll to the top bottom of dropdown first\r\n            // TODO: BUG if mouse left on the dropdow scroll to bottom and one after doesn't work properly\r\n            return wrap;\r\n        }\r\n    }\r\n}\r\n","export function HighlightPlugin(defaults){\r\n    defaults.useHighlighting = false;\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n\t            plugStaticDom: ()=> {\r\n                    if (configuration.useHighlighting)\r\n                        aspects.highlightAspect = HighlightAspect();\r\n        \t    },\r\n                plugStaticDomFactories: ()=> {\r\n                    var {choiceDomFactory, optionPropertiesAspect} = aspects;\r\n\r\n                    var origCreateChoiceDomFactory = choiceDomFactory.create;\r\n                    choiceDomFactory.create = (choiceElement, wrap, toggle) => {\r\n                        var value = origCreateChoiceDomFactory(choiceElement, wrap, toggle);\r\n                        value.choiceDomManagerHandlers.updateHighlighted = ()=>{\r\n                            var text = optionPropertiesAspect.getText(wrap.option);\r\n                            var highlighter = aspects.highlightAspect.getHighlighter();\r\n                            if (highlighter)\r\n                                highlighter(choiceElement, value.choiceDom, text);                    \r\n                            else\r\n                            choiceElement.textContent = text;\r\n                        };\r\n                        return value;\r\n                    }                    \r\n        \t    },\r\n                layout: () => {\r\n                    let {highlightAspect, filterManagerAspect,  buildChoiceAspect} = aspects;\r\n                    if (highlightAspect) {\r\n                          let origProcessEmptyInput = filterManagerAspect.processEmptyInput;\r\n                          filterManagerAspect.processEmptyInput = function(){\r\n                            highlightAspect.reset();\r\n                            origProcessEmptyInput(); \r\n                          }\r\n                          let origSetFilter = filterManagerAspect.setFilter;\r\n                          filterManagerAspect.setFilter = function(text){\r\n                            highlightAspect.set(text);\r\n                            origSetFilter(text);\r\n                          }\r\n                          let origBuildChoice = buildChoiceAspect.buildChoice;\r\n                          buildChoiceAspect.buildChoice = function(wrap){\r\n                              origBuildChoice(wrap);\r\n                              let origSetVisible =  wrap.choice.setVisible;\r\n                              wrap.choice.setVisible = function(v){\r\n                                origSetVisible(v);\r\n                                wrap.choice.choiceDomManagerHandlers.updateHighlighted();\r\n                              }\r\n                          }\r\n                      }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { composeSync } from \"../ToolsJs\";\r\n\r\nexport function CustomChoiceStylingsPlugin(defaults){\r\n    defaults.customChoiceStylings =  null;\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n\t            plugStaticDom: ()=> {\r\n                    let {choiceDomFactory} = aspects;\r\n                    let customChoiceStylings = configuration.customChoiceStylings;\r\n                    let customChoiceStylingsAspect = CustomChoiceStylingsAspect(customChoiceStylings);\r\n                    ExtendChoiceDomFactory(choiceDomFactory, customChoiceStylingsAspect);\r\n        \t    }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendChoiceDomFactory(choiceDomFactory, customChoiceStylingsAspect){\r\n    let origChoiceDomFactoryCreate = choiceDomFactory.create;\r\n    choiceDomFactory.create = function(choiceElement, wrap, toggle){\r\n        var o = origChoiceDomFactoryCreate(choiceElement, wrap, toggle);\r\n        customChoiceStylingsAspect.customize(wrap, o.choiceDom, o.choiceDomManagerHandlers);\r\n        return o;\r\n    }\r\n}\r\n\r\nfunction CustomChoiceStylingsAspect(customChoiceStylings){\r\n    return {\r\n        customize(wrap, choiceDom, choiceDomManagerHandlers){\r\n            if (customChoiceStylings){\r\n                var handlers = customChoiceStylings(choiceDom, wrap.option);\r\n\r\n                if (handlers){\r\n                    function customChoiceStylingsClosure(custom){\r\n                        return function() {\r\n                                custom({\r\n                                    isOptionSelected: wrap.isOptionSelected,\r\n                                    isOptionDisabled: wrap.isOptionDisabled,\r\n                                    isHoverIn: wrap.choice.isHoverIn,\r\n                                    //isHighlighted: wrap.choice.isHighlighted  // TODO isHighlighted should be developed\r\n                                });\r\n                        }\r\n                    }\r\n                    if (choiceDomManagerHandlers.updateHoverIn && handlers.updateHoverIn)  \r\n                        choiceDomManagerHandlers.updateHoverIn \r\n                            = composeSync(choiceDomManagerHandlers.updateHoverIn, customChoiceStylingsClosure(handlers.updateHoverIn) );\r\n                    if (choiceDomManagerHandlers.updateSelected && handlers.updateSelected)  \r\n                        choiceDomManagerHandlers.updateSelected \r\n                            = composeSync(choiceDomManagerHandlers.updateSelected, customChoiceStylingsClosure(handlers.updateSelected));\r\n                    if (choiceDomManagerHandlers.updateDisabled && handlers.updateDisabled)  \r\n                        choiceDomManagerHandlers.updateDisabled\r\n                            = composeSync(choiceDomManagerHandlers.updateDisabled, customChoiceStylingsClosure(handlers.updateDisabled));\r\n                    if (choiceDomManagerHandlers.updateHighlighted && handlers.updateHighlighted)  \r\n                        choiceDomManagerHandlers.updateHighlighted\r\n                            = composeSync(choiceDomManagerHandlers.updateHighlighted, customChoiceStylingsClosure(handlers.updateHighlighted));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { composeSync } from \"../ToolsJs\";\r\n\r\nexport function CustomPickStylingsPlugin(defaults){\r\n    defaults.customPickStylings = null;\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n\t            plugStaticDom: ()=> {\r\n                    let {componentPropertiesAspect, pickDomFactory} = aspects;\r\n                    let customPickStylings = configuration.customPickStylings;\r\n                    let customPickStylingsAspect = CustomPickStylingsAspect(componentPropertiesAspect, customPickStylings);\r\n                    ExtendPickDomFactory(pickDomFactory, customPickStylingsAspect);\r\n        \t    }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendPickDomFactory(pickDomFactory, customPickStylingsAspect){\r\n    \r\n    let origPickDomFactoryCreate = pickDomFactory.create;\r\n    pickDomFactory.create = function(pickElement, wrap, removeOnButton){\r\n        var o = origPickDomFactoryCreate(pickElement, wrap, removeOnButton);\r\n        customPickStylingsAspect.customize(wrap, o.pickDom, o.pickDomManagerHandlers);\r\n        return o;\r\n    }\r\n}\r\n\r\nfunction CustomPickStylingsAspect(componentPropertiesAspect, customPickStylings){\r\n    return {\r\n        customize(wrap, pickDom, pickDomManagerHandlers){\r\n            if (customPickStylings){\r\n                var handlers = customPickStylings(pickDom, wrap.option);\r\n\r\n                if (handlers){\r\n                    function customPickStylingsClosure(custom){\r\n                        return function() {\r\n                            custom({\r\n                                isOptionDisabled: wrap.isOptionDisabled,\r\n                                isComponentDisabled: componentPropertiesAspect.getDisabled()\r\n                            });\r\n                        }\r\n                    }\r\n                    if (pickDomManagerHandlers.updateDisabled && handlers.updateDisabled)  \r\n                        pickDomManagerHandlers.updateDisabled \r\n                            = composeSync(pickDomManagerHandlers.updateDisabled, customPickStylingsClosure(handlers.updateDisabled));\r\n                    if (pickDomManagerHandlers.updateComponentDisabled && handlers.updateComponentDisabled)  \r\n                        pickDomManagerHandlers.updateComponentDisabled \r\n                            = composeSync(pickDomManagerHandlers.updateComponentDisabled, customPickStylingsClosure(handlers.updateComponentDisabled));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function UpdateAppearancePlugin(){\r\n    return {\r\n        buildAspects: (aspects) => {\r\n            return {\r\n                layout: () => {\r\n                    var {updateAppearanceAspect, updateAspect, loadAspect} = aspects;\r\n    \r\n                    updateAspect.update = composeSync(updateAspect.update, ()=>updateAppearanceAspect.updateAppearance())\r\n                    loadAspect.load = composeSync(loadAspect.load, ()=>updateAppearanceAspect.updateAppearance())\r\n\r\n                    return{\r\n                        buildApi(api){\r\n                            api.updateAppearance = ()=>updateAppearanceAspect.updateAppearance();\r\n                        }\r\n                    }\r\n                },\r\n                plugStaticDom: ()=> {\r\n                    aspects.updateAppearanceAspect = UpdateAppearanceAspect();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// export function UpdateAppearancePlugin(aspects){\r\n//     var {updateAppearanceAspect, updateAspect, loadAspect} = aspects;\r\n    \r\n//     updateAspect.update = composeSync(updateAspect.update, ()=>updateAppearanceAspect.updateAppearance())\r\n//     loadAspect.load = composeSync(loadAspect.load, ()=>updateAppearanceAspect.updateAppearance())\r\n\r\n//     return{\r\n//         buildApi(api){\r\n//             api.updateAppearance = ()=>updateAppearanceAspect.updateAppearance();\r\n//         }\r\n//     }\r\n// }\r\n\r\n// UpdateAppearancePlugin.plugStaticDom = (aspects) => {\r\n//     aspects.updateAppearanceAspect = UpdateAppearanceAspect();\r\n// }\r\n\r\nfunction UpdateAppearanceAspect(){\r\n    return {\r\n        updateAppearance(){}\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function DisableComponentPlugin(){\r\n    return {\r\n        buildAspects: (aspects) => {\r\n            return {\r\n                plugStaticDomFactories: () => {\r\n                    var {pickDomFactory, componentPropertiesAspect} = aspects;\r\n\r\n                    var origCreatePickDomFactory = pickDomFactory.create;\r\n                    pickDomFactory.create = (pickElement, wrap, remove) => {\r\n                        var value = origCreatePickDomFactory(pickElement, wrap, remove);\r\n                        value.pickDomManagerHandlers.updateComponentDisabled = () => {\r\n                            value.pickDom.pickButtonElement.disabled = componentPropertiesAspect.getDisabled()\r\n                        };\r\n                        return value;\r\n                    }\r\n                },\r\n                layout: () => {\r\n                    var {updateAppearanceAspect, picksList, picksDom, componentPropertiesAspect, picksElementAspect} = aspects;\r\n    \r\n                    var origOnClick = picksElementAspect.onClick;\r\n                    \r\n                    var disableComponent = (isComponentDisabled)=>{\r\n                        picksList.forEach(pick=>pick.pickDomManagerHandlers.updateComponentDisabled())\r\n                        picksDom.disable(isComponentDisabled);\r\n                    }\r\n                \r\n                    picksElementAspect.onClick = (handler)=>{\r\n                        disableComponent = (isComponentDisabled)=>{\r\n                            picksList.forEach(pick=>pick.pickDomManagerHandlers.updateComponentDisabled())\r\n                            picksDom.disable(isComponentDisabled);\r\n                            if (isComponentDisabled)\r\n                                picksElementAspect.onClickUnbind(); //componentDisabledEventBinder.unbind();\r\n                            else\r\n                                origOnClick(handler); //componentDisabledEventBinder.bind(picksElement, \"click\",  handler); \r\n                        }\r\n                    } \r\n                \r\n                    let isComponentDisabled; // state! \r\n                    function updateDisabled(){\r\n                        let newIsComponentDisabled = componentPropertiesAspect.getDisabled();\r\n                        if (isComponentDisabled!==newIsComponentDisabled){\r\n                            isComponentDisabled=newIsComponentDisabled;\r\n                            disableComponent(newIsComponentDisabled);\r\n                        }\r\n                    }\r\n                \r\n                    updateAppearanceAspect.updateAppearance = composeSync(updateAppearanceAspect.updateAppearance,  updateDisabled);\r\n                \r\n                    return{\r\n                        buildApi(api){\r\n                            api.updateDisabled = updateDisabled;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\nimport {getDataGuardedWithPrefix} from '../ToolsDom';\r\nimport {toggleStyling} from '../ToolsStyling';\r\nimport {ResetableFlag} from '../ToolsDom'\r\n\r\nexport function PlaceholderPlugin(){\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n                layout: () => {\r\n                    let {staticManager, picksList, picksDom, filterDom, staticDom, updateDataAspect,\r\n                        resetFilterListAspect, filterManagerAspect, environment} = aspects;\r\n                    let isIE11 = environment.isIE11;\r\n                    let {placeholder,  css} = configuration;\r\n                    let {picksElement} = picksDom;\r\n                    let filterInputElement = filterDom.filterInputElement;\r\n                \r\n                    function setPlaceholder(placeholder){\r\n                        filterInputElement.placeholder = placeholder;\r\n                    }\r\n                    if (isIE11){\r\n                        var ignoreNextInputResetableFlag = ResetableFlag(); \r\n                        let placeholderStopInputAspect = PlaceholderStopInputAspect(ignoreNextInputResetableFlag);\r\n                        var setPlaceholderOrig = setPlaceholder;\r\n                        setPlaceholder = function(placeholder){\r\n                            ignoreNextInputResetableFlag.set();\r\n                            setPlaceholderOrig(placeholder);\r\n                        }\r\n                        var origOnInput = filterDom.onInput;\r\n                        filterDom.onInput = (handler) => {\r\n                            origOnInput(\r\n                                ()=>{if (placeholderStopInputAspect.get()){\r\n                                    placeholderStopInputAspect.reset();\r\n                                } else {\r\n                                    handler();\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                \r\n                    if (!placeholder){\r\n                        placeholder = getDataGuardedWithPrefix(staticDom.initialElement,\"bsmultiselect\",\"placeholder\");\r\n                    }\r\n                \r\n                    function setEmptyInputWidth(isVisible){\r\n                        if(isVisible)\r\n                            filterInputElement.style.width ='100%';\r\n                        else \r\n                            filterInputElement.style.width ='2ch';\r\n                    }\r\n                    var emptyToggleStyling = toggleStyling(filterInputElement, css.filterInput_empty);\r\n                    function showPlacehodler(isVisible){\r\n                        if (isVisible)\r\n                        {\r\n                            setPlaceholder(placeholder?placeholder:'');\r\n                            picksElement.style.display = 'block';\r\n                        }\r\n                        else\r\n                        {\r\n                            setPlaceholder('');\r\n                            picksElement.style.display = 'flex';\r\n                        }\r\n                        emptyToggleStyling(isVisible);\r\n                        setEmptyInputWidth(isVisible);\r\n                    }\r\n                    showPlacehodler(true);\r\n                   \r\n                    function setDisabled(isComponentDisabled){ \r\n                        filterInputElement.disabled = isComponentDisabled;\r\n                    };\r\n                    let isEmpty = () => picksList.isEmpty() && filterDom.isEmpty()\r\n                \r\n                    function updatePlacehodlerVisibility(){\r\n                        showPlacehodler(isEmpty());\r\n                    };\r\n                    function updateEmptyInputWidth(){\r\n                        setEmptyInputWidth(isEmpty())\r\n                    };\r\n                    \r\n                    let origDisable = picksDom.disable;\r\n                    picksDom.disable = (isComponentDisabled)=>{\r\n                        setDisabled(isComponentDisabled);\r\n                        origDisable(isComponentDisabled);\r\n                    };\r\n                \r\n                    staticManager.appendToContainer = composeSync(staticManager.appendToContainer, updateEmptyInputWidth);\r\n                \r\n                    filterManagerAspect.processEmptyInput = composeSync(updateEmptyInputWidth, filterManagerAspect.processEmptyInput);\r\n                    resetFilterListAspect.forceResetFilter = composeSync(resetFilterListAspect.forceResetFilter, updatePlacehodlerVisibility);\r\n                            \r\n                    let origAdd = picksList.add;\r\n                    picksList.add = (pick) => { \r\n                        let returnValue = origAdd(pick);\r\n                        if (picksList.getCount()==1 ){ // make flex\r\n                            if (filterDom.isEmpty()){\r\n                                setPlaceholder('');\r\n                                picksElement.style.display = 'flex';\r\n                                emptyToggleStyling(false);\r\n                                filterInputElement.style.width ='2ch';\r\n                            } else {\r\n                                picksElement.style.display = 'flex';\r\n                            }\r\n                        }\r\n                        pick.dispose = composeSync(pick.dispose, function()\r\n                            { \r\n                                if (isEmpty()) {\r\n                                    showPlacehodler(true);\r\n                                }\r\n                            });\r\n                        return returnValue;\r\n                    };\r\n                \r\n                    updateDataAspect.updateData = composeSync(updateDataAspect.updateData, updatePlacehodlerVisibility);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// ie11 support\r\nfunction PlaceholderStopInputAspect(resetableFlag){\r\n    return{\r\n        get(){\r\n            return resetableFlag.get();\r\n        },\r\n        reset(){\r\n            return resetableFlag.reset();\r\n        }             \r\n    }\r\n}","export function PlaceholderCssPatchPlugin(defaults){\r\n    defaults.cssPatch.filterInput_empty= 'form-control'\r\n}","import {composeSync} from '../ToolsJs';\r\nimport {toggleStyling} from '../ToolsStyling';\r\n\r\nexport function FloatingLabelPlugin(defaults){\r\n    defaults.css.label_floating_lifted = 'floating-lifted';\r\n    defaults.css.picks_floating_lifted = 'floating-lifted';            \r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n                plugStaticDom: (aspects)=> {\r\n                    aspects.floatingLabelAspect = FloatingLabelAspect();\r\n        \t    },\r\n                layout: () => {\r\n                    let {picksList, picksDom, filterDom, \r\n                        updateDataAspect, resetFilterListAspect, floatingLabelAspect, labelAspect} = aspects;\r\n                   let {css} = configuration;\r\n                   \r\n                   if (floatingLabelAspect.isFloatingLabel() ){\r\n                       let labelElement = labelAspect.getLabel(); \r\n                       let picksElement = picksDom.picksElement;\r\n               \r\n                       var liftToggleStyling1 = toggleStyling(labelElement, css.label_floating_lifted);\r\n                       var liftToggleStyling2 = toggleStyling(picksElement, css.picks_floating_lifted);\r\n               \r\n                       function liftedLabel(isEmpty){\r\n                           liftToggleStyling1(isEmpty);\r\n                           liftToggleStyling2(isEmpty);\r\n                       }\r\n               \r\n                       let isEmpty = () => picksList.isEmpty() && filterDom.isEmpty() && !picksDom.getIsFocusIn();;\r\n               \r\n                       function updateLiftedLabel(){\r\n                           liftedLabel(!isEmpty());\r\n                       };\r\n               \r\n                       updateLiftedLabel();\r\n               \r\n                       resetFilterListAspect.forceResetFilter = composeSync(resetFilterListAspect.forceResetFilter, updateLiftedLabel);\r\n                           \r\n                       let origAdd = picksList.add;\r\n                       picksList.add = (pick) => { \r\n                           let returnValue = origAdd(pick);\r\n                           if (picksList.getCount()==1) \r\n                               updateLiftedLabel()\r\n                           pick.dispose = composeSync(pick.dispose, ()=>\r\n                               { \r\n                                   if (picksList.getCount()==0) \r\n                                       updateLiftedLabel()\r\n                               })\r\n                           return returnValue;\r\n                       };\r\n                   \r\n                       var origToggleFocusStyling = picksDom.toggleFocusStyling;\r\n                       picksDom.toggleFocusStyling = () => {\r\n                           var isFocusIn = picksDom.getIsFocusIn();\r\n                           origToggleFocusStyling(isFocusIn);\r\n                           updateLiftedLabel();\r\n                       }\r\n               \r\n                       updateDataAspect.updateData = composeSync(updateDataAspect.updateData, updateLiftedLabel);\r\n                   }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// export function FloatingLabelPlugin(aspects){\r\n//     let {configuration, picksList, picksDom, filterDom, \r\n//          updateDataAspect, resetFilterListAspect, floatingLabelAspect, labelAspect} = aspects;\r\n//     let {css} = configuration;\r\n    \r\n//     if (floatingLabelAspect.isFloatingLabel() ){\r\n//         let labelElement = labelAspect.getLabel(); \r\n//         let picksElement = picksDom.picksElement;\r\n\r\n//         var liftToggleStyling1 = toggleStyling(labelElement, css.label_floating_lifted);\r\n//         var liftToggleStyling2 = toggleStyling(picksElement, css.picks_floating_lifted);\r\n\r\n//         function liftedLabel(isEmpty){\r\n//             liftToggleStyling1(isEmpty);\r\n//             liftToggleStyling2(isEmpty);\r\n//         }\r\n\r\n//         let isEmpty = () => picksList.isEmpty() && filterDom.isEmpty() && !picksDom.getIsFocusIn();;\r\n\r\n//         function updateLiftedLabel(){\r\n//             liftedLabel(!isEmpty());\r\n//         };\r\n\r\n//         updateLiftedLabel();\r\n\r\n//         resetFilterListAspect.forceResetFilter = composeSync(resetFilterListAspect.forceResetFilter, updateLiftedLabel);\r\n            \r\n//         let origAdd = picksList.add;\r\n//         picksList.add = (pick) => { \r\n//             let returnValue = origAdd(pick);\r\n//             if (picksList.getCount()==1) \r\n//                 updateLiftedLabel()\r\n//             pick.dispose = composeSync(pick.dispose, ()=>\r\n//                 { \r\n//                     if (picksList.getCount()==0) \r\n//                         updateLiftedLabel()\r\n//                 })\r\n//             return returnValue;\r\n//         };\r\n    \r\n//         var origToggleFocusStyling = picksDom.toggleFocusStyling;\r\n//         picksDom.toggleFocusStyling = () => {\r\n//             var isFocusIn = picksDom.getIsFocusIn();\r\n//             origToggleFocusStyling(isFocusIn);\r\n//             updateLiftedLabel();\r\n//         }\r\n\r\n//         updateDataAspect.updateData = composeSync(updateDataAspect.updateData, updateLiftedLabel);\r\n//     }\r\n// }\r\n\r\n// FloatingLabelPlugin.plugDefaultConfig = (defaults) => {\r\n//     defaults.css.label_floating_lifted = 'floating-lifted';\r\n//     defaults.css.picks_floating_lifted = 'floating-lifted';\r\n// }\r\n\r\n// FloatingLabelPlugin.plugStaticDom = (aspects) => {\r\n//     aspects.floatingLabelAspect = FloatingLabelAspect();\r\n// }\r\n\r\nfunction FloatingLabelAspect() {\r\n    return {\r\n        isFloatingLabel(){},\r\n    }\r\n}\r\n\r\n\r\n","export function WarningCssPatchPlugin(defaults){\r\n    defaults.cssPatch.warning = {paddingLeft: '.25rem', paddingRight: '.25rem', zIndex: 4,  fontSize:'small', backgroundColor: 'var(--bs-warning)'}\r\n}\r\n","import {addStyling} from \"../ToolsStyling\";\r\nimport {composeSync} from '../ToolsJs';\r\n\r\nconst defNoResultsWarningMessage = 'No results found';\r\n\r\nexport function WarningPlugin(defaults){\r\n    defaults.noResultsWarning = defNoResultsWarningMessage;\r\n    defaults.isNoResultsWarningEnabled = false;\r\n    return {\r\n        buildAspects: (aspects, configuration) => {\r\n            return {\r\n                layout: () => {\r\n                    let {choicesDom, createElementAspect, staticManager, afterInputAspect, filterManagerAspect, resetLayoutAspect} = aspects;\r\n                    let {css, noResultsWarning} = configuration;\r\n\r\n                    if (configuration.isNoResultsWarningEnabled){\r\n                        let warningAspect = WarningAspect(choicesDom, createElementAspect, staticManager, css);\r\n                        aspects.warningAspect = warningAspect;\r\n                    \r\n                        ExtendAfterInputAspect(afterInputAspect, warningAspect, filterManagerAspect, noResultsWarning);\r\n                    \r\n                        resetLayoutAspect.resetLayout = composeSync(() => warningAspect.hide(), resetLayoutAspect.resetLayout);\r\n                    }\r\n                },\r\n                attach: ()=> {\r\n                    let {createPopperAspect, filterDom, warningAspect, staticManager, disposeAspect} = aspects;\r\n                    if (warningAspect){\r\n                        let filterInputElement = filterDom.filterInputElement;\r\n                        \r\n                        let pop2 = createPopperAspect.createPopper(warningAspect.warningElement, filterInputElement, false);\r\n                        staticManager.appendToContainer = composeSync(staticManager.appendToContainer, pop2.init);\r\n                        \r\n                        var origWarningAspectShow = warningAspect.show;\r\n                        warningAspect.show = (msg) => {\r\n                            pop2.update();\r\n                            origWarningAspectShow(msg);\r\n                        }\r\n                        disposeAspect.dispose = composeSync(disposeAspect.dispose, pop2.dispose);      \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendAfterInputAspect(afterInputAspect, warningAspect, filterManagerAspect, noResultsWarning){\r\n    var origVisible = afterInputAspect.visible;\r\n    afterInputAspect.visible = (showChoices, visibleCount) => {\r\n        warningAspect.hide(); \r\n        origVisible(showChoices, visibleCount)\r\n    }\r\n\r\n    var origNotVisible = afterInputAspect.notVisible;\r\n    afterInputAspect.notVisible = (hideChoices) => {\r\n        origNotVisible(hideChoices);\r\n    \r\n        if (filterManagerAspect.getFilter())\r\n            warningAspect.show(noResultsWarning); \r\n        else\r\n            warningAspect.hide();\r\n    }\r\n}\r\n\r\nfunction WarningAspect(choicesDom, createElementAspect, staticManager, css){\r\n    let choicesElement = choicesDom.choicesElement;\r\n\r\n    var warningElement = createElementAspect.createElement('DIV'); \r\n    \r\n    var origAppendToContainer = staticManager.appendToContainer;\r\n    staticManager.appendToContainer = function(){\r\n        origAppendToContainer();\r\n        choicesElement.parentNode.insertBefore(warningElement, choicesElement.nextSibling); // insert after\r\n    }\r\n\r\n    warningElement.style.display = 'none';\r\n    addStyling(warningElement, css.warning);\r\n\r\n\r\n    return {\r\n        warningElement,\r\n        show(message){\r\n            warningElement.style.display = 'block';\r\n            warningElement.innerHTML = message;\r\n        },\r\n        hide(){\r\n            warningElement.style.display = 'none';\r\n            warningElement.innerHTML = \"\";\r\n        }\r\n    }\r\n}","import {WarningPlugin} from './WarningPlugin';\r\n\r\nexport function WarningBs4Plugin(defaults){\r\n    defaults.css.warning = 'alert-warning bg-warning';\r\n    return WarningPlugin(defaults);\r\n}\r\n","import {\r\n    BsAppearanceBs4Plugin, BsAppearanceBs5Plugin, \r\n    \r\n    CssPatchBs4Plugin, CssPatchBs5Plugin,\r\n    BsAppearanceBs4CssPatchPlugin, BsAppearanceBs5CssPatchPlugin,\r\n    \r\n    SelectElementPlugin, \r\n    LabelForAttributePlugin, ValidationApiPlugin, \r\n    UpdateAppearancePlugin, \r\n    \r\n    DisableComponentPlugin,\r\n    FormResetPlugin, CreatePopperPlugin,  RtlPlugin,  PlaceholderPlugin, PlaceholderCssPatchPlugin, \r\n     OptionsApiPlugin, \r\n    JQueryMethodsPlugin, \r\n    SelectedOptionPlugin, FormRestoreOnBackwardPlugin, \r\n    DisabledOptionPlugin, PicksApiPlugin, HighlightPlugin,\r\n    ChoicesDynamicStylingPlugin, CustomPickStylingsPlugin, CustomChoiceStylingsPlugin,\r\n    \r\n    FloatingLabelPlugin, FloatingLabelCssPatchBs5Plugin, \r\n    \r\n    WarningCssPatchPlugin, WarningBs4Plugin, WarningBs5Plugin,\r\n\r\n    PicksPlugin,\r\n\r\n    HiddenOptionPlugin,\r\n    /*HiddenOptionAltPlugin as HiddenOptionPlugin*/} from './plugins/index'\r\n\r\nimport {shallowClearClone} from './ToolsJs'\r\n\r\n\r\nexport let Bs4PluginSet = {BsAppearanceBs4Plugin, WarningBs4Plugin, CssPatchBs4Plugin, BsAppearanceBs4CssPatchPlugin }\r\n\r\nexport let Bs5PluginSet = {BsAppearanceBs5Plugin, WarningBs5Plugin, CssPatchBs5Plugin, BsAppearanceBs5CssPatchPlugin, FloatingLabelCssPatchBs5Plugin }\r\n\r\nexport let multiSelectPlugins = {SelectElementPlugin, \r\n    LabelForAttributePlugin, HiddenOptionPlugin, ValidationApiPlugin, \r\n    UpdateAppearancePlugin, \r\n    DisableComponentPlugin,\r\n    FormResetPlugin, CreatePopperPlugin, WarningCssPatchPlugin, RtlPlugin,  PlaceholderPlugin, PlaceholderCssPatchPlugin, FloatingLabelPlugin,  OptionsApiPlugin, \r\n    JQueryMethodsPlugin, \r\n    SelectedOptionPlugin, FormRestoreOnBackwardPlugin, \r\n    DisabledOptionPlugin, PicksApiPlugin, HighlightPlugin,\r\n    ChoicesDynamicStylingPlugin, CustomPickStylingsPlugin, CustomChoiceStylingsPlugin};\r\n\r\nexport let picksPlugins = {PicksPlugin, \r\n    LabelForAttributePlugin, ValidationApiPlugin, \r\n    UpdateAppearancePlugin, \r\n    DisableComponentPlugin, \r\n    CreatePopperPlugin, WarningCssPatchPlugin, RtlPlugin,  PlaceholderPlugin, PlaceholderCssPatchPlugin, FloatingLabelPlugin, OptionsApiPlugin, \r\n    JQueryMethodsPlugin, PicksApiPlugin, HighlightPlugin,\r\n    ChoicesDynamicStylingPlugin, CustomPickStylingsPlugin, CustomChoiceStylingsPlugin};\r\n\r\nexport let allPlugins =  shallowClearClone(multiSelectPlugins, {PicksPlugin});\r\n\r\n\r\n\r\n\r\n// var defaultConfig = {\r\n//     plugins: multiSelectPlugins\r\n// }\r\n\r\n// var picksConfig = {\r\n//     plugins: picksPlugins\r\n// }\r\n\r\n// export function createConfig(arg){\r\n//     return config;\r\n// }","import {composeSync} from './ToolsJs'\r\nimport {EventBinder} from './ToolsDom'\r\nimport {addStyling, toggleStyling} from './ToolsStyling'\r\n\r\nexport let utilities = {composeSync, EventBinder, addStyling, toggleStyling}","import {findDirectChildByTagName, closestByClassName} from './ToolsDom';\r\n\r\nexport function StaticDomFactory(createElementAspect){\r\n    return {\r\n        create(choicesDomFactory, filterDomFactory, picksDomFactory){\r\n            let choicesDom = choicesDomFactory.create();\r\n            return {\r\n                createStaticDom(element, containerClass){\r\n                    function showError(message){\r\n                        element.style.backgroundColor = 'red';\r\n                        element.style.color = 'white';\r\n                        throw new Error(message);\r\n                    }\r\n                   \r\n                    let containerElement, picksElement;\r\n                    let removableContainerClass= false;\r\n                    if (element.tagName == 'DIV') {\r\n                        containerElement = element;\r\n                        if (!containerElement.classList.contains(containerClass)){\r\n                            containerElement.classList.add(containerClass);\r\n                            removableContainerClass = true;\r\n                        }\r\n                        picksElement = findDirectChildByTagName(containerElement, 'UL');\r\n                    }\r\n                    else if (element.tagName == 'UL') {\r\n                        picksElement = element;\r\n                        containerElement = closestByClassName(element, containerClass);\r\n                        if (!containerElement){\r\n                            showError('BsMultiSelect: defined on UL but precedentant DIV for container not found; class='+containerClass);\r\n                        }\r\n                    } \r\n                    else if (element.tagName==\"INPUT\"){\r\n                        showError('BsMultiSelect: INPUT element is not supported');\r\n                    }\r\n                    let isDisposablePicksElement=false;\r\n                    if (!picksElement) {\r\n                        picksElement = createElementAspect.createElement('UL');\r\n                        isDisposablePicksElement = true; \r\n                    }\r\n\r\n                    let filterDom = filterDomFactory.create(isDisposablePicksElement);\r\n                    let picksDom  = picksDomFactory.create(picksElement, isDisposablePicksElement);\r\n                \r\n                    return {\r\n                        choicesDom,\r\n                        filterDom,\r\n                        picksDom,\r\n                        staticDom: {\r\n                            initialElement:element,\r\n                            containerElement,\r\n                            picksElement,\r\n                            isDisposablePicksElement\r\n                        },\r\n                        staticManager: {\r\n                            appendToContainer(){ \r\n                                containerElement.appendChild(choicesDom.choicesElement); \r\n                                if (isDisposablePicksElement)\r\n                                    containerElement.appendChild(picksElement)\r\n                            },\r\n                            dispose(){ \r\n                                containerElement.removeChild(choicesDom.choicesElement); \r\n                                if (removableContainerClass)\r\n                                    containerElement.classList.remove(containerClass);\r\n                                if (isDisposablePicksElement)\r\n                                    containerElement.removeChild(picksElement)\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","export function CreateElementAspect(createElement, createElementFromHtml){\r\n    return {\r\n        createElement,\r\n        createElementFromHtml\r\n    }\r\n}","export function ChoicesVisibilityAspect(choicesElement) {\r\n\r\n    return {\r\n        isChoicesVisible(){ \r\n            return choicesElement.style.display != 'none'},\r\n        setChoicesVisible(visible){\r\n            choicesElement.style.display = visible ? 'block' : 'none';\r\n        },\r\n        updatePopupLocation(){\r\n\r\n        }\r\n    }\r\n}\r\n","export function SpecialPicksEventsAspect(){\r\n    return {\r\n        backSpace(pick){ \r\n            pick.setSelectedFalse(); \r\n        }\r\n    }\r\n}","export function TriggerAspect(element, trigger) {\r\n    return {\r\n        trigger: (eventName) => {\r\n            trigger(element, eventName)\r\n        }\r\n    }\r\n}\r\n\r\nexport function OnChangeAspect(triggerAspect, name) {\r\n    return {\r\n        onChange(){\r\n            triggerAspect.trigger(name)\r\n        }\r\n    }\r\n}\r\n\r\nexport function ComponentPropertiesAspect(getDisabled) {\r\n    return {\r\n        getDisabled\r\n    }\r\n}\r\n\r\n","export function OptionsAspect(options){\r\n    return {\r\n        getOptions : () => options\r\n    }\r\n}\r\n\r\nexport function OptionPropertiesAspect(getText){\r\n    if (!getText){\r\n        getText = (option) => option.text;\r\n    }\r\n    return {\r\n        getText\r\n    }\r\n}\r\n","export function ChoicesEnumerableAspect(countableChoicesList, getNext){\r\n    return {\r\n        forEach(f){\r\n            let wrap =  countableChoicesList.getHead(); \r\n            while(wrap){\r\n                f(wrap);\r\n                wrap = getNext(wrap);\r\n            }\r\n        }\r\n    }\r\n}","export function NavigateManager(\r\n    list, getPrev, getNext\r\n){\r\n    return {\r\n        navigate(down, wrap /* hoveredChoice */){ \r\n            if (down) {\r\n                return wrap?getNext(wrap): list.getHead();\r\n            } else {\r\n                return wrap?getPrev(wrap): list.getTail();\r\n            }\r\n        },\r\n        getCount(){\r\n            return list.getCount()\r\n        },\r\n        getHead(){\r\n            return list.getHead()\r\n        }\r\n    }\r\n}\r\n\r\nexport function FilterPredicateAspect(){\r\n    return {\r\n        filterPredicate: (wrap, text) => \r\n            wrap.choice.searchText.indexOf(text) >= 0    \r\n    }\r\n}\r\n\r\nexport function FilterManagerAspect(\r\n    emptyNavigateManager,\r\n    filteredNavigateManager,\r\n    filteredChoicesList, \r\n    choicesEnumerableAspect,\r\n    filterPredicateAspect\r\n    ) {\r\n    let showEmptyFilter=true;\r\n    let filterText = \"\";\r\n    return {\r\n        getNavigateManager(){\r\n            return (showEmptyFilter)?emptyNavigateManager:filteredNavigateManager;\r\n        },\r\n        processEmptyInput(){ // redefined in PlaceholderPulgin, HighlightPlugin\r\n            showEmptyFilter =true;\r\n            filterText =\"\";\r\n            choicesEnumerableAspect.forEach( (wrap)=>{\r\n                wrap.choice.setVisible(true);\r\n            });\r\n        },\r\n        getFilter(){\r\n            return filterText;\r\n        },\r\n        setFilter(text){   // redefined in  HighlightPlugin\r\n            showEmptyFilter =false;\r\n            filterText = text;\r\n            filteredChoicesList.reset();\r\n            choicesEnumerableAspect.forEach( (wrap)=>{\r\n                wrap.choice.filteredPrev = wrap.choice.filteredNext = null;\r\n                var v = filterPredicateAspect.filterPredicate(wrap, text)\r\n                if (v)\r\n                    filteredChoicesList.add(wrap);\r\n                wrap.choice.setVisible(v);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","export function BuildAndAttachChoiceAspect(\r\n    buildChoiceAspect,\r\n    ){\r\n    return {\r\n        buildAndAttachChoice(\r\n            wrap,\r\n            getNextElement \r\n            )\r\n        {\r\n            buildChoiceAspect.buildChoice(wrap);\r\n            wrap.choice.choiceElementAttach(getNextElement?.());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BuildChoiceAspect(\r\n        choicesDom,\r\n        choiceDomFactory,\r\n        choiceClickAspect\r\n    ) {\r\n    return {\r\n        buildChoice(wrap) {\r\n            var {choiceElement, setVisible, attach, detach} = choicesDom.createChoiceElement();\r\n            wrap.choice.choiceElement = choiceElement;\r\n            wrap.choice.choiceElementAttach = attach;\r\n            wrap.choice.isChoiceElementAttached = true;\r\n            \r\n            let {dispose, choiceDom, choiceDomManagerHandlers} = choiceDomFactory.create(choiceElement, wrap, () => choiceClickAspect.choiceClick(wrap));\r\n            wrap.choice.choiceDom=choiceDom;\r\n            choiceDomManagerHandlers.updateData();\r\n            if (choiceDomManagerHandlers.updateSelected)  \r\n                choiceDomManagerHandlers.updateSelected();\r\n            if (choiceDomManagerHandlers.updateDisabled)  \r\n                choiceDomManagerHandlers.updateDisabled();\r\n            \r\n\r\n            wrap.choice.choiceDomManagerHandlers = choiceDomManagerHandlers;\r\n            \r\n            wrap.choice.remove = () => {\r\n                detach();\r\n            };\r\n            \r\n            wrap.choice.isFilteredIn = true;\r\n            \r\n            wrap.choice.setHoverIn = (v) => {\r\n                wrap.choice.isHoverIn =v ;\r\n                choiceDomManagerHandlers.updateHoverIn();\r\n            }\r\n        \r\n            wrap.choice.setVisible = (v) => {\r\n                wrap.choice.isFilteredIn = v;\r\n                setVisible(wrap.choice.isFilteredIn)\r\n            }\r\n            \r\n            wrap.choice.dispose = () => {\r\n                wrap.choice.choiceDomManagerHandlers = null;\r\n                dispose();\r\n    \r\n                wrap.choice.choiceElement = null;\r\n                wrap.choice.choiceDom = null;\r\n                wrap.choice.choiceElementAttach = null;\r\n                wrap.choice.isChoiceElementAttached = false;\r\n                wrap.choice.remove = null; \r\n        \r\n                // not real data manipulation but internal state\r\n                wrap.choice.setVisible = null; // TODO: refactor it there should be 3 types of not visibility: for hidden, for filtered out, for optgroup, for message item\r\n                wrap.choice.setHoverIn = null;\r\n        \r\n                wrap.choice.dispose = null;\r\n            }\r\n\r\n            wrap.dispose = () => {\r\n                wrap.choice.dispose();\r\n                wrap.dispose = null;\r\n            }\r\n        }\r\n    }\r\n}","export function OptionAttachAspect(createWrapAspect, createChoiceBaseAspect, buildAndAttachChoiceAspect, wraps){\r\n    return {\r\n        attach(option){\r\n            let wrap = createWrapAspect.createWrap(option);\r\n            wrap.choice = createChoiceBaseAspect.createChoiceBase(option);\r\n\r\n            // let optGroup = optGroupAspect.getOptionOptGroup(option);\r\n            // if (prevOptGroup != optGroup){\r\n            //     currentOptGroup = optGroup;\r\n            //     var optGroupWrap = optGroupBuildAspect.wrapAndAttachOptGroupItem(option);\r\n            // }\r\n            // wrap.optGroup = currentOptGroup;\r\n            \r\n            \r\n            wraps.push(wrap); // note: before attach because attach need it for navigation management\r\n            buildAndAttachChoiceAspect.buildAndAttachChoice(wrap);\r\n            //wraps.push(wrap);\r\n        }\r\n    }\r\n}\r\n\r\nexport function OptionsLoopAspect(optionsAspect, optionAttachAspect){ \r\n    return{\r\n        loop(){\r\n            let options = optionsAspect.getOptions();\r\n            for(let i = 0; i<options.length; i++) {\r\n                let option = options[i];\r\n                optionAttachAspect.attach(option);\r\n            } \r\n        }\r\n    }\r\n}","export function UpdateDataAspect(\r\n    choicesDom, wraps, picksList, optionsLoopAspect, resetLayoutAspect\r\n    ){\r\n    return {\r\n        updateData(){\r\n            // close drop down , remove filter\r\n            resetLayoutAspect.resetLayout();\r\n            choicesDom.choicesListElement.innerHTML = \"\"; // TODO: there should better \"optimization\"\r\n            wraps.clear();\r\n            picksList.forEach(pick=>pick.dispose());\r\n            picksList.reset();\r\n            optionsLoopAspect.loop();\r\n        }\r\n    }\r\n}\r\n\r\nexport function UpdateAspect(updateDataAspect){\r\n    return {\r\n        update(){\r\n            updateDataAspect.updateData();\r\n        }\r\n    }\r\n}","import {composeSync} from './ToolsJs';\r\n\r\nexport function IsChoiceSelectableAspect(){ // TODO rename to IsSelectableByUserAspect ?\r\n    return {\r\n        isSelectable: (wrap)=>true \r\n    }\r\n}\r\n\r\n// todo: remove?\r\nexport function ChoiceClickAspect(optionToggleAspect, filterDom){\r\n    return {\r\n        choiceClick: (wrap) => {\r\n            optionToggleAspect.toggle(wrap);\r\n            filterDom.setFocus();\r\n        }\r\n    }\r\n}\r\n\r\n// // fullMatchAspect trySetWrapSelected(fullMatchWrap.option, composeUpdateSelected(fullMatchWrap, true), true);\r\n\r\nexport function OptionToggleAspect(createPickHandlersAspect, addPickAspect /*, setOptionSelectedAspect*/){\r\n    return {\r\n        toggle: (wrap) => {\r\n            let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n            addPickAspect.addPick(wrap, pickHandlers);\r\n            return true; // TODO: process setOptionSelectedAspect\r\n        }\r\n    }\r\n}\r\n\r\nexport function AddPickAspect(){\r\n    return {\r\n        addPick(wrap, pickHandlers){\r\n            return pickHandlers.producePick();\r\n        }\r\n    }\r\n}\r\n\r\nexport function FullMatchAspect(createPickHandlersAspect, addPickAspect){\r\n    return {\r\n        fullMatch(wrap){\r\n            let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n            addPickAspect.addPick(wrap, pickHandlers);\r\n            return true; // TODO: process setOptionSelectedAspect\r\n        }\r\n    }\r\n}\r\n\r\nexport function RemovePickAspect(){\r\n    return {\r\n        removePick(wrap, pick){\r\n            pick.dispose(); // overrided in SelectedOptionPlugin with trySetWrapSelected(wrap, false);\r\n        }\r\n    }\r\n}\r\n\r\nexport function ProducePickAspect(picksList, removePickAspect, buildPickAspect){\r\n    return {\r\n        producePick(wrap, pickHandlers){\r\n            let pick = buildPickAspect.buildPick(wrap, (event)=>pickHandlers.removeOnButton(event));\r\n                \r\n            let fixSelectedFalse = () => removePickAspect.removePick(wrap, pick)\r\n\r\n            pickHandlers.removeOnButton = fixSelectedFalse;\r\n            \r\n            pick.pickElementAttach();\r\n            let {remove: removeFromPicksList} = picksList.add(pick);\r\n            pick.setSelectedFalse = fixSelectedFalse;\r\n            pick.wrap = wrap; \r\n            pick.dispose = composeSync(\r\n                removeFromPicksList,\r\n                ()=>{\r\n                    pick.setSelectedFalse=null;\r\n                    pick.wrap = null;\r\n                }, \r\n                pick.dispose);\r\n            pickHandlers.removeAndDispose = () => pick.dispose();\r\n            return pick;\r\n        }\r\n    }\r\n}\r\n\r\n// redefined in MultiSelectInlineLayout to redefine handlers removeOnButton\r\n// redefined in SelectedOptionPlugin to compose wrap.updateSelected\r\nexport function CreatePickHandlersAspect(producePickAspect){\r\n    return{\r\n        createPickHandlers(wrap){\r\n            let pickHandlers = { \r\n                producePick: null,  // not redefined directly, but redefined in addPickAspect\r\n                removeAndDispose: null,  // not redefined, \r\n                removeOnButton: null // redefined in MultiSelectInlineLayout\r\n            }\r\n            \r\n            pickHandlers.producePick = () => producePickAspect.producePick(wrap, pickHandlers);\r\n            return pickHandlers;\r\n        }\r\n    }\r\n}\r\n\r\nexport function CreateChoiceBaseAspect(optionPropertiesAspect){\r\n    return {\r\n        createChoiceBase(option){\r\n            return {\r\n                    \r\n                //updateDisabled:null,  \r\n                //updateHidden:null,\r\n                \r\n                // navigation and filter support\r\n                filteredPrev: null, \r\n                filteredNext: null, \r\n                searchText: optionPropertiesAspect.getText(option).toLowerCase().trim(), // TODO make an index abstraction\r\n                \r\n                // internal state handlers, so they do not have \"update semantics\"\r\n                isHoverIn: false,\r\n                isFilteredIn: false,\r\n                \r\n                setVisible: null,\r\n                setHoverIn: null,\r\n                \r\n                // TODO: is it a really sense to have them there?\r\n                isChoiceElementAttached: false,\r\n                choiceElement: null,\r\n                choiceDom:null,\r\n                choiceElementAttach: null,\r\n                \r\n                itemPrev: null,\r\n                itemNext: null,\r\n                \r\n                remove: null,\r\n                \r\n                dispose: null\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function CreateWrapAspect(){\r\n    return {\r\n        createWrap(option){\r\n            return {\r\n                option: option\r\n            }\r\n        }\r\n    }\r\n}","export function HoveredChoiceAspect(){\r\n    let hoveredChoice=null;\r\n    return {\r\n        getHoveredChoice: () => hoveredChoice,\r\n        setHoveredChoice: (wrap) => {hoveredChoice = wrap},\r\n        resetHoveredChoice() {\r\n            if (hoveredChoice) {\r\n                hoveredChoice.choice.setHoverIn(false)\r\n                hoveredChoice = null;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function NavigateAspect(hoveredChoiceAspect, navigate){\r\n    return {\r\n        hoverIn(wrap){\r\n            hoveredChoiceAspect.resetHoveredChoice(); \r\n            hoveredChoiceAspect.setHoveredChoice(wrap);\r\n            wrap.choice.setHoverIn(true);\r\n        },\r\n        navigate: (down) => navigate(down, hoveredChoiceAspect.getHoveredChoice()), \r\n    }\r\n}","export function Wraps(wrapsCollection,  \r\n    listFacade_reset, listFacade_remove, listFacade_add) \r\n{\r\n    return {\r\n        push: (wrap) => push(wrap, wrapsCollection, listFacade_add),\r\n        insert: (key, wrap) => insert(key, wrap, wrapsCollection, listFacade_add),\r\n        remove: (key) => {\r\n            var wrap = wrapsCollection.remove(key);\r\n            listFacade_remove(wrap);\r\n            return wrap;\r\n        },\r\n        clear: () => {\r\n            wrapsCollection.reset();\r\n            listFacade_reset();\r\n        }, \r\n        dispose: () => wrapsCollection.forLoop(wrap => wrap.dispose()) \r\n    }\r\n}\r\n\r\nfunction push(wrap, wrapsCollection, listFacade_add){\r\n    wrapsCollection.push(wrap);\r\n    listFacade_add(wrap);\r\n}\r\n\r\nfunction insert(key, wrap, wrapsCollection, listFacade_add){\r\n    if (key>=wrapsCollection.getCount()) {\r\n        push(wrap, wrapsCollection, listFacade_add);\r\n    }\r\n    else {\r\n        wrapsCollection.add(wrap, key);\r\n        listFacade_add(wrap, key);\r\n    }\r\n}","export function PickButtonAspect(buttonHTML){\r\n    return {\r\n        getButtonHTML : () => buttonHTML\r\n    }\r\n}","export function BuildPickAspect(\r\n    picksDom, \r\n    pickDomFactory\r\n){\r\n    return {\r\n        buildPick(wrap, removeOnButton){\r\n            let {pickElement, attach, detach} = picksDom.createPickElement(); \r\n            let {dispose, pickDom, pickDomManagerHandlers} = pickDomFactory.create(pickElement, wrap, removeOnButton); \r\n            \r\n            pickDomManagerHandlers.updateData();\r\n            if (pickDomManagerHandlers.updateDisabled)\r\n                pickDomManagerHandlers.updateDisabled();\r\n            if (pickDomManagerHandlers.updateComponentDisabled)\r\n                pickDomManagerHandlers.updateComponentDisabled();\r\n            let pick = {\r\n                pickDom,\r\n                pickDomManagerHandlers,\r\n                pickElementAttach: attach,\r\n                dispose: () => { \r\n                    detach(); \r\n                    dispose(); \r\n                    pick.pickDomManagerHandlers = null;\r\n                    pick.pickDom = pickDom;\r\n                    pick.pickElementAttach = null;\r\n                    pick.dispose = null;\r\n                }\r\n            }\r\n            return pick;\r\n        }\r\n    }\r\n}","export function InputAspect(\r\n    filterDom,\r\n    filterManagerAspect,\r\n    fullMatchAspect\r\n    ){\r\n\r\n    return {\r\n        // overrided in SelectedOptionPlugin\r\n        processInput(){ \r\n            let filterInputValue = filterDom.getValue();\r\n            let text = filterInputValue.trim();\r\n            var isEmpty=false;\r\n            if (text == '')\r\n                isEmpty=true;\r\n            else\r\n            {\r\n                filterManagerAspect.setFilter(text.toLowerCase());\r\n            }\r\n            \r\n            if (!isEmpty)\r\n            {\r\n                if ( filterManagerAspect.getNavigateManager().getCount() == 1)\r\n                {\r\n                    // todo: move exact match to filterManager\r\n                    let fullMatchWrap =  filterManagerAspect.getNavigateManager().getHead();\r\n                    let text = filterManagerAspect.getFilter();\r\n                    if (fullMatchWrap.choice.searchText == text)\r\n                    {\r\n                        let success = fullMatchAspect.fullMatch(fullMatchWrap); \r\n                        if (success) {\r\n                            filterDom.setEmpty();\r\n                            isEmpty = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {filterInputValue, isEmpty};\r\n        }\r\n    }\r\n}","export function ResetFilterListAspect(filterDom, filterManagerAspect){\r\n    return {\r\n        forceResetFilter(){  // over in PlaceholderPlugin\r\n            filterDom.setEmpty();\r\n            filterManagerAspect.processEmptyInput(); // over in PlaceholderPlugin\r\n        }\r\n    }\r\n}\r\n\r\nexport function ResetFilterAspect(filterDom, resetFilterListAspect){\r\n    return {\r\n        resetFilter(){ // call in OptionsApiPlugin\r\n            if (!filterDom.isEmpty())  // call in Placeholder\r\n                resetFilterListAspect.forceResetFilter(); // over in Placeholder\r\n        }\r\n    }\r\n}\r\n\r\nexport function FocusInAspect(picksDom){\r\n    return {\r\n        setFocusIn(focus){ // call in OptionsApiPlugin\r\n            picksDom.setIsFocusIn(focus) // unique call, call BsAppearancePlugin\r\n            picksDom.toggleFocusStyling() // over BsAppearancePlugin\r\n        }\r\n    }\r\n}\r\n\r\n","import {composeSync} from './ToolsJs';\r\nimport {EventBinder, EventLoopProlongableFlag, EventTumbler, containsAndSelf} from './ToolsDom'\r\n\r\nexport function MultiSelectInlineLayoutAspect (\r\n        environment, filterDom, choicesDom, \r\n        choicesVisibilityAspect, \r\n        hoveredChoiceAspect, navigateAspect, filterManagerAspect,\r\n        focusInAspect, optionToggleAspect,\r\n        createPickHandlersAspect,\r\n        picksList,\r\n        inputAspect, specialPicksEventsAspect,  buildChoiceAspect, \r\n        resetLayoutAspect,\r\n\r\n        picksElementAspect,\r\n        \r\n        afterInputAspect,\r\n        disposeAspect\r\n    ) \r\n{\r\n    let choicesElement = choicesDom.choicesElement;\r\n    var window = environment.window;\r\n    var document = window.document;\r\n    var eventLoopFlag =EventLoopProlongableFlag(window); \r\n    var skipFocusout = false; // state\r\n    \r\n    function getSkipFocusout() {\r\n        return skipFocusout;\r\n    };\r\n    function resetSkipFocusout() {\r\n        skipFocusout = false;\r\n    };\r\n    function setSkipFocusout() {\r\n        skipFocusout = true;\r\n    };\r\n\r\n    // we want to escape the closing of the menu (because of focus out from) on a user's click inside the container\r\n    var skipoutMousedown = function() {\r\n        setSkipFocusout();\r\n    }\r\n\r\n    // add listeners that manages close dropdown on  click outside container\r\n    var choicesElementMousedownEventTumbler = EventTumbler(choicesElement, \"mousedown\", skipoutMousedown);\r\n    var documentMouseupEventTumbler = EventTumbler(document, \"mouseup\", documentMouseup);\r\n\r\n    var documentMouseup = function(event) {\r\n        // if we would left without focus then \"close the drop\" do not remove focus border\r\n        if (choicesElement == event.target) \r\n            filterDom.setFocus()\r\n\r\n        // if click outside container - close dropdown\r\n        else if ( !containsAndSelf(choicesElement, event.target) && !picksElementAspect.containsAndSelf(event.target)) {\r\n            resetLayoutAspect.resetLayout();\r\n            focusInAspect.setFocusIn(false);\r\n        }\r\n    }\r\n\r\n    function showChoices() {\r\n        if ( !choicesVisibilityAspect.isChoicesVisible() )\r\n        {\r\n            choicesVisibilityAspect.updatePopupLocation();\r\n            eventLoopFlag.set();\r\n            choicesVisibilityAspect.setChoicesVisible(true);\r\n            \r\n            // TODO: move to scroll plugin\r\n            choicesElement.scrollTop = 0;\r\n            \r\n            choicesElementMousedownEventTumbler.on();\r\n            documentMouseupEventTumbler.on();\r\n        }\r\n    }\r\n\r\n    function hideChoices() {\r\n        resetMouseCandidateChoice();\r\n        hoveredChoiceAspect.resetHoveredChoice();\r\n        if (choicesVisibilityAspect.isChoicesVisible())\r\n        {\r\n            // COOMENT OUT DEBUGGING popup layout\r\n            choicesVisibilityAspect.setChoicesVisible(false);\r\n            \r\n            choicesElementMousedownEventTumbler.off();\r\n            documentMouseupEventTumbler.off();\r\n        }\r\n    }\r\n\r\n    var preventDefaultClickEvent = null;\r\n\r\n    // TODO: remove setTimeout: set on start of mouse event reset on end\r\n    function skipoutAndResetMousedown(){\r\n        skipoutMousedown();\r\n        window.setTimeout(()=>resetSkipFocusout());\r\n    }\r\n\r\n    function processUncheck(uncheckOption, event){\r\n        // we can't remove item on \"click\" in the same loop iteration - it is unfrendly for 3PP event handlers (they will get detached element)\r\n        // never remove elements in the same event iteration\r\n        window.setTimeout(()=>uncheckOption())\r\n        preventDefaultClickEvent = event; // setPreventDefaultMultiSelectEvent\r\n    }\r\n\r\n    // function handleOnRemoveButton(onRemove, setSelectedFalse){\r\n    //     // processRemoveButtonClick removes the item\r\n    //     // what is a problem with calling 'remove' directly (not using  setTimeout('remove', 0)):\r\n    //     // consider situation \"MultiSelect\" on DROPDOWN (that should be closed on the click outside dropdown)\r\n    //     // therefore we aslo have document's click's handler where we decide to close or leave the DROPDOWN open.\r\n    //     // because of the event's bubling process 'remove' runs first. \r\n    //     // that means the event's target element on which we click (the x button) will be removed from the DOM together with badge \r\n    //     // before we could analize is it belong to our dropdown or not.\r\n    //     // important 1: we can't just the stop propogation using stopPropogate because click outside dropdown on the similar \r\n    //     // component that use stopPropogation will not close dropdown (error, dropdown should be closed)\r\n    //     // important 2: we can't change the dropdown's event handler to leave dropdown open if event's target is null because of\r\n    //     // the situation described above: click outside dropdown on the same component.\r\n    //     // Alternatively it could be possible to use stopPropogate but together create custom click event setting new target \r\n    //     // that belomgs to DOM (e.g. panel)\r\n\r\n\r\n    //     onRemove(event => {\r\n    //         processUncheck(setSelectedFalse, event);\r\n    //         hideChoices();\r\n    //         resetFilterAspect.resetFilter(); \r\n    //     });\r\n    // }\r\n    \r\n    function handleOnRemoveButton(setSelectedFalse){ return (event) => {\r\n        processUncheck(setSelectedFalse, event);\r\n        resetLayoutAspect.resetLayout(); \r\n    }}\r\n    \r\n    let mouseCandidateEventBinder = EventBinder();\r\n    var resetMouseCandidateChoice = () => {\r\n        mouseCandidateEventBinder.unbind();\r\n    };\r\n\r\n    var mouseOverToHoveredAndReset = (wrap) => {\r\n        \r\n        if (!wrap.choice.isHoverIn)\r\n            navigateAspect.hoverIn(wrap);\r\n        resetMouseCandidateChoice();\r\n    };\r\n \r\n    function adoptChoiceElement(wrap){\r\n        let choiceElement = wrap.choice.choiceElement;\r\n        // in chrome it happens on \"become visible\" so we need to skip it, \r\n        // for IE11 and edge it doesn't happens, but for IE11 and Edge it doesn't happens on small \r\n        // mouse moves inside the item. \r\n        // https://stackoverflow.com/questions/59022563/browser-events-mouseover-doesnt-happen-when-you-make-element-visible-and-mous\r\n        \r\n        var onChoiceElementMouseover = () => \r\n        {\r\n            if (eventLoopFlag.get() )\r\n            {\r\n                resetMouseCandidateChoice();\r\n                mouseCandidateEventBinder.bind(choiceElement, 'mousemove', ()=>mouseOverToHoveredAndReset(wrap));\r\n                mouseCandidateEventBinder.bind(choiceElement, 'mousedown', ()=>mouseOverToHoveredAndReset(wrap));\r\n            }\r\n            else\r\n            {\r\n                if (!wrap.choice.isHoverIn)\r\n                {\r\n                    // NOTE: mouseleave is not enough to guarantee remove hover styles in situations\r\n                    // when style was setuped without mouse (keyboard arrows)\r\n                    // therefore force reset manually (done inside hoverIn)\r\n                    navigateAspect.hoverIn(wrap);\r\n                }   \r\n            }\r\n        }\r\n        \r\n        // note 1: mouseleave preferred to mouseout - which fires on each descendant\r\n        // note 2: since I want add aditional info panels to the dropdown put mouseleave on dropdwon would not work\r\n        var onChoiceElementMouseleave = () => {\r\n            if (!eventLoopFlag.get()) {\r\n                hoveredChoiceAspect.resetHoveredChoice();\r\n            }\r\n        }\r\n        var overAndLeaveEventBinder = EventBinder();\r\n        overAndLeaveEventBinder.bind(choiceElement, 'mouseover',  onChoiceElementMouseover);\r\n        overAndLeaveEventBinder.bind(choiceElement, 'mouseleave', onChoiceElementMouseleave);\r\n\r\n        return overAndLeaveEventBinder.unbind;\r\n    }\r\n\r\n    \r\n\r\n\r\n    // it can be initated by 3PP functionality\r\n    // sample (1) BS functionality - input x button click - clears input\r\n    // sample (2) BS functionality - esc keydown - clears input\r\n    // and there could be difference in processing: (2) should hide the menu, then reset , when (1) should just reset without hiding.\r\n\r\n    function afterInput(){\r\n        let visibleCount = filterManagerAspect.getNavigateManager().getCount();\r\n\r\n        if (visibleCount > 0){\r\n            afterInputAspect.visible(showChoices, visibleCount);\r\n        }else{\r\n            afterInputAspect.notVisible(hideChoices);\r\n        }\r\n    }\r\n\r\n    function keyDownArrow(down) {\r\n        let wrap = navigateAspect.navigate(down);  \r\n        if (wrap)\r\n        {\r\n            // TODO: next line should be moved to planned  \"HeightAndScroll\" plugin, actual only for scrolling with keyDown functionality\r\n            eventLoopFlag.set(400); // means disable mouse handlers that set hovered choice item; arrowDown can intiate scrolling when scrolling can itiate mouse leave on hovered item; this stops it\r\n            navigateAspect.hoverIn(wrap); // !\r\n            showChoices(); \r\n        }\r\n    }\r\n\r\n    function hoveredToSelected(){\r\n        let hoveredWrap = hoveredChoiceAspect.getHoveredChoice(); \r\n        if (hoveredWrap){\r\n            let wasToggled = optionToggleAspect.toggle(hoveredWrap); \r\n            if (wasToggled) {\r\n                resetLayoutAspect.resetLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: bind it more declarative way? (compact code)\r\n    var onKeyDown = (event) => {\r\n        let keyCode = event.which;\r\n        var empty = filterDom.isEmpty();\r\n        if ([ 13,\r\n              27  // '27-esc' there is \"just in case\", I can imagine that there are user agents that do UNDO\r\n            ].indexOf(keyCode)>=0 \r\n            || (keyCode == 9 && !empty) //  otherwice there are no keyup (true at least for '9-tab'),\r\n            ) {\r\n                event.preventDefault(); \r\n            \r\n            // '13-enter'  - prevention against form's default button \r\n            // but doesn't help with bootsrap modal ESC or ENTER (close behaviour);\r\n        }\r\n        if ([ 38, 40 ].indexOf(keyCode) >= 0 )\r\n            event.preventDefault(); \r\n        if (keyCode == 8 /*backspace*/) {\r\n            // NOTE: this will process backspace only if there are no text in the input field\r\n            // If user will find this inconvinient, we will need to calculate something like this\r\n            // let isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n            if (empty) {\r\n                let pick = picksList.getTail();\r\n                if (pick){ \r\n                    specialPicksEventsAspect.backSpace(pick);\r\n                }\r\n            }\r\n        }\r\n        // ---------------------------------------------------------------------------------\r\n        // NOTE: no preventDefault called in case of empty for 9-tab\r\n        else if (keyCode == 9  /*tab*/) { // NOTE: no keydown for this (without preventDefaul after TAB keyup event will be targeted another element)  \r\n            if (empty) { \r\n                hideChoices();  // hideChoices inside (and no filter reset since it is empty) \r\n            }\r\n        }\r\n        else if (keyCode == 27 /*esc*/ ) { // NOTE: forbid the ESC to close the modal (in case the nonempty or dropdown is open)\r\n            if (!empty  || choicesVisibilityAspect.isChoicesVisible())\r\n                event.stopPropagation()\r\n        }\r\n        else if (keyCode == 38) {\r\n            keyDownArrow(false); // up\r\n        }\r\n        else if (keyCode == 40) {\r\n            keyDownArrow(true); // down\r\n        }\r\n    }\r\n    var onKeyUp = (event) => {\r\n        let keyCode = event.which;\r\n        //var handler = keyUp[event.which/* key code */];\r\n        //handler();    \r\n        if (keyCode == 9 /*tab*/) {\r\n            if (choicesVisibilityAspect.isChoicesVisible()) {\r\n                keyDownArrow(true);\r\n            } else {\r\n                if (filterManagerAspect.getNavigateManager().getCount()>0){\r\n                    showChoices();\r\n                }\r\n            }\r\n        }\r\n        else if (keyCode == 13 ) {\r\n            if (choicesVisibilityAspect.isChoicesVisible()) {\r\n                hoveredToSelected();\r\n            } else {\r\n                if (filterManagerAspect.getNavigateManager().getCount()>0){\r\n                    showChoices();\r\n                }\r\n            }\r\n        }\r\n        else if (keyCode == 27) { // escape\r\n            // is it always empty (bs x can still it) \r\n            resetLayoutAspect.resetLayout();\r\n        }\r\n    }\r\n\r\n    function clickToShowChoices(event){\r\n        filterDom.setFocusIfNotTarget(event.target);\r\n        if (preventDefaultClickEvent != event) {\r\n            if (choicesVisibilityAspect.isChoicesVisible()){\r\n                hideChoices() \r\n            } else {\r\n                if (filterManagerAspect.getNavigateManager().getCount()>0)\r\n                    showChoices();\r\n            }\r\n        }\r\n        preventDefaultClickEvent=null;\r\n    }\r\n\r\n    return {\r\n        init(){\r\n            filterDom.onFocusIn(()=>focusInAspect.setFocusIn(true));\r\n            filterDom.onFocusOut(() => { \r\n                    if (!getSkipFocusout()){ // skip initiated by mouse click (we manage it different way)\r\n                        resetLayoutAspect.resetLayout(); // if do not do this we will return to filtered list without text filter in input\r\n                        focusInAspect.setFocusIn(false);\r\n                    }\r\n                    resetSkipFocusout();\r\n                }\r\n            );\r\n                \r\n            filterDom.onInput(() => {\r\n                let {filterInputValue, isEmpty} = inputAspect.processInput();\r\n                if (isEmpty)\r\n                    filterManagerAspect.processEmptyInput();\r\n                else\r\n                    filterDom.setWidth(filterInputValue);  \r\n                eventLoopFlag.set(); // means disable mouse handlers that set hovered item; otherwise we will get \"Hover On MouseEnter\" when filter's changes should remove hover\r\n                afterInput();\r\n            });    \r\n            filterDom.onKeyDown(onKeyDown);    \r\n            filterDom.onKeyUp(onKeyUp);\r\n                \r\n            picksElementAspect.onClick(clickToShowChoices);\r\n            picksElementAspect.onMousedown(skipoutAndResetMousedown);\r\n        \r\n            resetLayoutAspect.resetLayout = composeSync(\r\n                hideChoices,\r\n                resetLayoutAspect.resetLayout // resetFilter by default\r\n            );\r\n        \r\n            let origCreatePickHandlers = createPickHandlersAspect.createPickHandlers;\r\n            createPickHandlersAspect.createPickHandlers = (wrap) => {\r\n                let pickHandlers = origCreatePickHandlers(wrap);\r\n                pickHandlers.removeOnButton = handleOnRemoveButton(pickHandlers.removeOnButton);\r\n                return pickHandlers;\r\n            } \r\n        \r\n            let origBuildChoice = buildChoiceAspect.buildChoice;\r\n            buildChoiceAspect.buildChoice = (wrap) => {\r\n                origBuildChoice(wrap);\r\n                let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n        \r\n                wrap.choice.remove = composeSync(wrap.choice.remove, () => {\r\n                    if (pickHandlers.removeAndDispose) {\r\n                        pickHandlers.removeAndDispose();\r\n                        pickHandlers.removeAndDispose=null;\r\n                    }\r\n                })\r\n                \r\n                let unbindChoiceElement = adoptChoiceElement(wrap);\r\n                wrap.choice.dispose = composeSync(unbindChoiceElement, wrap.choice.dispose);\r\n            }\r\n\r\n            disposeAspect.dispose = composeSync(disposeAspect.dispose, resetMouseCandidateChoice, () => picksElementAspect.unbind() );\r\n        }\r\n    }\r\n}\r\n","export function ResetLayoutAspect(resetLayout){\r\n    return {\r\n        resetLayout\r\n    }\r\n}","\r\nexport function LoadAspect(optionsLoopAspect){\r\n    return{\r\n        load(){  // redriven in AppearancePlugin, FormRestoreOnBackwardPlugin\r\n            optionsLoopAspect.loop();\r\n        }\r\n    }\r\n}","export function CountableChoicesListInsertAspect(countableChoicesList, wrapsCollection){\r\n    return {\r\n        countableChoicesListInsert(wrap, key){\r\n            let choiceNext = wrapsCollection.getNext(key);\r\n            countableChoicesList.add(wrap, choiceNext)\r\n        }\r\n    }\r\n}","import {EventBinder, containsAndSelf} from './ToolsDom';\r\n\r\nexport function PicksElementAspect(picksElement){\r\n    var componentDisabledEventBinder = EventBinder();\r\n    var skipoutAndResetMousedownEventBinder = EventBinder();\r\n    return {\r\n        containsAndSelf(element){\r\n            return containsAndSelf(picksElement, element);\r\n        },\r\n        onClickUnbind(){\r\n            componentDisabledEventBinder.unbind();\r\n        },\r\n        onClick(handler){\r\n            componentDisabledEventBinder.bind(picksElement, \"click\",  handler);\r\n        },\r\n        onMousedown(handler){\r\n            skipoutAndResetMousedownEventBinder.bind(picksElement, \"mousedown\",  handler);\r\n        },\r\n        unbind(){\r\n            skipoutAndResetMousedownEventBinder.unbind();\r\n            componentDisabledEventBinder.unbind();\r\n        }\r\n    }\r\n}","export function AfterInputAspect(filterManagerAspect, navigateAspect, choicesVisibilityAspect, hoveredChoiceAspect){\r\n    return {\r\n        visible(showChoices, visibleCount){\r\n            let panelIsVisble = choicesVisibilityAspect.isChoicesVisible();\r\n            if (!panelIsVisble) {\r\n                  showChoices(); \r\n            }\r\n            if (visibleCount == 1) {\r\n                navigateAspect.hoverIn(filterManagerAspect.getNavigateManager().getHead())\r\n            } else {\r\n                if (panelIsVisble)\r\n                    hoveredChoiceAspect.resetHoveredChoice();\r\n            }   \r\n        },\r\n        notVisible(hideChoices){\r\n            if (choicesVisibilityAspect.isChoicesVisible()){\r\n                hideChoices();\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync, List} from './ToolsJs';\r\nimport {PickDomFactory} from './PickDomFactory';\r\nimport {ChoiceDomFactory} from './ChoiceDomFactory';\r\n\r\nimport {StaticDomFactory} from './StaticDomFactory';\r\n\r\nimport {CreateElementAspect} from './CreateElementAspect';\r\n\r\nimport {PicksDomFactory} from './PicksDomFactory';\r\nimport {FilterDomFactory} from './FilterDomFactory';\r\n\r\nimport {ChoicesDomFactory} from './ChoicesDomFactory';\r\nimport {ChoicesVisibilityAspect} from './ChoicesVisibilityAspect';\r\nimport {SpecialPicksEventsAspect} from './SpecialPicksEventsAspect';\r\n \r\nimport {ComponentPropertiesAspect, TriggerAspect, OnChangeAspect} from './ComponentPropertiesAspect';\r\nimport {OptionsAspect, OptionPropertiesAspect} from './OptionsAspect';\r\n\r\nimport {ChoicesEnumerableAspect } from './ChoicesEnumerableAspect'\r\nimport {FilterManagerAspect, NavigateManager, FilterPredicateAspect} from './FilterManagerAspect'\r\nimport {BuildAndAttachChoiceAspect, BuildChoiceAspect} from './BuildChoiceAspect'\r\nimport {OptionsLoopAspect, OptionAttachAspect} from './OptionsLoopAspect'\r\n\r\nimport {UpdateDataAspect } from './UpdateDataAspect'\r\nimport {UpdateAspect } from './UpdateDataAspect'\r\nimport {CreateWrapAspect, CreateChoiceBaseAspect, OptionToggleAspect, CreatePickHandlersAspect, RemovePickAspect, \r\n    AddPickAspect, FullMatchAspect, ChoiceClickAspect, IsChoiceSelectableAspect, ProducePickAspect} from './CreateWrapAspect.js'\r\nimport {NavigateAspect, HoveredChoiceAspect} from './NavigateAspect'\r\nimport {Wraps} from './Wraps'\r\n\r\n\r\nimport {PickButtonAspect} from './PickButtonAspect'\r\n\r\nimport {BuildPickAspect} from './BuildPickAspect'\r\nimport {InputAspect} from './InputAspect'\r\nimport {ResetFilterAspect, FocusInAspect, ResetFilterListAspect} from './ResetFilterListAspect'\r\n\r\nimport {MultiSelectInlineLayoutAspect} from './MultiSelectInlineLayoutAspect'\r\n\r\nimport {ResetLayoutAspect} from './ResetLayoutAspect'\r\n\r\nimport {LoadAspect} from './LoadAspect'\r\nimport {DoublyLinkedList, ArrayFacade} from './ToolsJs'\r\nimport {CountableChoicesListInsertAspect} from './CountableChoicesListInsertAspect'\r\n\r\nimport {PicksElementAspect} from './PicksElementAspect'\r\nimport {AfterInputAspect} from './AfterInputAspect'\r\n\r\n\r\n/// environment - common for many; configuration for concreate\r\nexport function BsMultiSelect(element, environment, pluginManager, configuration, onInit){\r\n    var {window} = environment;\r\n    environment.isIE11 = !!window.MSInputMethodContext && !!document.documentMode;\r\n\r\n    let { containerClass,\r\n          css, \r\n          getDisabled,\r\n          options, \r\n          getText\r\n        } = configuration;\r\n    \r\n    let disposeAspect = {dispose(){}};\r\n    let triggerAspect = TriggerAspect(element, environment.trigger);\r\n    let onChangeAspect = OnChangeAspect(triggerAspect, 'dashboardcode.multiselect:change');\r\n    let componentPropertiesAspect = ComponentPropertiesAspect(getDisabled??(() => false));\r\n    let optionsAspect = OptionsAspect(options); \r\n    let optionPropertiesAspect = OptionPropertiesAspect(getText);\r\n    let isChoiceSelectableAspect = IsChoiceSelectableAspect();\r\n    let createWrapAspect       = CreateWrapAspect();\r\n    let createChoiceBaseAspect = CreateChoiceBaseAspect(optionPropertiesAspect);\r\n    \r\n    let addPickAspect = AddPickAspect();\r\n    let removePickAspect = RemovePickAspect();\r\n    \r\n    let createElementAspect = CreateElementAspect(name => window.document.createElement(name), (element, html) => element.innerHTML = html );\r\n    \r\n    let wrapsCollection = ArrayFacade();\r\n    \r\n    let countableChoicesList = DoublyLinkedList(\r\n        (wrap)=>wrap.choice.itemPrev, \r\n        (warp, v)=>warp.choice.itemPrev=v, \r\n        (wrap)=>wrap.choice.itemNext, \r\n        (wrap, v)=>wrap.choice.itemNext=v\r\n    );\r\n    \r\n    let countableChoicesListInsertAspect = CountableChoicesListInsertAspect(countableChoicesList, wrapsCollection);\r\n\r\n    let choicesEnumerableAspect = ChoicesEnumerableAspect(countableChoicesList, wrap=>wrap.choice.itemNext)\r\n    \r\n    let filteredChoicesList = DoublyLinkedList(\r\n        (wrap)=>wrap.choice.filteredPrev, \r\n        (wrap, v)=>wrap.choice.filteredPrev=v, \r\n        (wrap)=>wrap.choice.filteredNext, \r\n        (wrap, v)=>wrap.choice.filteredNext=v\r\n    );\r\n    \r\n    let emptyNavigateManager = NavigateManager(\r\n        countableChoicesList,\r\n        (wrap)=>wrap.choice.itemPrev,\r\n        (wrap)=>wrap.choice.itemNext \r\n        \r\n    ); \r\n    let filteredNavigateManager = NavigateManager(\r\n        filteredChoicesList, \r\n        (wrap)=>wrap.choice.filteredPrev,\r\n        (wrap)=>wrap.choice.filteredNext ); \r\n\r\n    let filterPredicateAspect = FilterPredicateAspect()\r\n\r\n    let filterManagerAspect = FilterManagerAspect(\r\n        emptyNavigateManager,\r\n        filteredNavigateManager,\r\n        \r\n        filteredChoicesList, \r\n        choicesEnumerableAspect,\r\n        filterPredicateAspect\r\n    );\r\n\r\n    let hoveredChoiceAspect = HoveredChoiceAspect()\r\n    let navigateAspect = NavigateAspect(hoveredChoiceAspect, \r\n        (down, hoveredChoice)=>filterManagerAspect.getNavigateManager().navigate(down, hoveredChoice));\r\n    let picksList = List();\r\n    let wraps = Wraps(\r\n        wrapsCollection,\r\n        ()=>countableChoicesList.reset(), \r\n        (w)=>countableChoicesList.remove(w),\r\n        (w, key)=>countableChoicesListInsertAspect.countableChoicesListInsert(w, key));\r\n\r\n    let picksDomFactory   = PicksDomFactory  (css, createElementAspect);\r\n    let filterDomFactory  = FilterDomFactory (css, createElementAspect);\r\n    let choicesDomFactory = ChoicesDomFactory(css, createElementAspect);\r\n\r\n    let pickButtonAspect  = PickButtonAspect(configuration.pickButtonHTML);\r\n    let pickDomFactory    = PickDomFactory   (css, createElementAspect, optionPropertiesAspect, pickButtonAspect);\r\n    let choiceDomFactory  = ChoiceDomFactory (css, createElementAspect, optionPropertiesAspect);\r\n    \r\n    pluginManager.plugStaticDomFactories(\r\n        {\r\n            environment, configuration, disposeAspect, \r\n            \r\n            triggerAspect, onChangeAspect, componentPropertiesAspect, \r\n            countableChoicesList, countableChoicesListInsertAspect, optionPropertiesAspect, createElementAspect,\r\n            wrapsCollection, choicesEnumerableAspect, filteredChoicesList, \r\n            filterPredicateAspect, isChoiceSelectableAspect,  \r\n    \r\n            hoveredChoiceAspect, navigateAspect, \r\n    \r\n            choicesDomFactory, filterDomFactory, picksDomFactory, \r\n            pickDomFactory, choiceDomFactory, \r\n    \r\n            filterManagerAspect,\r\n    \r\n            optionsAspect, createWrapAspect, createChoiceBaseAspect, \r\n            picksList, wraps, addPickAspect, removePickAspect\r\n        }\r\n    );\r\n\r\n\r\n    let staticDomFactory  = StaticDomFactory(createElementAspect);\r\n\r\n    pluginManager.plugStaticDom(\r\n        {staticDomFactory}\r\n    ); // apply cssPatch to css, apply selectElement support;  \r\n\r\n    let {createStaticDom} = staticDomFactory.create(choicesDomFactory, filterDomFactory, picksDomFactory); // overrided in SelectElementPlugin\r\n\r\n    let {staticDom, filterDom, picksDom, staticManager, choicesDom} = createStaticDom(element, containerClass);\r\n\r\n    // after this we can use staticDom (means generated DOM elements) in plugin construtctor, what simplifies parameters passing a lot   \r\n\r\n\r\n    let specialPicksEventsAspect = SpecialPicksEventsAspect();\r\n\r\n    let choicesVisibilityAspect = ChoicesVisibilityAspect(choicesDom.choicesElement);\r\n    let resetFilterListAspect = ResetFilterListAspect(filterDom, filterManagerAspect);\r\n    let resetFilterAspect =  ResetFilterAspect(filterDom, resetFilterListAspect);\r\n\r\n    let focusInAspect = FocusInAspect(picksDom);\r\n    \r\n    let buildPickAspect = BuildPickAspect(picksDom, pickDomFactory);\r\n    \r\n    let producePickAspect = ProducePickAspect(picksList, removePickAspect, buildPickAspect);\r\n    let createPickHandlersAspect = CreatePickHandlersAspect(producePickAspect);\r\n    \r\n    let optionToggleAspect  = OptionToggleAspect(createPickHandlersAspect, addPickAspect);\r\n    let fullMatchAspect = FullMatchAspect(createPickHandlersAspect, addPickAspect);\r\n    let inputAspect = InputAspect(filterDom, filterManagerAspect, fullMatchAspect);    \r\n    let choiceClickAspect = ChoiceClickAspect(optionToggleAspect, filterDom);\r\n    \r\n    let buildChoiceAspect = BuildChoiceAspect(choicesDom, choiceDomFactory, choiceClickAspect);\r\n    \r\n    let buildAndAttachChoiceAspect =  BuildAndAttachChoiceAspect(buildChoiceAspect);\r\n    let resetLayoutAspect = ResetLayoutAspect(() => resetFilterAspect.resetFilter());\r\n\r\n    let optionAttachAspect = OptionAttachAspect(createWrapAspect, createChoiceBaseAspect, buildAndAttachChoiceAspect, wraps);\r\n    let optionsLoopAspect = OptionsLoopAspect(optionsAspect, optionAttachAspect);\r\n    let updateDataAspect = UpdateDataAspect(choicesDom, wraps, picksList, optionsLoopAspect, resetLayoutAspect);\r\n    let updateAspect = UpdateAspect(updateDataAspect);\r\n\r\n    let loadAspect = LoadAspect(optionsLoopAspect);\r\n\r\n    let picksElementAspect = PicksElementAspect(picksDom.picksElement);\r\n    let afterInputAspect = AfterInputAspect(filterManagerAspect, navigateAspect, choicesVisibilityAspect, hoveredChoiceAspect);\r\n\r\n    let multiSelectInlineLayoutAspect =  MultiSelectInlineLayoutAspect(\r\n        environment, filterDom, choicesDom, \r\n        choicesVisibilityAspect, \r\n        hoveredChoiceAspect, navigateAspect, filterManagerAspect,\r\n        focusInAspect, optionToggleAspect,\r\n        createPickHandlersAspect,\r\n        picksList,\r\n        inputAspect, specialPicksEventsAspect,  buildChoiceAspect, \r\n        resetLayoutAspect, \r\n        picksElementAspect,\r\n        afterInputAspect,\r\n        disposeAspect\r\n    );\r\n    \r\n    pluginManager.layout(\r\n        {\r\n            staticDom, picksDom, choicesDom, filterDom, resetLayoutAspect, \r\n            choicesVisibilityAspect, staticManager, buildChoiceAspect, optionToggleAspect,  choiceClickAspect, \r\n            buildAndAttachChoiceAspect, optionsLoopAspect, optionAttachAspect,\r\n            buildPickAspect, producePickAspect, createPickHandlersAspect, inputAspect, resetFilterListAspect, resetFilterAspect, \r\n            specialPicksEventsAspect,\r\n            resetLayoutAspect, focusInAspect, \r\n            loadAspect, updateDataAspect, updateAspect, \r\n            fullMatchAspect,\r\n            picksElementAspect, afterInputAspect,\r\n            multiSelectInlineLayoutAspect }\r\n    );\r\n    multiSelectInlineLayoutAspect.init();\r\n    pluginManager.attach();\r\n\r\n    let api = {component: \"BsMultiSelect.api\"} // key to use in memory leak analyzes\r\n    pluginManager.buildApi(api);\r\n\r\n    // after this we can pass aspects methods call without wrapping - there should be no more overridings. TODO freeze aspects?\r\n    api.dispose = composeSync(\r\n        resetLayoutAspect.resetLayout,\r\n        ()=>{disposeAspect.dispose()},\r\n        pluginManager.dispose, \r\n        ()=>{picksList.forEach(pick=>pick.dispose());},\r\n        wraps.dispose,\r\n        staticManager.dispose,  picksDom.dispose, filterDom.dispose );\r\n    \r\n    api.updateData = () => { \r\n        updateDataAspect.updateData();\r\n    };\r\n    api.update = () => {\r\n        updateAspect.update()\r\n    }\r\n \r\n    \r\n    // TODO api.updateOption = (key) => {/* all updates: selected, disabled, hidden, text */}\r\n\r\n    onInit?.(api, pluginManager.aspects);\r\n    picksDom.pickFilterElement.appendChild(filterDom.filterInputElement);\r\n    picksDom.picksElement.appendChild(picksDom.pickFilterElement); \r\n    staticManager.appendToContainer();\r\n    loadAspect.load();\r\n    return api;\r\n}\r\n","import {extendIfUndefined} from './ToolsJs';\r\n\r\nexport function ComposePluginManagerFactory(plugins, defaults){\r\n    let buildAspectsList = [];\r\n\r\n    for(let i = 0; i<plugins.length; i++){\r\n        let buildAspects =  plugins[i].value(defaults);\r\n        if (buildAspects){\r\n            buildAspectsList.push({key:plugins[i].key, value:buildAspects});\r\n        }\r\n    }\r\n    \r\n    return (configuration, settings)=>{\r\n        let eventHandlers = [];\r\n        let aspects = {};\r\n        for(let i = 0; i<buildAspectsList.length; i++){\r\n            let events = buildAspectsList[i].value.buildAspects(aspects, configuration, settings)\r\n            if (events){\r\n                eventHandlers.push({key:buildAspectsList[i].key, value:events});\r\n            }\r\n        }\r\n        return PluginManager(aspects, eventHandlers);\r\n    };\r\n}\r\n\r\nexport function PluginManager(aspects, eventHandlers){\r\n    let instances = [];\r\n    let disposes = [];\r\n    \r\n    return {\r\n        aspects, // TODO: hide\r\n        buildApi(api){\r\n            for(let i = 0; i<instances.length; i++){\r\n                let dispose = instances[i].buildApi?.(api)\r\n                if (dispose)\r\n                    disposes.push(dispose);\r\n            }\r\n        },\r\n        dispose(){\r\n            for(let i = 0; i<disposes.length; i++){\r\n                disposes[i]()\r\n            }\r\n            disposes=null;\r\n            for(let i = 0; i<instances.length; i++){\r\n                instances[i].dispose?.()\r\n            }\r\n            instances=null;\r\n        },\r\n        plugStaticDomFactories(newAspects){\r\n            extendIfUndefined(aspects, newAspects)\r\n            for(let i = 0; i<eventHandlers.length; i++){\r\n                eventHandlers[i].value.plugStaticDomFactories?.(aspects);\r\n            }\r\n        },\r\n        plugStaticDom(newAspects){\r\n            extendIfUndefined(aspects, newAspects)\r\n            for(let i = 0; i<eventHandlers.length; i++){\r\n                eventHandlers[i].value.plugStaticDom?.(aspects);\r\n            }\r\n        },\r\n        layout(newAspects){\r\n            extendIfUndefined(aspects, newAspects)\r\n            if (eventHandlers){\r\n                // TODO: complete to full bus event system\r\n                for(let i = 0; i<eventHandlers.length; i++){\r\n                    let a = eventHandlers[i].value;\r\n                    if (a.plugStaticDomBus){\r\n                        if (eventHandlers.some(c => c.key===a.plugStaticDomBus.after))\r\n                            a.plugStaticDomBus.plugStaticDom?.(aspects);\r\n                    }\r\n                }\r\n        \r\n                for(let i = 0; i<eventHandlers.length; i++){\r\n                    let instance = eventHandlers[i].value.layout?.(aspects)\r\n                    if (instance)\r\n                        instances.push(instance);\r\n                    \r\n                }\r\n            \r\n            }\r\n        },\r\n        attach(){\r\n            if (eventHandlers)\r\n                for(let i = 0; i<eventHandlers.length; i++){\r\n                    eventHandlers[i].value.attach?.(aspects)\r\n                }\r\n        }\r\n    }\r\n}","const transformStyles = [\r\n    {old:'selectedPanelDisabledBackgroundColor', opt:'picks_disabled', style:\"backgroundColor\"},\r\n    {old:'selectedPanelFocusValidBoxShadow', opt:'picks_focus_valid', style:\"boxShadow\"},\r\n    {old:'selectedPanelFocusInvalidBoxShadow', opt:'picks_focus_invalid', style:\"boxShadow\"},\r\n    {old:'selectedPanelDefMinHeight', opt:'picks_def', style:\"minHeight\"},\r\n    {old:'selectedPanelLgMinHeight', opt:'picks_lg', style:\"minHeight\"},\r\n    {old:'selectedPanelSmMinHeight', opt:'picks_sm', style:\"minHeight\"},\r\n    {old:'selectedItemContentDisabledOpacity', opt:'choiceLabel_disabled', style:\"opacity\"}\r\n]\r\n\r\nconst transformClasses = [\r\n    {old:'dropDownMenuClass', opt:'choices'},\r\n    {old:'dropDownItemClass', opt:'choice'},\r\n    {old:'dropDownItemHoverClass', opt:'choice_hover'},\r\n    {old:'selectedPanelClass', opt:'picks'},\r\n    {old:'selectedItemClass', opt:'pick'},\r\n    {old:'removeSelectedItemButtonClass', opt:'pickButton'},\r\n    {old:'filterInputItemClass', opt:'pickFilter'},\r\n    {old:'filterInputClass', opt:'filterInput'},\r\n    {old:'selectedPanelFocusClass', opt:'picks_focus'},\r\n    {old:'selectedPanelDisabledClass', opt:'picks_disabled'},\r\n    {old:'selectedItemContentDisabledClass', opt:'pick_disabled'}\r\n]\r\n\r\nexport function adjustLegacySettings(settings){\r\n    if (!settings.css)\r\n        settings.css={}\r\n    var css =settings.css;\r\n\r\n    if (!settings.cssPatch)\r\n        settings.cssPatch={}\r\n    var cssPatch =settings.cssPatch;\r\n\r\n    if (settings.selectedPanelFocusBorderColor || settings.selectedPanelFocusBoxShadow){\r\n        console.log(\"DashboarCode.BsMultiSelect: selectedPanelFocusBorderColor and selectedPanelFocusBoxShadow are depricated, use - cssPatch:{picks_focus:{borderColor:'myValue', boxShadow:'myValue'}}\");\r\n        if(!cssPatch.picks_focus){\r\n            cssPatch.picks_focus = {boxShadow: settings.selectedPanelFocusBoxShadow, borderColor: settings.selectedPanelFocusBorderColor}\r\n        }\r\n        delete settings.selectedPanelFocusBorderColor;\r\n        delete settings.selectedPanelFocusBoxShadow;\r\n    }\r\n\r\n    transformStyles.forEach(\r\n        (i)=>{\r\n            if (settings[i.old]){\r\n                console.log(`DashboarCode.BsMultiSelect: ${i.old} is depricated, use - cssPatch:{${i.opt}:{${i.style}:'myValue'}}`);\r\n                if(!settings[i.opt]){\r\n                    let opt = {}\r\n                    opt[i.style] = settings[i.old]\r\n                    settings.cssPatch[i.opt]=opt;\r\n                }\r\n                delete settings[i.old];\r\n            }\r\n        }\r\n    )\r\n    \r\n    transformClasses.forEach( (i) => {\r\n        if (settings[i.old]){\r\n            console.log(`DashboarCode.BsMultiSelect: ${i.old} is depricated, use - css:{${i.opt}:'myValue'}`);\r\n            if(!css[i.opt]){\r\n                css[i.opt]= settings[i.old]\r\n            }\r\n            delete settings[i.old];\r\n        }\r\n    })\r\n    \r\n    if (settings.inputColor){\r\n        console.log(\"DashboarCode.BsMultiSelect: inputColor is depricated, remove parameter\");\r\n        delete settings.inputColor;\r\n    }\r\n\r\n    if (settings.useCss){\r\n        console.log(\"DashboarCode.BsMultiSelect: 'useCss: true' is depricated, use - 'useCssPatch: false'\");\r\n        if(!css.pick_disabled){\r\n            settings.useCssPatch = !settings.useCss\r\n        }\r\n        delete settings.useCss;\r\n    }  \r\n\r\n    if (settings.getIsValid || settings.getIsInValid){\r\n        throw \"DashboarCode.BsMultiSelect: parameters getIsValid and getIsInValid are depricated and removed, use - getValidity that should return (true|false|null) \"\r\n    } \r\n}","import {BsMultiSelect} from './BsMultiSelect'\r\nimport {ComposePluginManagerFactory} from './PluginManager'\r\n\r\nimport {adjustLegacySettings} from './BsMultiSelectDepricatedParameters'\r\n\r\nimport {extendIfUndefined} from './ToolsJs'\r\n\r\nimport {createCss} from './ToolsStyling'\r\n\r\n// TODO: remove environment - replace it with plugins\r\nexport function MultiSelectBuilder(environment, plugins, defaultCss) \r\n{\r\n    const defaults = {containerClass: \"dashboardcode-bsmultiselect\", css: defaultCss}\r\n\r\n    var pluginManagerFactory = ComposePluginManagerFactory(plugins, defaults);\r\n\r\n    let create = (element, options) => { \r\n        if (options && options.plugins)\r\n            console.log(\"DashboarCode.BsMultiSelect: 'options.plugins' is depricated, use - MultiSelectBuilder(environment, plugins) instead\");\r\n        \r\n        let buildConfiguration;\r\n        if (options instanceof Function) {\r\n            buildConfiguration = options;\r\n            options = null;\r\n        } else {\r\n            buildConfiguration = options?.buildConfiguration;\r\n        }\r\n        if (options){\r\n            adjustLegacySettings(options);\r\n        }\r\n        let configuration = {};\r\n        \r\n        // TODO: move to each plugin that add css (as plugMergeSettings) \r\n        configuration.css = createCss(defaults.css, options?.css);\r\n        \r\n        var pluginManager = pluginManagerFactory(configuration, options); // merge settings.cssPatch and defaults.cssPatch\r\n\r\n        extendIfUndefined(configuration, options);\r\n        extendIfUndefined(configuration, defaults);\r\n        let onInit = buildConfiguration?.(element, configuration); // TODO: configuration should become an aspect\r\n        let multiSelect = BsMultiSelect(element, environment, pluginManager, configuration, onInit); // onInit(api, aspects) - before load data\r\n        return multiSelect;\r\n    }\r\n    \r\n    return {create, defaultSettings: defaults}\r\n}\r\n","import {multiSelectPlugins, picksPlugins, allPlugins} from './PluginSet'\r\nimport {shallowClearClone, ObjectValuesEx} from './ToolsJs'\r\nimport {utilities} from './ToolSet'\r\nimport {MultiSelectBuilder} from './MultiSelectBuilder'\r\n\r\nexport function ModuleFactory(environment, customizationPlugins, defaultCss){\r\n    if (!environment.trigger)\r\n        environment.trigger = (e, name) => e.dispatchEvent(new environment.window.Event(name))\r\n\r\n    let multiSelectPluginsObj = shallowClearClone(customizationPlugins, multiSelectPlugins);\r\n    let pluginsArray = ObjectValuesEx(multiSelectPluginsObj);\r\n    let {create: BsMultiSelect, BsMultiSelectDefault} = MultiSelectBuilder(environment, pluginsArray, defaultCss) \r\n    BsMultiSelect.Default = BsMultiSelectDefault;\r\n    \r\n    let picksPluginsObj = shallowClearClone(customizationPlugins, picksPlugins);\r\n    let picksPluginsArray = ObjectValuesEx(picksPluginsObj);\r\n    let {create: BsPicks, BsPicksDefault} = MultiSelectBuilder(environment, picksPluginsArray, defaultCss) \r\n    BsPicks.Default = BsPicksDefault; \r\n\r\n    return {\r\n        BsMultiSelect,\r\n        BsPicks,\r\n        MultiSelectTools: {MultiSelectBuilder, plugins: shallowClearClone(customizationPlugins, allPlugins), defaultCss, utilities} \r\n    }\r\n}\r\n\r\n\r\n// TEST\r\n// function areValidElements(...args) {\r\n//     const result = Object.values(obj);\r\n//     return !args.some(\r\n//       (element) =>\r\n//         !(element && typeof element.getBoundingClientRect === 'function')\r\n//     );\r\n// }\r\n\r\n// function ModuleFactory(environment) {\r\n//     if (!environment.trigger)\r\n//         environment.trigger = (e, name) => e.dispatchEvent(new environment.window.Event(name))\r\n\r\n//     let pluginsArray = ObjectValues(shallowClearClone({Bs5Plugin}, multiSelectPlugins));\r\n//     let {create: BsMultiSelect, BsMultiSelectDefault} = MultiSelectBuilder(environment, pluginsArray) \r\n//     BsMultiSelect.Default = BsMultiSelectDefault;\r\n    \r\n//     let picksPluginsArray = ObjectValues(shallowClearClone({Bs5Plugin}, picksPlugins));\r\n//     let {create: BsPicks, BsPicksDefault} = MultiSelectBuilder(environment, picksPluginsArray) \r\n//     BsPicks.Default = BsPicksDefault;\r\n\r\n//     return {\r\n//         BsMultiSelect,\r\n//         BsPicks,\r\n//         MultiSelectTools: {MultiSelectBuilder, plugins: shallowClearClone({Bs5Plugin}, allPlugins), utilities} \r\n//     }\r\n// }\r\n","import {createDefaultCssBs5} from \"./DomFactories\";\r\nimport {Bs4PluginSet} from './PluginSet'\r\nimport {ModuleFactory as ModuleFactoryImpl} from \"./ModuleFactory\";\r\n\r\nconst defaultCss = createDefaultCssBs5();\r\n\r\nfunction ModuleFactory(environment){\r\n    return ModuleFactoryImpl(\r\n        environment,\r\n        Bs4PluginSet,\r\n        defaultCss\r\n    );\r\n} \r\n\r\nfunction legacyConstructor(element, environment, settings){\r\n    console.log(\"DashboarCode.BsMultiSelect: 'BsMultiSelect' is depricated, use - ModuleFactory(environment).BsMultiSelect(element, settings)\");\r\n    var {BsMultiSelect} =  ModuleFactory(environment);\r\n    var bsMultiSelect = BsMultiSelect(element, settings);\r\n    return bsMultiSelect;\r\n}\r\n\r\nexport  { \r\n    legacyConstructor as BsMultiSelect,\r\n    ModuleFactory\r\n}"]}