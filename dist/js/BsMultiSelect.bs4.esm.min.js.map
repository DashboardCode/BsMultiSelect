{"version":3,"sources":["../../src/ToolsJs.js","../../src/ToolsStyling.js","../../src/PickDomFactory.js","../../src/PicksDomFactory.js","../../src/ToolsDom.js","../../src/ChoiceDomFactory.js","../../src/ChoicesDomFactory.js","../../src/FilterDomFactory.js","../../src/DomFactories.js","../../src/plugins/BsAppearancePlugin.js","../../src/plugins/BsAppearanceBs4Plugin.js","../../src/plugins/BsAppearanceBs4CssPatchPlugin.js","../../src/plugins/LabelForAttributePlugin.js","../../src/plugins/RtlPlugin.js","../../src/plugins/FormResetPlugin.js","../../src/plugins/ValidationApiPlugin.js","../../src/plugins/HiddenOptionPlugin.js","../../src/plugins/CssPatchPlugin.js","../../src/plugins/CssPatchBs4Plugin.js","../../src/plugins/JQueryMethodsPlugin.js","../../src/plugins/OptionsApiPlugin.js","../../src/plugins/FormRestoreOnBackwardPlugin.js","../../src/plugins/SelectElementPlugin.js","../../src/plugins/SelectedOptionPlugin.js","../../src/plugins/DisabledOptionPlugin.js","../../src/plugins/PicksApiPlugin.js","../../src/plugins/PicksPlugin.js","../../src/plugins/CreatePopperPlugin.js","../../src/plugins/ChoicesDynamicStylingPlugin.js","../../src/plugins/HighlightPlugin.js","../../src/plugins/CustomChoiceStylingsPlugin.js","../../src/plugins/CustomPickStylingsPlugin.js","../../src/plugins/UpdateAppearancePlugin.js","../../src/plugins/DisableComponentPlugin.js","../../src/plugins/PlaceholderPlugin.js","../../src/plugins/PlaceholderCssPatchPlugin.js","../../src/plugins/FloatingLabelPlugin.js","../../src/plugins/WarningCssPatchPlugin.js","../../src/plugins/WarningPlugin.js","../../src/plugins/WarningBs4Plugin.js","../../src/plugins/PickButtonPlugin.js","../../src/PluginSet.js","../../src/ToolSet.js","../../src/StaticDomFactory.js","../../src/CreateElementAspect.js","../../src/ChoicesVisibilityAspect.js","../../src/SpecialPicksEventsAspect.js","../../src/OnChangeAspect.js","../../src/OptionsAspect.js","../../src/ChoicesEnumerableAspect.js","../../src/FilterManagerAspect.js","../../src/BuildChoiceAspect.js","../../src/OptionsLoopAspect.js","../../src/UpdateDataAspect.js","../../src/CreateWrapAspect.js","../../src/CreatePickHandlersAspect.js","../../src/ProducePickAspect.js","../../src/NavigateAspect.js","../../src/Wraps.js","../../src/InputAspect.js","../../src/ResetFilterListAspect.js","../../src/MultiSelectInlineLayoutAspect.js","../../src/ResetLayoutAspect.js","../../src/LoadAspect.js","../../src/CountableChoicesListInsertAspect.js","../../src/PicksElementAspect.js","../../src/AfterInputAspect.js","../../src/ShowErrorAspect.js","../../src/BsMultiSelect.js","../../src/PluginManager.js","../../src/BsMultiSelectDepricatedParameters.js","../../src/MultiSelectBuilder.js","../../src/ModuleFactory.js","../../src/BsMultiSelect.esm.js"],"names":["isBoolean","value","isString","String","extendIfUndefined","destination","source","property","undefined","shallowClearClone","sources","v","forEach","s","hasOwnProperty","forEachRecursion","f","e","prev","indexRecursion","index","List","tail","count","add","next","node","remove","getTail","getCount","isEmpty","reset","DoublyLinkedList","getPrev","setPrev","getNext","setNext","head","getHead","ArrayFacade","list","push","key","splice","get","predicate","length","start","i","c","forLoop","composeSync","functions","defCall","Function","tmp","ObservableValue","getValue","setValue","newValue","attach","detachAll","ObservableLambda","func","call","ObjectValuesEx","object","arr","addStyling","element","styling","backupStyling","classes","styles","classList","slice","style","removeStyling","toggleStyling","isOn","isF","force","extendClasses","out","param","actionStr","actionArr","isRemoveEmptyClasses","split","Array","extend","actionObj","Object","Styling","a","o","freeze","createStyling","isReplace","params","extendInt","p","concat","createCss","stylings1","stylings2","param1","param2","extendCss","PickDomFactoryPlugCss","css","pickContent","PickDomFactory","createElementAspect","optionPropertiesAspect","create","pick","pickContentElement","createElement","pickDom","pickDomManagerHandlers","pickElement","appendChild","updateData","textContent","getText","wrap","option","dispose","PicksDomFactory","picksElement","isDisposablePicksElementFlag","pickFilterElement","picks","pickFilter","disableToggleStyling","picks_disabled","focusToggleStyling","picks_focus","isFocusIn","createPickElement","beforeElement","insertBefore","detach","removeChild","disable","isComponentDisabled","toggleFocusStyling","getIsFocusIn","setIsFocusIn","newIsFocusIn","parentNode","PicksDomFactoryPlugCss","PicksDomFactoryPlugCssPatch","cssPatch","listStyleType","display","flexWrap","height","marginBottom","cursor","backgroundColor","borderColor","boxShadow","paddingLeft","paddingRight","paddingInlineStart","paddingInlineEnd","PicksDomFactoryPlugCssPatchBs4","paddingTop","paddingBottom","findDirectChildByTagName","tagName","children","closestByTagName","closest","closestByClassName","className","contains","closestByAttribute","attributeName","attribute","getAttribute","containsAndSelf","otherNode","getDataGuardedWithPrefix","prefix","name","tmp1","tmp2","Element","siblingsAsArray","l","getIsRtl","isRtl","EventBinder","bind","eventName","handler","addEventListener","unbind","removeEventListener","EventTumbler","on","off","AttributeBackup","set","currentAtribute","setAttribute","restore","removeAttribute","EventLoopProlongableFlag","window","flag","pr","timeout","clearTimeout","setTimeout","ResetableFlag","ChoiceDomFactory","updateDataInternal","choiceElement","choiceDom","choiceDomManagerHandlers","choiceHoverToggle","isOptionDisabled","choice_disabled_hover","isOptionSelected","choice_hover","createElementFromHtml","choiceContentElement","querySelector","choiceCheckBoxElement","choiceLabelElement","choiceContent","choiceCheckBox","choiceLabel","choiceSelectedToggle","choice_selected","updateSelected","checked","choice","isHoverIn","choiceDisabledToggle","choice_disabled","choiceCheckBoxDisabledToggle","choiceCheckBox_disabled","choiceLabelDisabledToggle","choiceLabel_disabled","choiceCursorDisabledToggle","updateHoverIn","updateDisabled","isCheckBoxDisabled","disabled","innerHTML","eventBinder","event","composeToggle","ChoiceDomFactoryPlugCss","color","ChoiceDomFactoryPlugCssPatch","justifyContent","ChoicesDomFactory","choicesElement","choicesListElement","choicesList","createChoiceElement","setVisible","isVisible","ChoicesDomFactoryPlugCss","choices","ChoicesDomFactoryPlugCssPatch","FilterDomFactory","filterInputElement","filterInput","setEmpty","setFocus","setWidth","text","target","focus","onInput","onFilterInputInput","onFocusIn","onFocusOut","onKeyDown","onfilterInputKeyDown","onKeyUp","onFilterInputKeyUp","FilterDomFactoryPlugCss","border","FilterDomFactoryPlugCssPatch","padding","margin","outline","createDefaultCssBs4","createDefaultCssBs5","defaultCss","ChoiceDomFactoryPlugCssBs5","BsAppearancePlugin","plug","plug$p","configuration","getSizeComponentAspect","getValidityComponentAspect","aspects","preLayout","getLabelAspect","staticDom","selectElement","getDefaultLabel","origLabelAspectGetLabel","getLabel","layout","validationApiAspect","initialDom","picksDom","floatingLabelAspect","updateAppearanceAspect","getValidity","getSize","useCssPatch","composeGetSize","initialElement","isFloatingLabel","updateSize","picks_lg","picks_sm","picks_def","picks_floating_def","updateSizeJsForAdapter","origToggleFocusStyling","validationObservable","validity","picks_focus_invalid","picks_focus_valid","wasUpdatedObservable","getWasValidated","getManualValidationObservable","invalidMessages","validMessages","containerElement","getMessagesElements","updateAppearance","api","updateValidity","updateSizeClasses","size","updateSizeJsPicks","picksLgStyling","picksSmStyling","picksDefStyling","updateSizeJs","updateSizeForAdapter","composeGetValidity","BsAppearanceBs4Plugin","defaults","inputGroupElement","formGroup","id","BsAppearanceBs4CssPatchPlugin","minHeight","LabelForAttributePlugin","plug$o","label","createFilterInputElementId","filterInputElementId","createFilterInputElementIdAspect","filterDom","loadAspect","disposeAspect","labelElement","inputId","containerClass","RtlPlugin","plug$n","popperRtlAspect","forceRtlOnContainer","attributeBackup","dirAttributeValue","FormResetPlugin","plug$m","updateDataAspect","environment","eventBuilder","form","defValueMissingMessage","preset$4","ValidationApiPlugin","preset","plug$l","getValueRequired","valueMissingMessage","required","getIsValueMissing","getValueRequiredAspect","GetValueRequiredAspect","optionsAspect","plugStaticDom","valueMissingMessageEx","getOptions","optionsArray","validationApiObservable","isValueMissingObservable","ValidationApiAspect","onChangeAspect","onChange","triggerAspect","buildApi","isValid","trigger","getValueRequiredCfg","ValidityApi","visibleElement","onValid","validationMessage","customValidationMessage","willValidate","valueMissing","customError","valid","setCustomValidity","setMessage","checkValidity","message","reportValidity","HiddenOptionPlugin","plug$k","createWrapAspect","isChoiceSelectableAspect","wrapsCollection","countableChoicesListInsertAspect","buildChoiceAspect","countableChoicesList","buildAndAttachChoiceAspect","countableChoicesListInsert","isOptionHidden","choiceNext","origBuildAndAttachChoice","buildAndAttachChoice","getNextElement","buildHiddenChoice","origIsSelectable","isSelectable","options","getIsOptionHidden","hidden","origCreateWrap","createWrap","getNextNonHidden","updateOptionsHidden","updateChoiceHidden","isChoiceElementAttached","choiceElementAttach","newIsOptionHidden","nextChoice","CssPatchPlugin","settings","merge","Error","plug$j","CssPatchBs4Plugin","JQueryMethodsPlugin","plug$i","choicesDom","picksList","getContainer","getChoices","getChoicesList","getFilterInput","getPicks","OptionsApiPlugin","plug$h","wraps","createChoiceBaseAspect","updateOptionAdded","createChoiceBase","_nextChoice","updateOptionRemoved","resetLayoutAspect","resetLayout","FormRestoreOnBackwardPlugin","plug$g","updateOptionsSelectedAspect","load","updateOptionsSelected","SelectElementPlugin","plug$f","dom","staticDomFactory","choicesDomFactory","filterDomFactory","showErrorAspect","picksDomFactory","optGroupAspect","disabledComponentAspect","createStaticDom","origCreateStaticDom","isDisposableContainerElementFlag","showError","errorElement","error","toString","nextSibling","backupDisplay","backupedRequired","getDisabled","fieldsetElement","origGetDisabled","getOptionOptGroup","optGroup","getOptGroupText","origCreateFilterInputElementId","staticManager","appendToContainer","loop","origLoadAspectLoop","document","readyState","domContentLoadedHandler","SelectedOptionPlugin","plug$e","IsChoiceSelectableAspect","setSelected","setIsOptionSelected","getSelected","getIsOptionSelected","selected","getSelectedAspect","setSelectedAspect","producePickAspect","createPickHandlersAspect","addPickAspect","fullMatchAspect","filterPredicateAspect","origFilterPredicate","filterPredicate","buildChoice","composeUpdateSelected","trySetWrapSelected","booleanValue","success","confirmed","origBuildChoice","optionToggleAspect","toggle","fullMatch","ExtendProducePickAspect$1","ExtendProducePickAspect","origAddPick","pickHandlers","addPick","selectAll","deselectAll","setSelectedFalse","setOptionSelected","ExtendCreatePickHandlersAspectCreatePickHandlers","createPickHandlers","producePick","removeAndDispose","UpdateOptionsSelectedAspect","updateChoiceSelected","newIsSelected","DisabledOptionCssPatchPlugin","opacity","DisabledOptionPlugin","pickContent_disabled","plug$d","pickDomFactory","getIsOptionDisabled","origToggle","ExtendProducePickAspectProducePick","ExtendPickDomFactoryCreate","updateOptionsDisabled","updateChoiceDisabled","val","choiceUpdateDisabledBackup","orig","newIsDisabled","PicksApiPlugin","plug$c","_picksList$getTail","countPeaks","isEmptyPeaks","PicksPlugin","plug$b","origAdd","origReset","CreatePopperPlugin","plug$a","PopperRtlAspect","createPopper","Popper","globalPopper","createPopperVX","createPopperConstructor","anchorElement","popperConfiguration","createModifiersVX","CreateModifiersV1","CreateModifiersV2","createPopperConfigurationAspect","CreatePopperConfigurationAspect","createPopperAspect","append","choicesVisibilityAspect","specialPicksEventsAspect","pop","init","preventOverflow","enabled","modifiers","CreatePopperAspect","popper","createConfiguration","update","placement","preset$3","ChoicesDynamicStylingPlugin","plug$9","useChoicesDynamicStyling","choicesDynamicStyling","minimalChoicesDynamicStylingMaxHeight","origSetChoicesVisible","setChoicesVisible","origBackSpace","backSpace","navigateAspect","getElementsByTagName","g","clientHeight","innerHeight","new_y","Math","top","round","setProperty","msHeight","ChoicesDynamicStylingPlugin_scrollHandle","origNavigateAspectNavigate","down","navigate","scrollIntoView","HighlightPlugin","plug$8","ExtendChoiceDomFactory$1","choiceDomFactory","origChoiceDomFactoryCreate","updateHighlighted","highlightAspect","HighlightAspect","filterManagerAspect","origProcessEmptyInput","origSetFilter","setFilter","origSetVisible","getHighlighter","highlighter","filter","RegExp","guarded","replace","regex","CustomChoiceStylingsPlugin","plug$7","customChoiceStylings","ExtendChoiceDomFactory","customChoiceStylingsAspect","customize","CustomChoiceStylingsAspect","handlers","custom","customChoiceStylingsClosure","CustomPickStylingsPlugin","plug$6","ExtendPickDomFactory$2","CustomPickStylingsAspect","customPickStylingsAspect","origCreatePickDomFactory","customPickStylings","customPickStylingsClosure","UpdateAppearancePlugin","plug$5","UpdateAppearanceAspect","updateAspect","DisableComponentPlugin","plug$4","preset$2","DisabledComponentAspect","ExtendPickDomFactory","disableComponent","origOnClick","picksElementAspect","onClick","newIsComponentDisabled","_disabledComponentAsp","updateComponentDisabled","ExtendPickDomFactory$1","disableButton","_disabledComponentAsp2","PlaceholderPlugin","plug$3","resetFilterListAspect","placeholder","isIE11","PlaceholderStopInputAspect","ignoreNextInputResetableFlag","setPlaceholder","setPlaceholderOrig","origOnInput","placeholderStopInputAspect","setEmptyInputWidth","emptyToggleStyling","filterInput_empty","showPlacehodler","updateEmptyInputWidth","origDisable","processEmptyInput","returnValue","width","updatePlacehodlerVisibility","resetableFlag","PlaceholderCssPatchPlugin","FloatingLabelPlugin","plug$2","FloatingLabelAspect","label_floating_lifted","picks_floating_lifted","liftToggleStyling2","liftedLabel","forceResetFilter","updateLiftedLabel","WarningCssPatchPlugin","zIndex","defNoResultsWarningMessage","noResultsWarning","isNoResultsWarningEnabled","afterInputAspect","ExtendAfterInputAspect","WarningAspect","warningAspect","hide","warningElement","pop2","show","origWarningAspectShow","msg","visible","visibleCount","origNotVisible","notVisible","hideChoices","warning","WarningBs4Plugin","preset$1","PickButtonPlugCssPatchBs4","float","verticalAlign","fontSize","PickButtonBs4Plugin","pickButtonHTML","PickButtonPlugin","origProducePickPickAspect","removeOnButton","createElementFromHtmlPutAfter","pickButtonElement","pickButton","Bs4PluginSet","utilities","StaticDomFactory","removableContainerClass","CreateElementAspect","ChoicesVisibilityAspect","isChoicesVisible","updatePopupLocation","SpecialPicksEventsAspect","TriggerAspect","OnChangeAspect","OptionsAspect","OptionPropertiesAspect","ChoicesEnumerableAspect","NavigateManager","FilterPredicateAspect","searchText","indexOf","FilterManagerAspect","emptyNavigateManager","filteredNavigateManager","filteredChoicesList","choicesEnumerableAspect","showEmptyFilter","filterText","getNavigateManager","getFilter","filteredNext","BuildAndAttachChoiceAspect","BuildChoiceAspect","choiceClickAspect","choiceClick","isFilteredIn","OptionAttachAspect","OptionsLoopAspect","optionAttachAspect","UpdateDataAspect","optionsLoopAspect","clear","UpdateAspect","ChoiceClickAspect","OptionToggleAspect","AddPickAspect","FullMatchAspect","CreateChoiceBaseAspect","filteredPrev","toLowerCase","trim","setHoverIn","itemPrev","itemNext","CreateWrapAspect","CreatePickHandlersAspect","removeFromPicksList","ProducePickAspect","HoveredChoiceAspect","getHoveredChoice","hoveredChoice","setHoveredChoice","resetHoveredChoice","NavigateAspect","hoveredChoiceAspect","hoverIn","Wraps","listFacade_reset","listFacade_remove","listFacade_add","insert","InputAspect","processInput","filterInputValue","fullMatchWrap","ResetFilterListAspect","ResetFilterAspect","resetFilter","FocusInAspect","setFocusIn","MultiSelectInlineLayoutAspect","focusInAspect","inputAspect","resetSkipFocusout","skipoutMousedown","documentMouseupEventTumbler","documentMouseup","showChoices","eventLoopFlag","choicesElementMousedownEventTumbler","preventDefaultClickEvent","skipoutAndResetMousedown","composeOnRemoveButtonEventHandler","setPreventDefaultClickEvent","mouseCandidateEventBinder","mouseOverToHoveredAndReset","resetMouseCandidateChoice","keyDownArrow","empty","keyCode","preventDefault","stopPropagation","hoveredWrap","hoveredToSelected","clickToShowChoices","afterInput","origRemoveOnButton","unbindChoiceElement","overAndLeaveEventBinder","onChoiceElementMouseover","onChoiceElementMouseleave","adoptChoiceElement","ResetLayoutAspect","resetFilterAspect","LoadAspect","CountableChoicesListInsertAspect","PicksElementAspect","skipoutAndResetMousedownEventBinder","componentDisabledEventBinder","onClickUnbind","onMousedown","AfterInputAspect","panelIsVisble","ShowErrorAspect","BsMultiSelect","pluginManager","newElement","DOMParser","parseFromString","html","body","eventHandlers","warp","w","multiSelectInlineLayoutAspect","parseEventHandler","eventHandler","doms","plugStaticDoms","preLayouts","layouts","appends","buildApis","disposes","ComposePluginManagerFactory","plugins","mergeList","pluged","inlineBuildAspects","buildAspectsList","j","plugedList","buildAspects","PluginManager","createHandlers","newAspects","k","_doms$i$value","_doms$i","_plugStaticDoms$i$val","_plugStaticDoms$i","_preLayouts$i$value","_preLayouts$i","_layouts$j$value","_layouts$j","_appends$i$value","_appends$i","_buildApis$i$value","_buildApis$i","_disposes$i$value","_disposes$i","transformStyles","opt","old","transformClasses","adjustLegacySettings","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","console","log","inputColor","useCss","getIsValid","getIsInValid","MultiSelectBuilder","buildConfiguration","inlineBuildAspectsList","defaultSettings","ModuleFactory$1","customizationPlugins","ModuleFactory","documentMode","pluginsArray","dispatchEvent","BsMultiSelectDefault","picksPlugins","picksPluginsArray","BsPicksDefault","BsPicks","MultiSelectTools","allPlugins","legacyConstructor"],"mappings":"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","sourcesContent":["export function isBoolean(value){\r\n    return value === true || value === false;\r\n}\r\n\r\nexport function isString(value){\r\n    return value instanceof String || typeof(value) === 'string';\r\n}\r\n\r\nexport function extendIfUndefined(destination, source) {\r\n    for (let property in source)\r\n        if (destination[property] === undefined)\r\n            destination[property] = source[property];\r\n}\r\n\r\nexport function shallowClearClone(source, ...sources) { // override previous, no null and undefined\r\n    var destination = {};\r\n    for (let property in source){ // TODO:  Object.assign (need polyfill for IE11)\r\n        let v = source[property];\r\n        if (!(v === null || v===undefined))\r\n            destination[property] = v;\r\n    }\r\n    if(sources)\r\n        sources.forEach(\r\n            s=>{\r\n                for(let property in s){\r\n                    let v = s[property];\r\n                    if (!(v === null || v===undefined))\r\n                        destination[property] = v;\r\n                    else\r\n                        if (destination.hasOwnProperty(property)){\r\n                            delete destination[property];\r\n                        }\r\n                }\r\n            }\r\n        )\r\n    return destination;\r\n}\r\n\r\nfunction forEachRecursion(f, e){\r\n    if (!e)\r\n        return;\r\n    let goOn = f(e.value); \r\n    if (!(goOn===false))\r\n        forEachRecursion(f, e.prev);\r\n}\r\n\r\nfunction indexRecursion(index, e){\r\n    if (!e.prev)\r\n        return index;\r\n    indexRecursion(++index, e.prev);\r\n}\r\n\r\nexport function List(){\r\n    var tail = null;\r\n    var count = 0;\r\n    return {\r\n        add(e){\r\n            if (tail){\r\n                tail.next = {value:e, prev:tail, next:null};\r\n                tail = tail.next;\r\n            } else \r\n                tail = {value:e, prev:null, next:null}\r\n            count++;\r\n            let node = tail;\r\n            function remove(){\r\n                if (node.prev){\r\n                    (node.prev).next = node.next;\r\n                }\r\n                if (node.next){\r\n                    (node.next).prev = node.prev;\r\n                }\r\n                if (tail == node){\r\n                    tail = node.prev;\r\n                }\r\n                count--;\r\n            }\r\n            function index(){\r\n                return indexRecursion(0, node);\r\n            }\r\n            return {remove, index};\r\n        },\r\n        forEach(f){\r\n            forEachRecursion(f, tail);\r\n        },\r\n        getTail(){ return (tail)?tail.value:null },\r\n        getCount(){ return count },\r\n        isEmpty(){ return count==0 },\r\n        reset(){ tail=null; count = 0 }\r\n    }\r\n}\r\n\r\nexport function DoublyLinkedList(getPrev, setPrev, getNext, setNext){\r\n    var head = null, tail = null;\r\n    var count = 0;\r\n    return {\r\n        add(e, next){\r\n            if (!tail){\r\n                head = tail = e;\r\n                setPrev(e, null);\r\n                setNext(e, null);\r\n            }\r\n            else {\r\n                if (!next){\r\n                    setPrev(e, tail);\r\n                    setNext(e, null);\r\n                    setNext(tail, e);\r\n                    tail = e;\r\n                } \r\n                else{\r\n                    if (next===head)\r\n                        head=e;\r\n                    let prev = getPrev(next);\r\n                    setNext(e, next);\r\n                    setPrev(next, e);\r\n                    if (prev){\r\n                        setPrev(e, prev);\r\n                        setNext(prev, e);\r\n                    } else {\r\n                        setPrev(e, null);\r\n                    }\r\n                } \r\n            }\r\n            count++;\r\n        },\r\n        remove(e){\r\n            let next = getNext(e);\r\n            let prev = getPrev(e);\r\n            if (prev) {\r\n                setNext(prev, next)\r\n            }\r\n            if (next) {\r\n                 setPrev(next, prev)\r\n            }\r\n            if (tail == e) {\r\n                tail = prev;\r\n            }\r\n            if (head == e) {\r\n                head = next; \r\n            }\r\n            count--;\r\n        }, \r\n        getHead(){ return head },\r\n        getTail(){ return tail },\r\n        getCount(){ return count },\r\n        isEmpty(){ return count==0 },\r\n        reset(){ \r\n            tail=head=null; \r\n            count = 0; }\r\n    }\r\n}\r\n\r\nexport function DoublyLinkedCollection(getPrev, setPrev, getNext, setNext){\r\n    var list = [];\r\n    var head = null, tail = null;\r\n    return {\r\n        push(e){\r\n            list.push(e);\r\n            if (!tail){\r\n                head = tail = e;\r\n                setPrev(e, null);\r\n                setNext(e, null);\r\n            }\r\n            else {\r\n                setPrev(e, tail);\r\n                setNext(e, null);\r\n                setNext(tail, e);\r\n                tail = e;\r\n            }\r\n        },\r\n        add(e, key){\r\n            list.splice(key, 0, e);\r\n            if (!tail){\r\n                head = tail = e;\r\n                setPrev(e, null);\r\n                setNext(e, null);\r\n            }\r\n            else {\r\n                let next = list[key];\r\n                if (!next) {\r\n                    setPrev(e, tail);\r\n                    setNext(e, null);\r\n                    setNext(tail, e);\r\n                    tail = e;\r\n                } \r\n                else {\r\n                    if (next===head)\r\n                        head=e;\r\n                    let prev = getPrev(next);\r\n                    setNext(e, next);\r\n                    setPrev(next, e);\r\n                    if (prev){\r\n                        setPrev(e, prev);\r\n                        setNext(prev, e);\r\n                    } else {\r\n                        setPrev(e, null);\r\n                    }\r\n                } \r\n            }\r\n        },\r\n        get: (key) => list[key],\r\n        remove(key){\r\n            var e = list[key];\r\n            list.splice(key, 1);\r\n            let next = getNext(e);\r\n            let prev = getPrev(e);\r\n            if (prev) {\r\n                setNext(prev, next)\r\n            }\r\n            if (next) {\r\n                 setPrev(next, prev)\r\n            }\r\n            if (tail == e) {\r\n                tail = prev;\r\n            }\r\n            if (head == e) {\r\n                head = next; \r\n            }\r\n            return e;\r\n        }, \r\n        forLoop(f){\r\n            for(let i=0; i<list.length; i++)\r\n            {\r\n                let e = list[i];\r\n                f(e);\r\n            }\r\n        },\r\n        getHead(){ return head },\r\n        getTail(){ return tail },\r\n        getCount(){ return list.length },\r\n        isEmpty(){ return list.length==0 },\r\n        reset(){ \r\n            list=[];\r\n            tail=head=null; \r\n            }\r\n    }\r\n}\r\n\r\nexport function ArrayFacade(){\r\n    var list = [];\r\n    return {\r\n        push(e){\r\n            list.push(e);\r\n        },\r\n        add(e, key){\r\n            list.splice(key, 0, e);\r\n        },\r\n        get: (key) => list[key],\r\n        getNext: (key, predicate) => {\r\n            let count = list.length;\r\n            let start = key+1;\r\n            if (key<count) {\r\n                if (!predicate)\r\n                    return list[start];\r\n                for (let i = start; i < count; i++) {\r\n                    let c = list[i];\r\n                    if (predicate(c))\r\n                        return c;\r\n                }\r\n            }\r\n        },\r\n        remove(key){\r\n            var e = list[key];\r\n            list.splice(key, 1);\r\n            return e;\r\n        }, \r\n        forLoop(f){\r\n            for(let i=0; i<list.length; i++)\r\n            {\r\n                let e = list[i];\r\n                f(e, i);\r\n            }\r\n        },\r\n        getHead(){ return list[0] },\r\n        getCount(){ return list.length },\r\n        isEmpty(){ return list.length==0 },\r\n        reset(){ list=[];}\r\n    }\r\n}\r\n\r\nexport function composeSync(...functions){\r\n    return () => \r\n        functions.forEach(\r\n        (f) => {\r\n            if (f)\r\n                f();\r\n        }\r\n    )\r\n}\r\n\r\nexport function defCall(...functions){\r\n    for (let f of functions) \r\n        if (f) {\r\n            if (f instanceof Function){\r\n                let tmp =  f();\r\n                if (tmp)\r\n                    return tmp;\r\n            }\r\n            else\r\n                return f \r\n        }\r\n}\r\n\r\nexport function ObservableValue(value){\r\n    var list = List();\r\n    return {\r\n        getValue(){\r\n            return value;\r\n        },\r\n        setValue(newValue){\r\n            value = newValue;\r\n            list.forEach(f=>f(newValue));\r\n        },\r\n        attach(f){\r\n            return list.add(f)\r\n        },\r\n        detachAll(){\r\n            list.reset();\r\n        }\r\n    }\r\n}\r\n\r\nexport function ObservableLambda(func){\r\n    var list = List();\r\n    var value = func();\r\n    return {\r\n        getValue(){\r\n            return value;\r\n        },\r\n        call(){\r\n            value = func();\r\n            list.forEach(f=>f(value));\r\n        },\r\n        attach(f){\r\n            return list.add(f)\r\n        },\r\n        detachAll(){\r\n            list.reset();\r\n        }\r\n    }\r\n}\r\n\r\n// export function ObjectValues(object){ // Object.values(plugins) - problem for IE11; full impementation of polifill is mor complex, but for our purpose this is enough\r\n//     var arr = [];\r\n// \tfor (var key in object) {\r\n//         arr.push(object[key]);\r\n// \t}\r\n// \treturn arr;\r\n// }\r\n\r\nexport function ObjectValuesEx(object){ \r\n    var arr = [];\r\n\tfor (var key in object) {\r\n        arr.push({key:key, value:object[key]});\r\n\t}\r\n\treturn arr;\r\n}","import {shallowClearClone, isString} from './ToolsJs';\r\n\r\nexport function addStyling(element, styling){\r\n    var backupStyling = {classes:[], styles:{}}\r\n    if (styling) {\r\n        var {classes, styles} = styling;\r\n        classes.forEach(e => element.classList.add(e)) // todo use add(classes)\r\n        backupStyling.classes = classes.slice();\r\n        for (let property in styles){\r\n            backupStyling.styles[property] = element.style[property];\r\n            element.style[property] = styles[property]; // todo use Object.assign (need polyfill for IE11)\r\n        }\r\n    }\r\n    return backupStyling;\r\n}\r\n\r\nfunction removeStyling(element, styling){\r\n    if (styling) {\r\n        var {classes, styles} = styling;\r\n        classes.forEach(e=>element.classList.remove(e)) // todo use remove(classes)\r\n        for (let property in styles)\r\n            element.style[property]  = styles[property]; // todo use Object.assign (need polyfill for IE11)\r\n    }\r\n}\r\n\r\nexport function toggleStyling(element, styling){\r\n    var backupStyling = {classes:[], styles:{}};\r\n    var isOn=false;\r\n    var isF = styling instanceof Function;\r\n    return (value, force)=>{\r\n        if (value) {\r\n            if (isOn===false){\r\n                backupStyling = addStyling(element, isF?styling():styling)\r\n                isOn=true;\r\n            } else if (force){\r\n                removeStyling(element, backupStyling);\r\n                backupStyling =addStyling(element, isF?styling():styling)\r\n            }\r\n        } else {\r\n            if (isOn===true || force===true){\r\n                removeStyling(element, backupStyling);\r\n                isOn=false;\r\n            } \r\n        }\r\n    }\r\n}\r\n\r\nfunction extendClasses(out, param, actionStr, actionArr, isRemoveEmptyClasses){\r\n    if (isString(param)){\r\n        if (param === \"\"){\r\n            if (isRemoveEmptyClasses){\r\n                out.classes = [];\r\n            }\r\n        } else {\r\n            let c = param.split(' ');\r\n            out.classes = actionStr(c);\r\n        }\r\n        return true;\r\n    } else if (param instanceof Array){\r\n        if (param.length==0){\r\n            if (isRemoveEmptyClasses){\r\n                out.classes = [];\r\n            }\r\n        }\r\n        else{\r\n            out.classes = actionArr(param);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction extend(value, param, actionStr, actionArr, actionObj, isRemoveEmptyClasses){\r\n    var success = extendClasses(value, param, actionStr, actionArr, isRemoveEmptyClasses);\r\n    if (success === false){\r\n        if (param instanceof Object){\r\n            var {classes, styles} = param;\r\n            extendClasses(value, classes, actionStr, actionArr, isRemoveEmptyClasses);\r\n            \r\n            if (styles) {\r\n                value.styles = actionObj(styles);\r\n            } else if (!classes) {\r\n                value.styles = actionObj(param)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function Styling(param){\r\n    var value = {classes:[], styles:{}};\r\n    if (param){\r\n        extend(value, param, a=>a, a=>a.slice(), o=>shallowClearClone(o), true);\r\n    }\r\n    return Object.freeze(value);\r\n}\r\n\r\nfunction createStyling(isReplace, param, ...params){\r\n    var value = {classes:[], styles:{}};\r\n    if (param){\r\n        extend(value, param, a=>a, a=>a.slice(), o=>shallowClearClone(o),true);\r\n        if (params){\r\n            var {classes, styles} = value;\r\n            var extendInt = isReplace? (p)=>extend(value, p, s=>s, a=>a.slice(), o=> shallowClearClone(styles, o),true):\r\n                (p)=>extend(value, p, a=>classes.concat(a), a=>classes.concat(a), o=>shallowClearClone(styles, o),false)\r\n            params.forEach(p=> extendInt(p));\r\n        }\r\n    }\r\n    return Styling(value);\r\n}\r\n\r\nexport function createCss(stylings1, stylings2){\r\n    var destination = {};\r\n    for (let property in stylings1) {\r\n        let param1 = stylings1[property];\r\n\r\n        let param2 = stylings2?stylings2[property]:undefined;\r\n        if (param2===undefined)\r\n            destination[property] = Styling(param1)\r\n        else{\r\n            destination[property] = createStyling(true, param1, param2); \r\n        }\r\n    }\r\n    if (stylings2)\r\n        for (let property in stylings2) {\r\n            if (!stylings1[property])\r\n                destination[property] = Styling(stylings2[property])\r\n        }\r\n    return destination;\r\n}\r\n\r\nexport function extendCss(stylings1, stylings2){\r\n    for (let property in stylings2) {\r\n        let param2 = stylings2[property];\r\n        let param1 = stylings1[property];\r\n        if (param1 === undefined)\r\n            stylings1[property] = Styling(param2)\r\n        else{\r\n            stylings1[property] = createStyling(false, param1, param2); \r\n        }\r\n    }\r\n}","import {composeSync} from './ToolsJs';\r\nimport {addStyling} from './ToolsStyling';\r\n\r\n// empty but can be usefull in custom development\r\nexport function PickDomFactoryPlugCss(css){\r\n    css.pickContent = '';\r\n}\r\n\r\nexport function PickDomFactory(css, createElementAspect, optionPropertiesAspect){ \r\n    return { \r\n        create(pick){\r\n            let pickContentElement = createElementAspect.createElement('SPAN');\r\n            let {pickDom, pickDomManagerHandlers} = pick;\r\n            pickDom.pickElement.appendChild(pickContentElement);\r\n            pickDom.pickContentElement=pickContentElement;\r\n            pickDomManagerHandlers.updateData = ()=>{\r\n                pickContentElement.textContent = optionPropertiesAspect.getText(pick.wrap.option);\r\n            }\r\n            addStyling(pickContentElement, css.pickContent);\r\n            pick.dispose=composeSync(pick.dispose, ()=>{\r\n                pickDom.pickContentElement=null;\r\n                pickDomManagerHandlers.updateData=null;\r\n            })\r\n            pickDomManagerHandlers.updateData(); // set visual text\r\n        }\r\n    }\r\n}","import {addStyling, toggleStyling} from './ToolsStyling';\r\n\r\nexport function PicksDomFactory(css, createElementAspect){\r\n    return {\r\n        create(picksElement, isDisposablePicksElementFlag){\r\n            var pickFilterElement  = createElementAspect.createElement('LI');\r\n    \r\n            addStyling(picksElement,      css.picks);\r\n            addStyling(pickFilterElement, css.pickFilter);\r\n        \r\n            let disableToggleStyling = toggleStyling(picksElement, css.picks_disabled);\r\n            let focusToggleStyling   = toggleStyling(picksElement, css.picks_focus);\r\n            let isFocusIn = false;\r\n        \r\n            return {\r\n                picksElement,\r\n                isDisposablePicksElementFlag,\r\n                pickFilterElement,\r\n\r\n                createPickElement(){\r\n                    var pickElement = createElementAspect.createElement('LI');\r\n                    addStyling(pickElement, css.pick);\r\n                    return {\r\n                        pickElement, \r\n                        attach: (beforeElement) => picksElement.insertBefore(pickElement, beforeElement??pickFilterElement),\r\n                        detach: () => picksElement.removeChild(pickElement)\r\n                    };\r\n                },\r\n                disable(isComponentDisabled){\r\n                    disableToggleStyling(isComponentDisabled)\r\n                },\r\n                toggleFocusStyling(){\r\n                    focusToggleStyling(isFocusIn)\r\n                },\r\n                getIsFocusIn(){\r\n                    return isFocusIn;\r\n                },\r\n                setIsFocusIn(newIsFocusIn){\r\n                    isFocusIn = newIsFocusIn\r\n                }, \r\n                dispose(){\r\n                    if (!isDisposablePicksElementFlag){\r\n                        disableToggleStyling(false)\r\n                        focusToggleStyling(false)\r\n\r\n                        if (pickFilterElement.parentNode)\r\n                            pickFilterElement.parentNode.removeChild(pickFilterElement)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function PicksDomFactoryPlugCss(css){\r\n    css.picks = 'form-control';\r\n    css.pickFilter = '';\r\n    css.picks_disabled = 'disabled';\r\n    css.picks_focus = 'focus';\r\n    css.pick = 'badge';\r\n}\r\n\r\nfunction PicksDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.picks = {listStyleType:'none', display:'flex', flexWrap:'wrap',  height: 'auto', marginBottom: '0',cursor: 'text'},\r\n    cssPatch.picks_disabled =  {backgroundColor: '#e9ecef'};\r\n    cssPatch.picks_focus = {borderColor: '#80bdff', boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'};\r\n    cssPatch.pick = {paddingLeft: '0', paddingRight: '.5rem', paddingInlineStart:'0', paddingInlineEnd:'0.5rem'}\r\n}\r\n\r\nexport function PicksDomFactoryPlugCssPatchBs4(cssPatch){\r\n    PicksDomFactoryPlugCssPatch(cssPatch)\r\n    // TODO: this is done for button and should be moved to button plugin\r\n    //cssPatch.pick.lineHeight = '1.5em';\r\n    cssPatch.pick.paddingTop = '0.35em';\r\n    cssPatch.pick.paddingBottom = '0.35em';\r\n}\r\n\r\nexport function PicksDomFactoryPlugCssPatchBs5(cssPatch){\r\n     PicksDomFactoryPlugCssPatch(cssPatch)\r\n     // TODO: this is done for button and should be moved to button plugin\r\n     cssPatch.pick.color ='var(--bs-dark)';\r\n}","export function findDirectChildByTagName(element, tagName){\r\n    let value = null;\r\n    for (let i = 0; i<element.children.length; i++)\r\n    {\r\n        let tmp = element.children[i];\r\n        if (tmp.tagName==tagName)\r\n        {\r\n            value = tmp;\r\n            break;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n\r\nexport function composeEventTrigger(window){ \r\n    let trigger;\r\n    if (typeof(window.Event) === 'function'){\r\n        trigger = (e, eventName) =>{ \r\n            var event = new window.Event(eventName);\r\n            e.dispatchEvent(event);\r\n        }\r\n    }\r\n    else\r\n        trigger = (e, eventName) =>  { // IE 11 polyfill\r\n            let event = window.document.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, false, false, undefined);\r\n            e.dispatchEvent(event);\r\n    }\r\n    return trigger;\r\n}\r\n\r\nexport function closestByTagName(element, tagName){\r\n    return closest(element, e => e.tagName === tagName) // TODO support xhtml?  e.tagName.toUpperCase() ?\r\n}\r\n\r\nexport function closestByClassName(element, className){\r\n    return closest(element, e => e.classList.contains(className))\r\n}\r\n\r\nexport function closestByAttribute(element, attributeName, attribute){\r\n    return closest(element, e => e.getAttribute(attributeName)===attribute )\r\n}\r\n\r\nexport function containsAndSelf(node, otherNode ){\r\n    return node === otherNode || node.contains(otherNode);  \r\n}\r\n\r\nexport function getDataGuardedWithPrefix(element, prefix, name){\r\n    var tmp1 = element.getAttribute('data-' + prefix + '-' + name);\r\n    if (tmp1) {\r\n        return tmp1;\r\n    } else  {\r\n        var tmp2 = element.getAttribute('data-' + name);\r\n        if (tmp2)\r\n            return tmp2;\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction closest(element, predicate){\r\n    if (!element || !(element instanceof Element)) return null; // should be element, not document (TODO: check iframe)\r\n     \r\n    if (predicate(element)) return element;\r\n    return closest(element.parentNode, predicate);\r\n}\r\n\r\nexport function siblingsAsArray(element){\r\n    var value = []\r\n    if (element.parentNode){\r\n        var children = element.parentNode.children;\r\n        var l = element.parentNode.children.length;\r\n        if (children.length>1){\r\n            for (var i=0; i < l; ++i){\r\n                var e = children[i];\r\n                if (e!=element)\r\n                    value.push(e);\r\n                \r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\n\r\nexport function getIsRtl(element){\r\n    var isRtl = false;\r\n    var e = closestByAttribute(element,\"dir\",\"rtl\");\r\n    if (e)\r\n        isRtl = true;\r\n    return isRtl;\r\n}\r\n\r\nexport function EventBinder(){\r\n    var list = [];\r\n    return {\r\n        bind(element, eventName, handler) {\r\n            element.addEventListener(eventName, handler)\r\n            list.push( {element, eventName, handler} )\r\n        },\r\n        unbind() {\r\n            list.forEach( e=> {\r\n                let {element, eventName, handler}=e;\r\n                element.removeEventListener(eventName, handler)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function EventTumbler(element, eventName, handler){\r\n    return {\r\n        on() {\r\n            element.addEventListener(eventName, handler)\r\n        },\r\n        off() {\r\n            element.removeEventListener(eventName, handler)\r\n        }\r\n    }\r\n}\r\n\r\nexport function AttributeBackup(){\r\n    var list = [];\r\n    return {\r\n        set(element, attributeName, attribute){\r\n            var currentAtribute =  element.getAttribute(attributeName); \r\n            list.push( {element, currentAtribute, attribute} )\r\n            element.setAttribute(attributeName, attribute)\r\n        },\r\n        restore(){\r\n            list.forEach(e=>{\r\n                let {element, attributeName, attribute} = e;\r\n                if (attributeName)\r\n                    element.setAttribute(attributeName, attribute)\r\n                else\r\n                    element.removeAttribute(attributeName)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function EventLoopFlag(window) {\r\n    var flag = false;\r\n    return {\r\n        get(){\r\n            return flag;\r\n        },\r\n        set(){\r\n            flag = true;\r\n            pr = window.setTimeout( \r\n                () => {  \r\n                        flag = false;\r\n            })\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport function EventLoopProlongableFlag(window) {\r\n    var flag = false;\r\n    var pr = null;\r\n    return {\r\n        get(){\r\n            return flag;\r\n        },\r\n        set(timeout){\r\n            if (flag && pr){\r\n                window.clearTimeout(pr);\r\n            }\r\n            flag = true;\r\n            pr = window.setTimeout( \r\n                () => {  \r\n                        flag = false;\r\n                        pr=null;\r\n                }, timeout?timeout:0)\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport function ResetableFlag() {\r\n    var flag = false;\r\n    return {\r\n        get(){\r\n            return flag;\r\n        },\r\n        set(){\r\n            flag = true;\r\n        },\r\n        reset(){\r\n            flag = false;\r\n        }\r\n    }\r\n}","import {EventBinder} from './ToolsDom';\r\nimport {addStyling, toggleStyling} from './ToolsStyling';\r\n\r\nexport function ChoiceDomFactory(css, createElementAspect,  optionPropertiesAspect){\r\n    var updateDataInternal = function(wrap, element){\r\n        element.textContent = optionPropertiesAspect.getText(wrap.option);\r\n    }\r\n    //TODO move check which aspects availbale like wrap.hasOwnProperty(\"isOptionSelected\") to there\r\n    return {\r\n        create(choiceElement, wrap){\r\n            let choiceDom = null;\r\n            let choiceDomManagerHandlers = null;\r\n            let choiceHoverToggle = null;\r\n\r\n            if (wrap.hasOwnProperty(\"isOptionSelected\")){\r\n                \r\n                choiceHoverToggle = toggleStyling(choiceElement, () =>\r\n                    (wrap.isOptionDisabled===true && css.choice_disabled_hover && wrap.isOptionSelected===false)?\r\n                        css.choice_disabled_hover:css.choice_hover\r\n                );\r\n\r\n                createElementAspect.createElementFromHtml(choiceElement, '<div><input formnovalidate type=\"checkbox\"><label></label></div>');\r\n                let choiceContentElement = choiceElement.querySelector('DIV');\r\n                let choiceCheckBoxElement = choiceContentElement.querySelector('INPUT');\r\n                let choiceLabelElement = choiceContentElement.querySelector('LABEL');\r\n                \r\n                addStyling(choiceContentElement,  css.choiceContent); \r\n                addStyling(choiceCheckBoxElement, css.choiceCheckBox); \r\n                addStyling(choiceLabelElement,    css.choiceLabel); \r\n\r\n                choiceDom = {\r\n                    choiceElement,\r\n                    choiceContentElement,\r\n                    choiceCheckBoxElement,\r\n                    choiceLabelElement\r\n                };\r\n                \r\n                let choiceSelectedToggle = toggleStyling(choiceElement, css.choice_selected);\r\n                let updateSelected = function(){ \r\n                    choiceSelectedToggle(wrap.isOptionSelected);\r\n                    choiceCheckBoxElement.checked = wrap.isOptionSelected;\r\n                    if (wrap.isOptionDisabled || wrap.choice.isHoverIn){\r\n                        choiceHoverToggle(wrap.choice.isHoverIn, true);\r\n                    }\r\n                }\r\n\r\n                let choiceDisabledToggle = toggleStyling(choiceElement, css.choice_disabled);\r\n                let choiceCheckBoxDisabledToggle = toggleStyling(choiceCheckBoxElement, css.choiceCheckBox_disabled);\r\n                let choiceLabelDisabledToggle = toggleStyling(choiceLabelElement, css.choiceLabel_disabled);\r\n                let choiceCursorDisabledToggle = toggleStyling(choiceElement, {classes:[], styles:{cursor:\"default\"}}); \r\n                let updateDisabled = function(){\r\n                    choiceDisabledToggle(wrap.isOptionDisabled);\r\n                    choiceCheckBoxDisabledToggle(wrap.isOptionDisabled);\r\n                    choiceLabelDisabledToggle(wrap.isOptionDisabled);\r\n    \r\n                    // do not desable checkBox if option is selected! there should be possibility to unselect \"disabled\"\r\n                    let isCheckBoxDisabled = wrap.isOptionDisabled && !wrap.isOptionSelected;\r\n                    choiceCheckBoxElement.disabled = isCheckBoxDisabled;\r\n                    choiceCursorDisabledToggle(isCheckBoxDisabled);\r\n                }\r\n\r\n                choiceDomManagerHandlers = {\r\n                    updateData: ()=>updateDataInternal(wrap, choiceLabelElement),\r\n                    updateHoverIn,\r\n                    updateSelected, \r\n                    updateDisabled,\r\n                }\r\n\r\n            }else{\r\n                choiceHoverToggle    = toggleStyling(choiceElement, ()=>\r\n                    (wrap.isOptionDisabled && css.choice_disabled_hover)?\r\n                        css.choice_disabled_hover:css.choice_hover\r\n                );\r\n                \r\n                choiceElement.innerHTML = '<div></div>';\r\n                let choiceContentElement = choiceElement.querySelector('div');\r\n\r\n                choiceDom = {\r\n                    choiceElement,\r\n                    choiceContentElement\r\n                };\r\n                choiceDomManagerHandlers = {\r\n                    updateData: ()=>updateDataInternal(wrap, choiceContentElement),\r\n                }\r\n            }\r\n\r\n            let updateHoverIn = function(){\r\n                choiceHoverToggle(wrap.choice.isHoverIn);\r\n            }\r\n            choiceDomManagerHandlers.updateHoverIn=updateHoverIn;\r\n\r\n            let eventBinder = EventBinder();\r\n            eventBinder.bind(choiceElement, \"click\", event=>choiceDomManagerHandlers.composeToggle(event) );\r\n\r\n            return {\r\n                choiceDom,\r\n                choiceDomManagerHandlers, \r\n                dispose(){\r\n                    eventBinder.unbind();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ChoiceDomFactoryPlugCss(css){\r\n    css.choiceCheckBox_disabled = 'disabled'; //  not bs, in scss as 'ul.form-control li .custom-control-input.disabled ~ .custom-control-label'\r\n    css.choiceLabel_disabled = '';\r\n    css.choice_disabled_hover  = '';\r\n    css.choice_hover = 'hover'; //  not bs, in scss as 'ul.dropdown-menu li.hover'\r\n}\r\n\r\nexport function ChoiceDomFactoryPlugCssBs4(css){\r\n    ChoiceDomFactoryPlugCss(css)\r\n    css.choiceCheckBox = 'custom-control-input';\r\n    css.choiceContent = 'custom-control custom-checkbox d-flex';\r\n    css.choiceLabel = 'custom-control-label justify-content-start';\r\n    css.choice_selected = '';\r\n    css.choice_disabled = '';\r\n}\r\n\r\nexport function ChoiceDomFactoryPlugCssBs5(css){\r\n    ChoiceDomFactoryPlugCss(css)\r\n    css.choiceCheckBox = 'form-check-input'; // bs\r\n    css.choiceContent = 'form-check'; // bs d-flex required for rtl to align items\r\n    css.choiceLabel = 'form-check-label';\r\n    css.choice_selected = 'selected'; //  not bs,\r\n    css.choice_disabled = 'disabled'; //  not bs,\r\n}\r\n\r\nexport function ChoiceDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.choiceCheckBox = {color: 'inherit', cursor:'inherit'};\r\n    cssPatch.choiceContent = {justifyContent: 'flex-start', cursor:'inherit'}; // BS problem: without this on inline form menu items justified center\r\n    cssPatch.choiceLabel = {color: 'inherit', cursor:'inherit'}; // otherwise BS .was-validated set its color\r\n    cssPatch.choiceLabel_disabled = {opacity: '.65'};  // more flexible than {color: '#6c757d'}; note: avoid opacity on pickElement's border; TODO write to BS4 \r\n    cssPatch.choice_disabled_hover  = 'bg-light';\r\n    cssPatch.choice_hover = 'text-primary bg-light';\r\n}\r\n\r\n","import {addStyling} from './ToolsStyling';\r\n\r\nexport function ChoicesDomFactory(css, createElementAspect) {\r\n    return {\r\n        create(){\r\n            var choicesElement = createElementAspect.createElement('DIV');\r\n            var choicesListElement = createElementAspect.createElement('UL');\r\n            \r\n            choicesElement.appendChild(choicesListElement);\r\n            choicesElement.style.display = 'none';\r\n\r\n            addStyling(choicesElement, css.choices);\r\n            addStyling(choicesListElement, css.choicesList);\r\n            \r\n            return {\r\n                choicesElement,\r\n                choicesListElement,\r\n                createChoiceElement(){\r\n                    var choiceElement = createElementAspect.createElement('LI');\r\n                    addStyling(choiceElement, css.choice);\r\n                    return {\r\n                        choiceElement,\r\n                        setVisible: (isVisible) => choiceElement.style.display = isVisible ? 'block': 'none',\r\n                        attach: (beforeElement) => choicesListElement.insertBefore(choiceElement, beforeElement),\r\n                        detach: () => choicesListElement.removeChild(choiceElement)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function ChoicesDomFactoryPlugCss(css){\r\n    css.choices = 'dropdown-menu';\r\n    css.choicesList = '';\r\n    css.choice = '';\r\n}\r\n\r\nexport function ChoicesDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.choicesList = {listStyleType:'none', paddingLeft:'0', paddingRight:'0', marginBottom:'0'};\r\n    cssPatch.choice = {classes:'px-md-2 px-1', styles:{cursor:'pointer'}};\r\n}","import {addStyling} from './ToolsStyling';\r\nimport {EventBinder} from './ToolsDom';\r\n\r\nexport function FilterDomFactory(css, createElementAspect){\r\n    return {\r\n        create(isDisposablePicksElementFlag){\r\n            var filterInputElement = createElementAspect.createElement('INPUT');\r\n            addStyling(filterInputElement, css.filterInput);\r\n        \r\n            filterInputElement.setAttribute(\"type\",\"search\");\r\n            filterInputElement.setAttribute(\"autocomplete\",\"off\");\r\n            var eventBinder = EventBinder();\r\n\r\n            return {\r\n                filterInputElement,\r\n                isEmpty(){return filterInputElement.value ? false : true},\r\n                setEmpty(){\r\n                    filterInputElement.value ='';\r\n                },\r\n                getValue(){\r\n                    return filterInputElement.value;\r\n                },\r\n                setFocus(){\r\n                    filterInputElement.focus();\r\n                },\r\n                setWidth(text){\r\n                    filterInputElement.style.width = text.length * 1.3 + 2 + \"ch\"\r\n                },\r\n                // TODO: check why I need this comparision? \r\n                setFocusIfNotTarget(target){\r\n                    if (target != filterInputElement)\r\n                        filterInputElement.focus();\r\n                },\r\n                onInput(onFilterInputInput){\r\n                    eventBinder.bind(filterInputElement,'input',    onFilterInputInput);\r\n                },\r\n                onFocusIn(onFocusIn){\r\n                    eventBinder.bind(filterInputElement,'focusin',  onFocusIn);\r\n                },\r\n                onFocusOut(onFocusOut){\r\n                    eventBinder.bind(filterInputElement,'focusout', onFocusOut);\r\n                },\r\n                onKeyDown(onfilterInputKeyDown){\r\n                    eventBinder.bind(filterInputElement,'keydown',  onfilterInputKeyDown);    \r\n                },\r\n                onKeyUp(onFilterInputKeyUp){\r\n                    eventBinder.bind(filterInputElement,'keyup',    onFilterInputKeyUp);\r\n                },\r\n                dispose(){\r\n                    eventBinder.unbind();\r\n                    if (!isDisposablePicksElementFlag){\r\n                        if (filterInputElement.parentNode)\r\n                            filterInputElement.parentNode.removeChild(filterInputElement)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function FilterDomFactoryPlugCss(css){\r\n    css.filterInput = '';\r\n}\r\n\r\nexport function FilterDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.filterInput = {\r\n        border:'0px', height: 'auto', boxShadow:'none', \r\n        padding:'0', margin:'0', \r\n        outline:'none', backgroundColor:'transparent',\r\n        backgroundImage: 'none' // otherwise BS .was-validated set its image\r\n    };\r\n}\r\n","import {PickDomFactoryPlugCss} from './PickDomFactory'\r\nimport {PicksDomFactoryPlugCss} from './PicksDomFactory'\r\nimport {ChoiceDomFactoryPlugCssBs5, ChoiceDomFactoryPlugCssBs4} from './ChoiceDomFactory'\r\nimport {ChoicesDomFactoryPlugCss} from './ChoicesDomFactory'\r\nimport {FilterDomFactoryPlugCss} from './FilterDomFactory'\r\n\r\nexport function createDefaultCssBs5(){\r\n    var defaultCss={};\r\n    PickDomFactoryPlugCss(defaultCss) \r\n    PicksDomFactoryPlugCss(defaultCss)\r\n    ChoiceDomFactoryPlugCssBs5(defaultCss)\r\n    ChoicesDomFactoryPlugCss(defaultCss)\r\n    FilterDomFactoryPlugCss(defaultCss)\r\n    return defaultCss;\r\n}\r\n\r\nexport function createDefaultCssBs4(){ \r\n    var defaultCss={}\r\n    PickDomFactoryPlugCss(defaultCss)\r\n    PicksDomFactoryPlugCss(defaultCss)\r\n    ChoiceDomFactoryPlugCssBs4(defaultCss)\r\n    ChoicesDomFactoryPlugCss(defaultCss)\r\n    FilterDomFactoryPlugCss(defaultCss)\r\n    return defaultCss;\r\n}","import {closestByClassName, siblingsAsArray} from '../ToolsDom';\r\nimport {addStyling} from '../ToolsStyling'\r\nimport {ObservableLambda, composeSync} from '../ToolsJs';\r\n\r\nexport function BsAppearancePlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){ \r\n    let getSizeComponentAspect = {};\r\n    let getValidityComponentAspect = {};\r\n    return (aspects) => {\r\n        aspects.getSizeComponentAspect = getSizeComponentAspect;\r\n        aspects.getValidityComponentAspect = getValidityComponentAspect;\r\n        return {\r\n            // TODO1, LabelElement should be moved to StaticDomFactory and staticDom \r\n            // NOTE: preLayout means first after createStaticDom\r\n            preLayout: () => {\r\n                var {getLabelAspect, staticDom} = aspects; \r\n                var {selectElement} = staticDom;\r\n                var {getDefaultLabel} = configuration;\r\n                let origLabelAspectGetLabel = getLabelAspect.getLabel; \r\n                getLabelAspect.getLabel = () => {\r\n                    var e = origLabelAspectGetLabel();\r\n                    if (e)\r\n                        return e;\r\n                    else{\r\n                        if (selectElement){\r\n                            let labelElement = getDefaultLabel(selectElement);\r\n                            return labelElement;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            layout: () => {\r\n                let {validationApiAspect, \r\n                    initialDom,\r\n                    picksDom, staticDom, updateAppearanceAspect, floatingLabelAspect} = aspects;\r\n                let {getValidity, getSize, useCssPatch, css, composeGetSize} = configuration;\r\n                \r\n                let selectElement = staticDom.selectElement;\r\n                \r\n                let initialElement = initialDom.initialElement;\r\n                \r\n                let isFloatingLabel = false;\r\n                if (floatingLabelAspect){\r\n                    isFloatingLabel =  closestByClassName(initialElement, 'form-floating');\r\n                    floatingLabelAspect.isFloatingLabel = () => isFloatingLabel\r\n                }\r\n            \r\n                if (selectElement) {\r\n                    if(!getValidity)\r\n                        getValidity = composeGetValidity(selectElement)\r\n                    if(!getSize) \r\n                        getSize = composeGetSize(selectElement)\r\n                } else {\r\n                    if (!getValidity)\r\n                        getValidity = () => null\r\n                    if (!getSize)\r\n                        getSize = () => null\r\n                }\r\n            \r\n                getSizeComponentAspect.getSize=getSize;\r\n            \r\n                getValidityComponentAspect.getValidity=getValidity;\r\n            \r\n                var updateSize;\r\n                if (!useCssPatch){\r\n                    updateSize= () => updateSizeForAdapter(picksDom.picksElement, getSize)\r\n                }\r\n                else{\r\n                    let {picks_lg, picks_sm, picks_def, picks_floating_def} = css;\r\n                    if (isFloatingLabel)\r\n                        picks_lg = picks_sm = picks_def = picks_floating_def;\r\n                    updateSize = () => updateSizeJsForAdapter(picksDom.picksElement, picks_lg, picks_sm, picks_def,  getSize);\r\n                }\r\n            \r\n                if (useCssPatch){\r\n                    var origToggleFocusStyling = picksDom.toggleFocusStyling;\r\n                    picksDom.toggleFocusStyling = () => {\r\n                        var validity =  validationObservable.getValue();\r\n                        var isFocusIn = picksDom.getIsFocusIn();\r\n                        origToggleFocusStyling(isFocusIn)\r\n                        if (isFocusIn){\r\n                            if (validity===false) { \r\n                                // but not toggle events (I know it will be done in future)\r\n                                picksDom.setIsFocusIn(isFocusIn);\r\n                                \r\n                                addStyling(picksDom.picksElement, css.picks_focus_invalid)\r\n                            } else if (validity===true) {\r\n                                // but not toggle events (I know it will be done in future)\r\n                                picksDom.setIsFocusIn(isFocusIn);\r\n                                \r\n                                addStyling(picksDom.picksElement, css.picks_focus_valid)  \r\n                            }              \r\n                        }\r\n                    }\r\n                }\r\n            \r\n                var getWasValidated = () => {\r\n                    var wasValidatedElement = closestByClassName(initialElement, 'was-validated');\r\n                    return wasValidatedElement?true:false;\r\n                }\r\n                \r\n                var wasUpdatedObservable = ObservableLambda(()=>getWasValidated());\r\n                var getManualValidationObservable = ObservableLambda(()=>getValidity());\r\n                \r\n                var validationObservable = ObservableLambda(\r\n                    () => wasUpdatedObservable.getValue()?validationApiAspect.getValue():getManualValidationObservable.getValue()\r\n                )\r\n                \r\n                validationObservable.attach(\r\n                    (value)=>{\r\n                        var  {validMessages, invalidMessages} = getMessagesElements(staticDom.containerElement);\r\n                        updateValidity(picksDom.picksElement, validMessages, invalidMessages, value);\r\n                        picksDom.toggleFocusStyling();\r\n                    }\r\n                )\r\n                wasUpdatedObservable.attach(\r\n                    ()=>validationObservable.call()\r\n                )\r\n                if (validationApiAspect)\r\n                    validationApiAspect.attach(\r\n                        ()=>validationObservable.call()\r\n                    )\r\n                getManualValidationObservable.attach(\r\n                    ()=>validationObservable.call()\r\n                )\r\n                \r\n                updateAppearanceAspect.updateAppearance = composeSync(\r\n                    updateAppearanceAspect.updateAppearance, \r\n                    updateSize, \r\n                    validationObservable.call, \r\n                    getManualValidationObservable.call);\r\n                \r\n                return {\r\n                    buildApi(api){\r\n                        api.updateSize=updateSize;\r\n                        api.updateValidity=()=>getManualValidationObservable.call();\r\n                        api.updateWasValidated=()=>wasUpdatedObservable.call();\r\n                    },\r\n                    dispose(){\r\n                        wasUpdatedObservable.detachAll();\r\n                        validationObservable.detachAll();\r\n                        getManualValidationObservable.detachAll();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateValidity(picksElement, validMessages, invalidMessages, validity){\r\n    if (validity===false){\r\n        picksElement.classList.add('is-invalid');\r\n        picksElement.classList.remove('is-valid');\r\n        invalidMessages.map(e=>e.style.display='block'); \r\n        validMessages.map(e=>e.style.display='none');      \r\n    }\r\n    else if (validity===true){\r\n        picksElement.classList.remove('is-invalid');\r\n        picksElement.classList.add('is-valid');\r\n        invalidMessages.map(e=>e.style.display='none'); \r\n        validMessages.map(e=>e.style.display='block'); \r\n    }else {\r\n        picksElement.classList.remove('is-invalid');\r\n        picksElement.classList.remove('is-valid');\r\n        invalidMessages.map(e=>e.style.display=''); \r\n        validMessages.map(e=>e.style.display=''); \r\n    }\r\n}\r\n\r\nfunction updateSizeClasses(picksElement, size){\r\n    if (size==\"lg\"){\r\n        picksElement.classList.add('form-control-lg');\r\n        picksElement.classList.remove('form-control-sm');\r\n    }\r\n    else if (size==\"sm\"){\r\n        picksElement.classList.remove('form-control-lg');\r\n        picksElement.classList.add('form-control-sm');\r\n    }\r\n    else{\r\n        picksElement.classList.remove('form-control-lg');\r\n        picksElement.classList.remove('form-control-sm');\r\n    }\r\n}\r\n\r\nfunction updateSizeJsPicks(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, size){\r\n    if (size==\"lg\"){\r\n        addStyling(picksElement, picksLgStyling);\r\n    } else if (size==\"sm\"){\r\n        addStyling(picksElement, picksSmStyling);\r\n    } else {\r\n        addStyling(picksElement, picksDefStyling);\r\n    }\r\n}\r\n\r\nfunction updateSizeJs(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, size){\r\n    updateSizeClasses(picksElement, size);\r\n    updateSizeJsPicks(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, size)\r\n}\r\n\r\nfunction updateSizeForAdapter(picksElement, getSize){\r\n    updateSizeClasses(picksElement, getSize())\r\n}\r\n\r\nfunction updateSizeJsForAdapter(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, getSize){\r\n    updateSizeJs(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, getSize())\r\n}\r\n\r\nfunction getMessagesElements(containerElement){\r\n    var siblings = siblingsAsArray(containerElement);\r\n    var invalidMessages =  siblings.filter(e=>e.classList.contains('invalid-feedback') || \r\n        e.classList.contains('invalid-tooltip'));\r\n    var validMessages =  siblings.filter(e=>e.classList.contains('valid-feedback') || \r\n        e.classList.contains('valid-tooltip'));\r\n    return {validMessages, invalidMessages}    \r\n} \r\n\r\nfunction composeGetValidity(selectElement){\r\n    var getValidity = () => \r\n        selectElement.classList.contains('is-invalid')?false:\r\n        (selectElement.classList.contains('is-valid')?true:null);\r\n    return getValidity;\r\n}","import {closestByClassName} from '../ToolsDom'\r\nimport {BsAppearancePlugin} from './BsAppearancePlugin'\r\n\r\nexport function BsAppearanceBs4Plugin(defaults) {\r\n    defaults.composeGetSize = composeGetSize; // BsAppearancePlugin\r\n    defaults.getDefaultLabel = getDefaultLabel; // FloatingLabelPlugin, BsAppearancePlugin\r\n    return BsAppearancePlugin();\r\n}\r\n\r\nfunction composeGetSize(element){\r\n    let inputGroupElement = closestByClassName(element, 'input-group');\r\n    let getSize = null;\r\n    if (inputGroupElement){\r\n        getSize = function(){\r\n            var value = null;\r\n            if (inputGroupElement.classList.contains('input-group-lg'))\r\n                value = 'lg';\r\n            else if (inputGroupElement.classList.contains('input-group-sm'))\r\n                value = 'sm';\r\n            return value;\r\n        }\r\n    }\r\n    else{ \r\n        getSize = function(){\r\n            var value = null;\r\n            if (element.classList.contains('custom-select-lg') || element.classList.contains('form-control-lg'))\r\n                value = 'lg';\r\n            else if (element.classList.contains('custom-select-sm') || element.classList.contains('form-control-sm'))\r\n                value = 'sm'; \r\n            return value;\r\n        }\r\n    }\r\n    return getSize;\r\n}\r\n\r\nfunction getDefaultLabel(element){\r\n    let value = null;\r\n    let formGroup = closestByClassName(element,'form-group');\r\n    if (formGroup) \r\n        value = formGroup.querySelector(`label[for=\"${element.id}\"]`);\r\n    return value;\r\n}","export function BsAppearanceBs4CssPatchPlugin(defaults){\r\n    let cssPatch = defaults.cssPatch;\r\n    cssPatch.picks_def = {minHeight: 'calc(2.25rem + 2px)'};\r\n    cssPatch.picks_lg = {minHeight: 'calc(2.875rem + 2px)'};\r\n    cssPatch.picks_sm = {minHeight: 'calc(1.8125rem + 2px)'};\r\n\r\n    cssPatch.picks_focus_valid = {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)'};\r\n    cssPatch.picks_focus_invalid = {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)'};           \r\n}","import {defCall, composeSync} from '../ToolsJs';\r\n\r\nexport function LabelForAttributePlugin(defaults){\r\n    defaults.label = null;\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    var getLabelAspect = {getLabel : ()=>defCall(configuration.label)}\r\n    var createFilterInputElementIdAspect = {\r\n        createFilterInputElementId : ()=>defCall(configuration.filterInputElementId),\r\n    }; \r\n    return (aspects) => {\r\n        aspects.getLabelAspect = getLabelAspect;\r\n        aspects.createFilterInputElementIdAspect = createFilterInputElementIdAspect;\r\n        return {\r\n            layout: () => {\r\n                var {filterDom, loadAspect, disposeAspect, staticDom} = aspects;\r\n\r\n                loadAspect.load = composeSync(loadAspect.load, ()=>{\r\n                    let {filterInputElement} = filterDom;\r\n\r\n                    let labelElement =  getLabelAspect.getLabel(); \r\n                    if (labelElement){\r\n                        let backupedForAttribute = labelElement.getAttribute('for');\r\n                        var inputId = createFilterInputElementIdAspect.createFilterInputElementId();\r\n                    \r\n                        if (!inputId){\r\n                            let {containerClass} = configuration;\r\n                            let {containerElement} = staticDom;\r\n                            inputId =`${containerClass}-generated-filter-${containerElement.id}` \r\n                        }\r\n                        filterInputElement.setAttribute('id', inputId);\r\n                        labelElement.setAttribute('for',inputId);\r\n                        if (backupedForAttribute){\r\n                            disposeAspect.dispose = composeSync(\r\n                                disposeAspect.dispose, \r\n                                () =>labelElement.setAttribute('for', backupedForAttribute)\r\n                            )\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}","\r\nimport {getIsRtl, AttributeBackup} from '../ToolsDom';\r\nimport {isBoolean} from '../ToolsJs';\r\n\r\nexport function RtlPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {popperRtlAspect, staticDom, initialDom} = aspects;\r\n                let {isRtl} = configuration;\r\n                let forceRtlOnContainer = false; \r\n                if (isBoolean(isRtl))\r\n                    forceRtlOnContainer = true;\r\n                else\r\n                    isRtl = getIsRtl(initialDom.initialElement);\r\n            \r\n                var attributeBackup = AttributeBackup();\r\n                if (forceRtlOnContainer){\r\n                    attributeBackup.set(staticDom.containerElement, \"dir\", \"rtl\");\r\n                }\r\n                else if (staticDom.selectElement){\r\n                    var dirAttributeValue = staticDom.selectElement.getAttribute(\"dir\");\r\n                    if (dirAttributeValue){\r\n                        attributeBackup.set(staticDom.containerElement, \"dir\", dirAttributeValue);\r\n                    }\r\n                }\r\n            \r\n                if (popperRtlAspect)\r\n                    popperRtlAspect.getIsRtl = () => isRtl;\r\n            \r\n                return {\r\n                    dispose(){\r\n                        attributeBackup.restore();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {EventBinder, closestByTagName} from '../ToolsDom';\r\n\r\nexport function FormResetPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                var {staticDom, updateDataAspect, environment} = aspects;\r\n\r\n                var eventBuilder = EventBinder();\r\n                if (staticDom.selectElement){\r\n                    var form = closestByTagName(staticDom.selectElement, 'FORM');\r\n                    if (form) {\r\n                        eventBuilder.bind(form, \r\n                            'reset', \r\n                            () => environment.window.setTimeout( ()=>updateDataAspect.updateData() ) );\r\n                    }\r\n                }\r\n                return {\r\n                    dispose(){\r\n                        eventBuilder.unbind();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {ObservableValue, ObservableLambda, defCall, isBoolean, composeSync} from '../ToolsJs';\r\nimport {getDataGuardedWithPrefix} from '../ToolsDom';\r\n\r\nconst defValueMissingMessage = 'Please select an item in the list'\r\n\r\nexport function ValidationApiPlugin(defaults){\r\n    preset(defaults);\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function preset(defaults){defaults.getValueRequired=() => false; defaults.valueMissingMessage='';}\r\n\r\nexport function plug(configuration){\r\n    let  {required, getValueRequired, getIsValueMissing, valueMissingMessage} = configuration;\r\n    var getValueRequiredAspect = GetValueRequiredAspect(required, getValueRequired);\r\n    return (aspects) => {\r\n        aspects.getValueRequiredAspect = getValueRequiredAspect;\r\n        return {\r\n            plugStaticDom: ()=>{\r\n                var {optionsAspect, initialDom} = aspects;\r\n\r\n                var valueMissingMessageEx = defCall(valueMissingMessage,\r\n                   ()=> getDataGuardedWithPrefix(initialDom.initialElement,\"bsmultiselect\",\"value-missing-message\"),\r\n                   defValueMissingMessage)\r\n            \r\n                if (!getIsValueMissing) {\r\n                    getIsValueMissing = () => {\r\n                       let count = 0;\r\n                       let optionsArray = optionsAspect.getOptions();\r\n                       for (var i=0; i < optionsArray.length; i++) {\r\n                           if (optionsArray[i].selected) \r\n                               count++;\r\n                       }\r\n                       return count===0;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    preLayout() {\r\n                    // getValueRequiredAspect redefined on appendToContainer, so this can't be called on prelayout and layout\r\n                    var isValueMissingObservable = ObservableLambda(()=>getValueRequiredAspect.getValueRequired() && getIsValueMissing());\r\n                    var validationApiObservable  = ObservableValue(!isValueMissingObservable.getValue()); \r\n                    aspects.validationApiAspect = ValidationApiAspect(validationApiObservable); // used in BsAppearancePlugin layout, possible races\r\n\r\n                    return {\r\n                        layout: () => {\r\n                            var {onChangeAspect, updateDataAspect} = aspects;\r\n                            // TODO: required could be a function\r\n                            //let {valueMissingMessage} = configuration;\r\n\r\n                            onChangeAspect.onChange = composeSync(isValueMissingObservable.call, onChangeAspect.onChange);\r\n                            updateDataAspect.updateData = composeSync(isValueMissingObservable.call, updateDataAspect.updateData); \r\n                        \r\n                            return {\r\n                                buildApi(api){\r\n                                    var {triggerAspect, filterDom} = aspects;\r\n                                    api.validationApi = ValidityApi(\r\n                                       filterDom.filterInputElement,  // !!\r\n                                       isValueMissingObservable, \r\n                                       valueMissingMessageEx,\r\n                                       (isValid)=>validationApiObservable.setValue(isValid),\r\n                                       triggerAspect.trigger\r\n                                    );\r\n                                }\r\n                            }\r\n                        },\r\n                        dispose(){\r\n                            isValueMissingObservable.detachAll(); \r\n                            validationApiObservable.detachAll();\r\n                        }\r\n                    }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction GetValueRequiredAspect(required, getValueRequiredCfg){\r\n    return {\r\n        getValueRequired(){\r\n            let value = false;\r\n            if (!isBoolean(required))\r\n                if (getValueRequiredCfg)\r\n                    value = getValueRequiredCfg();\r\n            return value;\r\n        }\r\n    }\r\n}\r\n\r\nfunction ValidationApiAspect(validationApiObservable){\r\n    return {\r\n        getValue(){\r\n            return validationApiObservable.getValue();\r\n        },\r\n        attach(f){\r\n            validationApiObservable.attach(f);\r\n        }\r\n    }\r\n}\r\n\r\nfunction ValidityApi(visibleElement, isValueMissingObservable, valueMissingMessage, onValid, trigger){\r\n    var customValidationMessage = \"\";\r\n    var validationMessage = \"\";\r\n    var validity = null;\r\n    var willValidate = true;\r\n    \r\n    function setMessage(valueMissing, customError){\r\n        validity = Object.freeze({\r\n            valueMissing,\r\n            customError,\r\n            valid: !(valueMissing || customError),\r\n        });\r\n        validationMessage = customError?customValidationMessage:(valueMissing?valueMissingMessage:\"\")\r\n        visibleElement.setCustomValidity(validationMessage);\r\n        onValid(validity.valid);\r\n    }\r\n\r\n    setMessage(isValueMissingObservable.getValue(), false);\r\n\r\n    isValueMissingObservable.attach(\r\n        (value) => {\r\n            setMessage(value, validity.customError);\r\n        }\r\n    );\r\n    var checkValidity = () => {\r\n        if (!validity.valid)\r\n            trigger('dashboardcode.multiselect:invalid')\r\n        return validity.valid;\r\n    }\r\n    return {\r\n        validationMessage,\r\n        willValidate,\r\n        validity,\r\n        setCustomValidity(message){\r\n            customValidationMessage = message;\r\n            setMessage(validity.valueMissing, customValidationMessage?true:false);\r\n        },\r\n        checkValidity,\r\n        reportValidity(){\r\n            visibleElement.reportValidity();\r\n            return checkValidity();\r\n        }\r\n    }\r\n}","export function HiddenOptionPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {createWrapAspect, isChoiceSelectableAspect,\r\n                    wrapsCollection, buildChoiceAspect, buildAndAttachChoiceAspect,\r\n                    countableChoicesListInsertAspect, countableChoicesList} = aspects;\r\n                \r\n                countableChoicesListInsertAspect.countableChoicesListInsert = (wrap, key) => {\r\n                    if ( !wrap.isOptionHidden ){\r\n                        let choiceNext = wrapsCollection.getNext(key, c=>!c.isOptionHidden );\r\n                        countableChoicesList.add(wrap, choiceNext)\r\n                    }\r\n                }\r\n            \r\n                let origBuildAndAttachChoice = buildAndAttachChoiceAspect.buildAndAttachChoice;\r\n                buildAndAttachChoiceAspect.buildAndAttachChoice=(wrap, getNextElement)=>{\r\n                    if (wrap.isOptionHidden){ \r\n                        buildHiddenChoice(wrap);\r\n                    }\r\n                    else{ \r\n                        origBuildAndAttachChoice(wrap, getNextElement);\r\n                    }\r\n                }\r\n            \r\n                var origIsSelectable = isChoiceSelectableAspect.isSelectable;\r\n                isChoiceSelectableAspect.isSelectable = (wrap) => origIsSelectable(wrap) && !wrap.isOptionHidden;\r\n            \r\n                let {getIsOptionHidden, options} = configuration;\r\n                if (options) {\r\n                    if (!getIsOptionHidden)\r\n                        getIsOptionHidden = (option) => (option.hidden===undefined)?false:option.hidden;     \r\n                } else {\r\n                    if (!getIsOptionHidden)\r\n                        getIsOptionHidden = (option) => {\r\n                            return option.hidden;     \r\n                        } \r\n                }\r\n\r\n                var origCreateWrap = createWrapAspect.createWrap;\r\n                createWrapAspect.createWrap = (option) => {\r\n                    let wrap = origCreateWrap(option);\r\n                    wrap.isOptionHidden = getIsOptionHidden(option);\r\n                    return wrap;\r\n                };\r\n            \r\n                return {\r\n                    buildApi(api){     \r\n                        let getNextNonHidden =  (key) => wrapsCollection.getNext(key, c => !c.isOptionHidden );\r\n                    \r\n                        api.updateOptionsHidden = () => \r\n                            wrapsCollection.forLoop( (wrap, key) => \r\n                                    updateChoiceHidden(wrap, key, getNextNonHidden, countableChoicesList, getIsOptionHidden, buildChoiceAspect)\r\n                                );\r\n                    \r\n                        api.updateOptionHidden  = (key) => \r\n                            updateChoiceHidden(wrapsCollection.get(key), key, getNextNonHidden, countableChoicesList, getIsOptionHidden, buildChoiceAspect);\r\n                        // TODO create updateHidden ? \r\n                        // it is too complex since we need to find the next non hidden, when this depends on key \r\n                        // there should be the backreference \"wrap -> index\" invited before\r\n                        // api.updateOptionHidden  = (key) => wrapsCollection.get(key).updateHidden();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction buildHiddenChoice(wrap){\r\n    wrap.updateSelected = () => void 0;\r\n    \r\n    wrap.choice.isChoiceElementAttached = false;\r\n    wrap.choice.choiceElement = null;\r\n    wrap.choice.choiceElementAttach = null;\r\n    wrap.choice.setVisible = null; \r\n    wrap.choice.setHoverIn = null;\r\n    wrap.choice.remove = null; \r\n    \r\n    wrap.choice.dispose = () => { \r\n        wrap.choice.dispose = null;\r\n    };\r\n\r\n    wrap.dispose = () => { \r\n        wrap.choice.dispose();\r\n        wrap.dispose = null;\r\n    };\r\n}\r\n\r\nfunction updateChoiceHidden(wrap, key, getNextNonHidden, countableChoicesList, getIsOptionHidden, buildChoiceAspect){\r\n    let newIsOptionHidden = getIsOptionHidden(wrap.option);\r\n    if (newIsOptionHidden != wrap.isOptionHidden)\r\n    {\r\n        wrap.isOptionHidden= newIsOptionHidden;\r\n        if (wrap.isOptionHidden) {\r\n\r\n            countableChoicesList.remove(wrap);\r\n            wrap.choice.remove(); \r\n            buildHiddenChoice(wrap);\r\n        } else {\r\n            let nextChoice = getNextNonHidden(key);\r\n            countableChoicesList.add(wrap, nextChoice);\r\n            buildChoiceAspect.buildChoice(wrap);\r\n            wrap.choice.choiceElementAttach(nextChoice?.choice.choiceElement);\r\n        }\r\n    }\r\n}","import {createCss, extendCss} from '../ToolsStyling';\r\nimport {isBoolean} from '../ToolsJs';\r\n\r\nexport function CssPatchPlugin(defaults){\r\n    defaults.useCssPatch = true;\r\n    return {\r\n        merge(configuration, settings){\r\n            let cssPatch = settings?.cssPatch;\r\n            if (isBoolean(cssPatch))\r\n                throw new Error(\"BsMultiSelect: 'cssPatch' was used instead of 'useCssPatch'\") // often type of error\r\n            configuration.cssPatch = createCss(defaults.cssPatch, cssPatch); // replace classes, merge styles\r\n        },\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    if (configuration.useCssPatch){\r\n        extendCss(configuration.css, configuration.cssPatch);\r\n        configuration.cssPatch = undefined;\r\n    }\r\n}\r\n\r\nconst _cssPatchBs5 = {\r\n    choicesList: {listStyleType:'none', paddingLeft:'0', paddingRight:'0', marginBottom:'0'},\r\n    picks: {listStyleType:'none', display:'flex', flexWrap:'wrap',  height: 'auto', marginBottom: '0', cursor: 'text'},\r\n    choice: {classes:'px-md-2 px-1', styles:{cursor:'pointer'}},\r\n    //choice_selected: 'selected',  //  remove,\r\n    //choice_disabled: 'disabled',  //  remove,\r\n    choice_hover: 'text-primary bg-light', \r\n    choice_disabled_hover: 'bg-light', // actually 'disabled, not selected'\r\n    filterInput: {\r\n        border:'0px', height: 'auto', boxShadow:'none', \r\n        padding:'0', margin:'0', \r\n        outline:'none', backgroundColor:'transparent',\r\n        backgroundImage: 'none' // otherwise BS .was-validated set its image\r\n    },\r\n    filterInput_empty: 'form-control', // need for placeholder, TODO test form-control-plaintext\r\n\r\n    // used in PicksDom\r\n    picks_disabled: {backgroundColor: '#e9ecef'},\r\n\r\n    picks_focus: {borderColor: '#80bdff', boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'},\r\n    picks_focus_valid: {borderColor: '',  boxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)'},\r\n    picks_focus_invalid: {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)'},\r\n    \r\n    // used in BsAppearancePlugin\r\n    picks_def: {minHeight: 'calc(2.25rem + 2px)'},\r\n    picks_lg:  {minHeight: 'calc(2.875rem + 2px)'},\r\n    picks_sm:  {minHeight: 'calc(1.8125rem + 2px)'},\r\n    picks_floating_def: {minHeight: 'calc(3.5rem + 2px)'},\r\n    \r\n    // used in pickContentGenerator\r\n    pick: {paddingLeft: '0', paddingRight: '.5rem', paddingInlineStart:'0', paddingInlineEnd:'0.5rem', color:'var(--bs-dark)'},\r\n    pickButton: {fontSize:'0.8em',  float : \"none\", verticalAlign: \"text-top\"},\r\n    pickContent_disabled: {opacity: '.65'}, \r\n    \r\n    // used in choiceContentGenerator\r\n    choiceContent: {justifyContent: 'flex-start', cursor:'inherit'}, // BS problem: without this on inline form menu items justified center\r\n    choiceLabel: {color: 'inherit', cursor:'inherit'}, // otherwise BS .was-validated set its color\r\n    choiceCheckBox: {color: 'inherit', cursor:'inherit'},\r\n    choiceLabel_disabled: {opacity: '.65'},  // more flexible than {color: '#6c757d'}; note: avoid opacity on pickElement's border; TODO write to BS \r\n\r\n    // floating plugin\r\n    label_floating_lifted: {opacity: '.65', transform : 'scale(.85) translateY(-.5rem) translateX(.15rem)'},\r\n    picks_floating_lifted: {paddingTop: '1.625rem', paddingLeft:'0.8rem', paddingBottom : '0'},\r\n\r\n    warning: {paddingLeft: '.25rem', paddingRight: '.25rem', zIndex: 4,  fontSize:'small', backgroundColor:'var(--bs-warning)'} // zIndex=4  since the input-group zIndex=3\r\n}\r\n\r\nconst _cssPatchBs4 = {\r\n    choicesList: {listStyleType:'none', paddingLeft:'0', paddingRight:'0', marginBottom:'0'},\r\n    picks: {listStyleType:'none', display:'flex', flexWrap:'wrap',  height: 'auto', marginBottom: '0',cursor: 'text'},\r\n    choice: {classes:'px-md-2 px-1', styles:{cursor:'pointer'}},    \r\n    choice_hover: 'text-primary bg-light', \r\n    choice_disabled_hover: 'bg-light',\r\n    filterInput: {border:'0px', height: 'auto', boxShadow:'none', \r\n        padding:'0', margin:'0', \r\n        outline:'none', backgroundColor:'transparent',\r\n        backgroundImage: 'none' // otherwise BS .was-validated set its image\r\n    },\r\n    filterInput_empty: 'form-control', // need for placeholder, TODO test form-control-plaintext\r\n\r\n    // used in PicksDom\r\n    picks_disabled: {backgroundColor: '#e9ecef'},\r\n\r\n    picks_focus: {borderColor: '#80bdff', boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'},\r\n    picks_focus_valid: {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)'},\r\n    picks_focus_invalid: {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)'},\r\n    \r\n    // used in BsAppearancePlugin\r\n    picks_def: {minHeight: 'calc(2.25rem + 2px)'},\r\n    picks_lg:  {minHeight: 'calc(2.875rem + 2px)'},\r\n    picks_sm:  {minHeight: 'calc(1.8125rem + 2px)'},\r\n    \r\n    // used in pickContentGenerator\r\n    pick: {lineHeight: '1.5em', paddingLeft: '0', paddingRight: '.5rem', paddingInlineStart:'0', paddingInlineEnd:'0.5rem'},\r\n    pickButton: {fontSize:'1.5em', lineHeight: '.9em', float : \"none\"},\r\n    pickContent_disabled: {opacity: '.65'}, \r\n    \r\n    // used in choiceContentGenerator\r\n    choiceContent: {justifyContent: 'flex-start', cursor:'inherit'}, // BS problem: without this on inline form menu items justified center\r\n    choiceLabel: {color: 'inherit', cursor:'inherit'}, // otherwise BS .was-validated set its color\r\n    choiceCheckBox: {color: 'inherit', cursor:'inherit'},\r\n    choiceLabel_disabled: {opacity: '.65'},  // more flexible than {color: '#6c757d'}; note: avoid opacity on pickElement's border; TODO write to BS4 \r\n\r\n    warning: {paddingLeft: '.25rem', paddingRight: '.25rem', zIndex: 4,  fontSize:'small', backgroundColor: 'var(--bs-warning)'}, // zIndex=4  since the input-group zIndex=3\r\n}\r\n\r\nconst _cssBs4 = {\r\n    choices: 'dropdown-menu', // bs4, in bsmultiselect.scss as ul.dropdown-menu\r\n    choicesList: '', // bs4, in bsmultiselect.scss as div.dropdown-menu>ul (first child)\r\n    choice_hover:  'hover',  //  not bs4, in scss as 'ul.dropdown-menu li.hover'\r\n    choice_selected: '', \r\n    choice_disabled: '', \r\n\r\n    picks: 'form-control',  // bs4, in scss 'ul.form-control'\r\n    picks_focus: 'focus', // not bs4, in scss 'ul.form-control.focus'\r\n    picks_disabled: 'disabled', //  not bs4, in scss 'ul.form-control.disabled'\r\n    pick_disabled: '',  \r\n    \r\n    pickFilter: '', \r\n    filterInput: '',\r\n\r\n    // used in pickContentGenerator\r\n    pick: 'badge', // bs4\r\n    pickContent: '',\r\n    pickContent_disabled: 'disabled', // not bs4, in scss 'ul.form-control li span.disabled'\r\n    pickButton: 'close', // bs4\r\n\r\n    // used in choiceContentGenerator\r\n    // choice:  'dropdown-item', // it seems like hover should be managed manually since there should be keyboard support\r\n    choiceCheckBox_disabled: 'disabled', //  not bs4, in scss as 'ul.form-control li .custom-control-input.disabled ~ .custom-control-label'\r\n    choiceContent: 'custom-control custom-checkbox d-flex', // bs4 d-flex required for rtl to align items\r\n    choiceCheckBox: 'custom-control-input', // bs4\r\n    choiceLabel: 'custom-control-label justify-content-start',\r\n    choiceLabel_disabled: '',\r\n\r\n    warning: 'alert-warning bg-warning'\r\n}\r\n\r\nconst _cssBs5 = {\r\n    choices: 'dropdown-menu', // bs, in bsmultiselect.scss as div.dropdown-menu\r\n    choicesList: '', // bs, in bsmultiselect.scss as div.dropdown-menu>ul (first child)\r\n    choice_hover:  'hover',  //  not bs, in scss as 'ul.dropdown-menu li.hover'\r\n    choice_selected: 'selected',  //  not bs,\r\n    choice_disabled: 'disabled',  //  not bs,\r\n    picks: 'form-control',  // bs, in scss 'ul.form-control'\r\n    picks_focus: 'focus', // not bs, in scss 'ul.form-control.focus'\r\n    picks_disabled: 'disabled', //  not bs, in scss 'ul.form-control.disabled'\r\n    pick_disabled: '',  \r\n    \r\n    pickFilter: '', \r\n    filterInput: '',\r\n\r\n    // used in pickContentGenerator\r\n    pick: {classes:'badge'}, // bs\r\n    pickContent: '',\r\n    pickContent_disabled: 'disabled', // not bs, in scss 'ul.form-control li span.disabled'\r\n    pickButton: 'btn-close', // bs\r\n\r\n    // used in choiceContentGenerator\r\n    // choice:  'dropdown-item', // it seems like hover should be managed manually since there should be keyboard support\r\n    choiceCheckBox_disabled: 'disabled', //  not bs, in scss as 'ul.form-control li .custom-control-input.disabled ~ .custom-control-label'\r\n    choiceContent: 'form-check', // bs d-flex required for rtl to align items\r\n    choiceCheckBox: 'form-check-input', // bs\r\n    choiceLabel: 'form-check-label',\r\n    choiceLabel_disabled: '',\r\n\r\n    label_floating_lifted: 'floating-lifted',\r\n    picks_floating_lifted: 'floating-lifted',\r\n\r\n    warning: 'alert-warning'\r\n}","import {CssPatchPlugin} from './CssPatchPlugin';\r\n\r\n//import {PickDomFactoryPlugCssPatch} from '../PickDomFactory'\r\nimport {PicksDomFactoryPlugCssPatchBs4} from '../PicksDomFactory' // TODO move specific styles to button plugin\r\nimport {ChoiceDomFactoryPlugCssPatch} from '../ChoiceDomFactory'\r\nimport {ChoicesDomFactoryPlugCssPatch} from '../ChoicesDomFactory'\r\nimport {FilterDomFactoryPlugCssPatch} from '../FilterDomFactory'\r\n\r\nexport function CssPatchBs4Plugin(defaults) {\r\n    var cssPatch = {};\r\n\r\n    //PickDomFactoryPlugCssPatch(cssPatch);\r\n    PicksDomFactoryPlugCssPatchBs4(cssPatch);\r\n    ChoiceDomFactoryPlugCssPatch(cssPatch);\r\n    ChoicesDomFactoryPlugCssPatch(cssPatch);\r\n    FilterDomFactoryPlugCssPatch(cssPatch);\r\n\r\n    defaults.cssPatch = cssPatch;\r\n    return CssPatchPlugin(defaults)\r\n}","export function JQueryMethodsPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){ \r\n    return (aspects) =>  {\r\n        return {\r\n            layout: () => {\r\n                let {staticDom, choicesDom, filterDom, picksList, picksDom} = aspects;\r\n                return {\r\n                    buildApi(api){\r\n                        api.getContainer = () =>  staticDom.containerElement;\r\n                        api.getChoices = () => choicesDom.choicesElement;\r\n                        api.getChoicesList = () => choicesDom.choicesListElement;\r\n                        api.getFilterInput = () => filterDom.filterInputElement;\r\n                        api.getPicks = () => picksDom.picksElement;\r\n                        api.picksCount = () => picksList.getCount();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","export function OptionsApiPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){\r\n    return (aspects) => {\r\n        return {\r\n                    buildApi(api){\r\n                        let {buildAndAttachChoiceAspect, wraps, wrapsCollection, createWrapAspect, createChoiceBaseAspect,\r\n                            optionsAspect, resetLayoutAspect} = aspects;\r\n                            \r\n                        api.updateOptionAdded = (key) => {  // TODO: generalize index as key \r\n                            let options = optionsAspect.getOptions();\r\n                            let option = options[key];\r\n\r\n                            let wrap = createWrapAspect.createWrap(option);\r\n                            wrap.choice= createChoiceBaseAspect.createChoiceBase(option);\r\n                            wraps.insert(key, wrap);\r\n                            let nextChoice = ()=> wrapsCollection.getNext(key, c => c.choice.choiceElement);\r\n                        \r\n                            buildAndAttachChoiceAspect.buildAndAttachChoice(\r\n                                wrap,\r\n                                () => nextChoice()?.choice.choiceElement\r\n                            )\r\n                        }\r\n                    \r\n                        api.updateOptionRemoved = (key) => { // TODO: generalize index as key \r\n                            resetLayoutAspect.resetLayout(); // always hide 1st, then reset filter\r\n\r\n                            var wrap = wraps.remove(key);\r\n                            wrap.choice.remove?.();\r\n                            wrap.dispose?.();\r\n                        }\r\n                    }\r\n                }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function FormRestoreOnBackwardPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {staticDom, environment, loadAspect, updateOptionsSelectedAspect} = aspects;\r\n                let window = environment.window;\r\n            \r\n                if (staticDom.selectElement && updateOptionsSelectedAspect){\r\n                    loadAspect.load = composeSync(loadAspect.load,\r\n                        function(){\r\n                            // support browser's \"step backward\" and form's values restore\r\n                            if (window.document.readyState !=\"complete\"){\r\n                                window.setTimeout(function(){\r\n                                    updateOptionsSelectedAspect.updateOptionsSelected();\r\n                                // there are no need to add more updates as api.updateWasValidated() because backward never trigger .was-validate\r\n                                // also backward never set the state to invalid\r\n                                });\r\n                            }\r\n                        })\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {closestByTagName, findDirectChildByTagName, closestByClassName} from '../ToolsDom';\r\nimport {composeSync} from '../ToolsJs';\r\n\r\nexport function SelectElementPlugin(){\r\n    return {plug}\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            dom: ()=> {\r\n                let {\r\n                    staticDomFactory, createElementAspect,\r\n                    onChangeAspect, triggerAspect, optionsAspect,  disposeAspect, \r\n                    initialDom,\r\n                    showErrorAspect, \r\n                    choicesDomFactory, filterDomFactory, picksDomFactory, // move to new appendAspect ?\r\n                    getValueRequiredAspect, createFilterInputElementIdAspect, optGroupAspect /* those three are plugins */,\r\n                    disabledComponentAspect\r\n                } = aspects;\r\n                \r\n                let containerClass = configuration.containerClass;\r\n                let origCreateStaticDom = staticDomFactory.createStaticDom;\r\n                let element = initialDom.initialElement;\r\n                staticDomFactory.createStaticDom = () => {\r\n                        let selectElement = null;\r\n                        let containerElement = null;\r\n                        let picksElement = null;\r\n                        if (element.tagName == 'SELECT') {\r\n                            selectElement = element;\r\n                            if (containerClass){\r\n                                containerElement = closestByClassName(selectElement, containerClass)\r\n                                if (containerElement)\r\n                                    picksElement = findDirectChildByTagName(containerElement, 'UL');\r\n                            }\r\n                        } else if (element.tagName == 'DIV') {\r\n                            selectElement = findDirectChildByTagName(element, 'SELECT');\r\n                            if (selectElement) {\r\n                                if (containerClass){\r\n                                    containerElement = closestByClassName(element, containerClass);\r\n                                    if (containerElement)\r\n                                        picksElement = findDirectChildByTagName(containerElement, 'UL');\r\n                                }\r\n                            } else {\r\n                                return origCreateStaticDom(element, containerClass);\r\n                            } \r\n                        }\r\n                        \r\n                        let isDisposableContainerElementFlag = false;\r\n                        if (!containerElement) {\r\n                            containerElement = createElementAspect.createElement('DIV');\r\n                            containerElement.classList.add(containerClass);\r\n                            isDisposableContainerElementFlag= true;\r\n                        }\r\n                        \r\n                        let staticDom = {\r\n                            containerElement,\r\n                            selectElement\r\n                        };\r\n                        \r\n                        if (selectElement){\r\n                            \r\n                            showErrorAspect.showError = (error)=>{\r\n                                let errorElement = createElementAspect.createElement('SPAN'); \r\n                                errorElement.style.backgroundColor = 'red';\r\n                                errorElement.style.color = 'white';\r\n                                errorElement.style.padding = '0.2rem 0.5rem';\r\n                                errorElement.textContent = 'BsMultiSelect ' + error.toString();\r\n                                selectElement.parentNode.insertBefore(errorElement, selectElement.nextSibling)\r\n                            }\r\n\r\n                            var backupDisplay = selectElement.style.display;\r\n                            selectElement.style.display = 'none';\r\n                            var backupedRequired = selectElement.required;\r\n                        \r\n                            if (getValueRequiredAspect){\r\n                                getValueRequiredAspect.getValueRequired = function(){\r\n                                    return backupedRequired;\r\n                                }\r\n                            }\r\n                        \r\n                            if(selectElement.required===true)\r\n                                selectElement.required = false;\r\n                        \r\n                            // TODO: move to DisableCompenentPlugin\r\n                            //let {getDisabled} = configuration;\r\n                        \r\n                            if (disabledComponentAspect){\r\n                                var fieldsetElement = closestByTagName(selectElement, 'FIELDSET');\r\n                                var origGetDisabled = disabledComponentAspect.getDisabled;\r\n                                if (fieldsetElement)\r\n                                    disabledComponentAspect.getDisabled = () => {\r\n                                        var value = origGetDisabled();\r\n                                        if (value===null)\r\n                                            value = selectElement.disabled || fieldsetElement.disabled;\r\n                                        return value;\r\n                                    } \r\n                                else\r\n                                    disabledComponentAspect.getDisabled = () => {\r\n                                        var value = origGetDisabled();\r\n                                        if (value===null)\r\n                                            value = selectElement.disabled;\r\n                                        return value;\r\n                                    }\r\n                            }\r\n\r\n                            onChangeAspect.onChange = composeSync(() => triggerAspect.trigger('change'), onChangeAspect.onChange) \r\n                            optionsAspect.getOptions = () => selectElement.options;\r\n\r\n                            if (optGroupAspect){\r\n                                optGroupAspect.getOptionOptGroup = (option) => option.parentNode;\r\n                                optGroupAspect.getOptGroupText   = (optGroup) => optGroup.label;\r\n                                optGroupAspect.getOptGroupId = (optGroup) => optGroup.id;\r\n                            }\r\n                        \r\n                            if (selectElement && createFilterInputElementIdAspect){\r\n                                var origCreateFilterInputElementId = createFilterInputElementIdAspect.createFilterInputElementId;\r\n                                \r\n                                createFilterInputElementIdAspect.createFilterInputElementId = () =>\r\n                                { \r\n                                    let id = origCreateFilterInputElementId();\r\n                                    if (!id) {\r\n                                        id =`${containerClass}-generated-input-${((selectElement.id)?selectElement.id:selectElement.name).toLowerCase()}-id`;\r\n                                    }\r\n                                    return id;\r\n                                }\r\n                            }\r\n                        \r\n                            disposeAspect.dispose = composeSync(disposeAspect.dispose, () => {\r\n                                 selectElement.required = backupedRequired;\r\n                                 selectElement.style.display = backupDisplay;\r\n                            });\r\n                        }\r\n\r\n                        let isDisposablePicksElementFlag = false;\r\n                        if (!picksElement) {\r\n                            picksElement = createElementAspect.createElement('UL');\r\n                            isDisposablePicksElementFlag = true; \r\n                        }\r\n                        \r\n                        let choicesDom = choicesDomFactory.create();\r\n                        let picksDom  = picksDomFactory.create(picksElement, isDisposablePicksElementFlag);\r\n                        let filterDom = filterDomFactory.create(isDisposablePicksElementFlag);\r\n                        \r\n                        let {choicesElement} = choicesDom; \r\n                        return {\r\n                            choicesDom,\r\n                            filterDom,\r\n                            picksDom,\r\n                        \r\n                            staticDom, \r\n                        \r\n                            staticManager:{\r\n                                appendToContainer(){ \r\n                                    picksDom.pickFilterElement.appendChild(filterDom.filterInputElement);\r\n                                    picksDom.picksElement.appendChild(picksDom.pickFilterElement); \r\n                                    if (isDisposableContainerElementFlag){\r\n                                        selectElement.parentNode.insertBefore(containerElement, selectElement.nextSibling) \r\n                                        containerElement.appendChild(choicesElement)\r\n                                    }else {\r\n                                        selectElement.parentNode.insertBefore(choicesElement, selectElement.nextSibling)\r\n                                    }\r\n                                    if (isDisposablePicksElementFlag)\r\n                                        containerElement.appendChild(picksElement)\r\n                                },\r\n                                dispose(){ \r\n                                    choicesElement.parentNode.removeChild(choicesElement);\r\n                                    if (isDisposableContainerElementFlag)\r\n                                        selectElement.parentNode.removeChild(containerElement) \r\n                                    if (isDisposablePicksElementFlag)\r\n                                        containerElement.removeChild(picksElement)\r\n                                    picksDom.dispose();\r\n                                    filterDom.dispose();                                        \r\n                                }\r\n                            }\r\n                        }\r\n                }\r\n            },\r\n            layout: ()=>{\r\n                var {loadAspect, environment} = aspects;\r\n                var document = environment.window.document;\r\n\r\n                var origLoadAspectLoop  = loadAspect.loop;\r\n                loadAspect.loop = function(){\r\n                    // browsers can change select value as part of \"autocomplete\" (IE11) at load time\r\n                    // or \"show preserved on go back\" (Chrome) after page is loaded but before \"ready\" event;\r\n                    // NOTE: they never \"restore\" selected-disabled options.\r\n                    // TODO: make the FROM Validation for 'selected-disabled' easy.\r\n                    if (document.readyState != 'loading'){\r\n                        origLoadAspectLoop();\r\n                    }else{\r\n                        var domContentLoadedHandler = function(){\r\n                            origLoadAspectLoop();\r\n                            document.removeEventListener(\"DOMContentLoaded\", domContentLoadedHandler);\r\n                        }\r\n                        document.addEventListener('DOMContentLoaded', domContentLoadedHandler); // IE9+\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function SelectedOptionPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){ \r\n    let isChoiceSelectableAspect = IsChoiceSelectableAspect();\r\n    return (aspects) => {\r\n        aspects.isChoiceSelectableAspect=isChoiceSelectableAspect;\r\n        let {getSelected : getIsOptionSelected, setSelected : setIsOptionSelected, options} = configuration;\r\n        if (options) {\r\n            if (!setIsOptionSelected){\r\n                setIsOptionSelected = (option, value) => {option.selected = value};\r\n            }\r\n            if (!getIsOptionSelected)\r\n                getIsOptionSelected = (option) => option.selected;     \r\n        } else { // selectElement\r\n            if (!getIsOptionSelected){\r\n                getIsOptionSelected = (option) => option.selected;\r\n            }\r\n            if (!setIsOptionSelected){\r\n                setIsOptionSelected = (option, value) => {option.selected = value};\r\n                // NOTE: adding this (setAttribute) break Chrome's html form reset functionality:\r\n                // if (value) option.setAttribute('selected','');\r\n                // else option.removeAttribute('selected');\r\n            }\r\n        }\r\n    \r\n        var getSelectedAspect = {getSelected: getIsOptionSelected};\r\n        var setSelectedAspect = {setSelected: setIsOptionSelected};\r\n        aspects.getSelectedAspect=getSelectedAspect;\r\n        aspects.setSelectedAspect=setSelectedAspect;\r\n\r\n        return {\r\n            plugStaticDom: ()=> {\r\n                // TODO: move to createEventHandlers\r\n                let {wrapsCollection} = aspects;\r\n                aspects.updateOptionsSelectedAspect = UpdateOptionsSelectedAspect(wrapsCollection, getSelectedAspect);\r\n            },\r\n            layout: () => {\r\n                let {wrapsCollection, updateOptionsSelectedAspect,\r\n                    createWrapAspect, buildChoiceAspect, producePickAspect,\r\n                    resetLayoutAspect, picksList, optionToggleAspect,\r\n                    /*inputAspect, filterDom, filterManagerAspect,*/ createPickHandlersAspect, addPickAspect,  fullMatchAspect, \r\n                    onChangeAspect, filterPredicateAspect\r\n                    } = aspects;\r\n                \r\n                let origFilterPredicate = filterPredicateAspect.filterPredicate;\r\n                filterPredicateAspect.filterPredicate = (wrap, text) =>\r\n                    !wrap.isOptionSelected  &&  origFilterPredicate(wrap, text)\r\n                \r\n                \r\n                let  origBuildChoice = buildChoiceAspect.buildChoice;\r\n                buildChoiceAspect.buildChoice= (wrap) => {\r\n                    origBuildChoice(wrap);\r\n                    wrap.updateSelected = () => {\r\n                        wrap.choice.choiceDomManagerHandlers.updateSelected();\r\n                        onChangeAspect.onChange();\r\n                    }\r\n                    wrap.dispose = composeSync( ()=>{wrap.updateSelected = null}, wrap.dispose)\r\n                }\r\n            \r\n                // TODO: test this instead of wrap.updateSelected\r\n                // function updateSelected(wrap){\r\n                //     if (wrap.pick){\r\n                //         if (wrap.isOptionSelected)\r\n                //             pickHandlers.producePick();\r\n                //         else {\r\n                //             pickHandlers.removeAndDispose();\r\n                //             pickHandlers.removeAndDispose=null;\r\n                //         }\r\n                //     }\r\n                //     wrap.choice.choiceDomManagerHandlers.updateSelected();\r\n                //     onChangeAspect.onChange();\r\n                // }\r\n            \r\n            \r\n                function composeUpdateSelected(wrap, booleanValue){\r\n                    return () => {\r\n                        wrap.isOptionSelected = booleanValue;\r\n                        wrap.updateSelected();\r\n                    }\r\n                }\r\n            \r\n                function trySetWrapSelected(option, updateSelected, booleanValue){ //  wrap.option\r\n                    let success = false;\r\n                    var confirmed = setSelectedAspect.setSelected(option, booleanValue); \r\n                    if (!(confirmed===false)) {\r\n                        updateSelected(); \r\n                        success = true;\r\n                    }\r\n                    return success;\r\n                }\r\n            \r\n                let origCreateWrap = createWrapAspect.createWrap;\r\n                createWrapAspect.createWrap = (option)=>{\r\n                    let wrap = origCreateWrap(option);\r\n                    wrap.isOptionSelected = getSelectedAspect.getSelected(option);\r\n                    wrap.updateSelected = null; // can it be combined ?\r\n                    return wrap;\r\n                }\r\n                \r\n            \r\n                let origToggle = optionToggleAspect.toggle; // TODO: improve design, no replace\r\n                optionToggleAspect.toggle= (wrap) => {\r\n                    return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, !wrap.isOptionSelected), !wrap.isOptionSelected)\r\n                }\r\n            \r\n                let origFullMatch = fullMatchAspect.fullMatch;\r\n                fullMatchAspect.fullMatch = (wrap) => {\r\n                    return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, true), true);\r\n                }\r\n            \r\n                ExtendProducePickAspect(producePickAspect, trySetWrapSelected, composeUpdateSelected);\r\n                \r\n                ExtendCreatePickHandlersAspectCreatePickHandlers(createPickHandlersAspect, addPickAspect);\r\n                \r\n            \r\n                let origAddPick =  addPickAspect.addPick;\r\n                addPickAspect.addPick = (wrap, pickHandlers) => {\r\n                    if (wrap.isOptionSelected){\r\n                        let pick = origAddPick(wrap, pickHandlers);\r\n                        wrap.pick = pick;\r\n                        pick.dispose = composeSync(pick.dispose, ()=>{wrap.pick=null;});\r\n                        return pick;\r\n                    }\r\n                }\r\n            \r\n            \r\n                return {\r\n                    buildApi(api){\r\n                        api.selectAll= ()=>{\r\n                            resetLayoutAspect.resetLayout(); // always hide 1st\r\n                            wrapsCollection.forLoop(\r\n                                wrap => {\r\n                                    if (isChoiceSelectableAspect.isSelectable(wrap) &&  !wrap.isOptionSelected)\r\n                                        trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, true), true)\r\n                                }\r\n                            ); \r\n                        }\r\n                    \r\n                        api.deselectAll= ()=>{\r\n                            resetLayoutAspect.resetLayout(); // always hide 1st\r\n                            picksList.forEach(pick=>pick.setSelectedFalse())\r\n                        }\r\n                    \r\n                        api.setOptionSelected = (key, value) => {\r\n                            let wrap = wrapsCollection.get(key);\r\n                            return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, value), value);\r\n                        }\r\n                    \r\n                        // used in FormRestoreOnBackwardPlugin\r\n                        api.updateOptionsSelected = () => updateOptionsSelectedAspect.updateOptionsSelected();\r\n                        api.updateOptionSelected = (key) => updateChoiceSelected(wrapsCollection.get(key), getSelectedAspect)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendCreatePickHandlersAspectCreatePickHandlers(createPickHandlersAspect, addPickAspect){\r\n    let orig =  createPickHandlersAspect.createPickHandlers;\r\n    createPickHandlersAspect.createPickHandlers = (wrap)=>{\r\n        let pickHandlers = orig(wrap);\r\n        wrap.updateSelected = composeSync(\r\n            ()=>{\r\n                if (wrap.isOptionSelected){\r\n                    let pick = pickHandlers.producePick();\r\n                    wrap.pick = pick;\r\n                    pick.dispose = composeSync(pick.dispose, ()=>{wrap.pick=null;});\r\n                }\r\n                else {\r\n                    pickHandlers.removeAndDispose();\r\n                    pickHandlers.removeAndDispose=null;\r\n                }\r\n            },\r\n            wrap.updateSelected\r\n        )\r\n        \r\n        addPickAspect.addPick(wrap, pickHandlers); // why I need it?\r\n        return pickHandlers;\r\n    }\r\n}\r\n\r\nfunction ExtendProducePickAspect(producePickAspect, trySetWrapSelected, composeUpdateSelected){\r\n    let orig = producePickAspect.producePick;\r\n    producePickAspect.producePick = function(wrap, pickHandlers){\r\n        let pick = orig(wrap, pickHandlers);\r\n        pick.setSelectedFalse = () => trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, false), false);\r\n        pick.dispose = composeSync(\r\n            pick.dispose, ()=> {pick.setSelectedFalse = null}\r\n        );\r\n        return pick;\r\n    }\r\n}\r\n\r\nfunction UpdateOptionsSelectedAspect(wrapsCollection, getSelectedAspect){\r\n    return {\r\n        updateOptionsSelected(){\r\n            wrapsCollection.forLoop( wrap => updateChoiceSelected(wrap, getSelectedAspect));\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateChoiceSelected(wrap, getSelectedAspect){\r\n    let newIsSelected = getSelectedAspect.getSelected(wrap.option);\r\n    if (newIsSelected != wrap.isOptionSelected)\r\n    {\r\n        wrap.isOptionSelected = newIsSelected;\r\n        wrap.updateSelected?.(); // some hidden oesn't have element (and need to be updated)\r\n    }\r\n}\r\n\r\nexport function IsChoiceSelectableAspect(){ // TODO rename to IsSelectableByUserAspect ?\r\n    return {\r\n        isSelectable: (wrap)=>true \r\n    }\r\n}\r\n","import {composeSync} from '../ToolsJs';\r\nimport {toggleStyling} from '../ToolsStyling';\r\n\r\nexport function DisabledOptionCssPatchPlugin(defaults){\r\n    defaults.cssPatch.pickContent_disabled = {opacity: '.65'};\r\n}\r\n\r\nexport function DisabledOptionPlugin(defaults){\r\n    defaults.css.pickContent_disabled = 'disabled';\r\n    return {\r\n        plug    \r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {isChoiceSelectableAspect, createWrapAspect,  buildChoiceAspect,\r\n                    filterPredicateAspect, wrapsCollection, optionToggleAspect, producePickAspect, pickDomFactory } = aspects;\r\n                \r\n                let {getIsOptionDisabled, options, css} = configuration;\r\n                if (options) {\r\n                    if (!getIsOptionDisabled)\r\n                        getIsOptionDisabled = (option) => (option.disabled===undefined) ? false : option.disabled;     \r\n                } else { // selectElement\r\n                    if (!getIsOptionDisabled)\r\n                        getIsOptionDisabled = (option) => option.disabled;\r\n                }\r\n            \r\n                // TODO check this instead of wrap.updateDisabled\r\n                // function updateDisabled(wrap){\r\n                //     wrap?.choice?.choiceDomManagerHandlers?.updateDisabled?.();\r\n                //     wrap?.pick?.pickDomManagerHandlers?.updateDisabled?.();\r\n                // }\r\n            \r\n                let origCreateWrap = createWrapAspect.createWrap;\r\n                createWrapAspect.createWrap = (option) => {\r\n                    let wrap = origCreateWrap(option);\r\n                    wrap.isOptionDisabled = getIsOptionDisabled(option); // TODO: remove usage wrap.isOptionDisabled\r\n                    wrap.updateDisabled = null; \r\n                    return wrap;\r\n                };\r\n            \r\n                let origToggle = optionToggleAspect.toggle;\r\n                optionToggleAspect.toggle = (wrap) => {\r\n                    let success = false;\r\n                    if (wrap.isOptionSelected!==undefined){\r\n                        if (wrap.isOptionSelected || !wrap.isOptionDisabled) // TODO: declare dependency on SelectedOptionPlugin\r\n                            success = origToggle(wrap);\r\n                    }\r\n                    else{\r\n                        if (!wrap.isOptionDisabled) {\r\n                            success = origToggle(wrap);\r\n                        }\r\n                    }\r\n                    return success;\r\n                };\r\n            \r\n                let origIsSelectable = isChoiceSelectableAspect.isSelectable;\r\n                isChoiceSelectableAspect.isSelectable = (wrap) => {\r\n                    return  origIsSelectable(wrap) && !wrap.isOptionDisabled;\r\n                };\r\n            \r\n                let origFilterPredicate = filterPredicateAspect.filterPredicate;\r\n                filterPredicateAspect.filterPredicate = (wrap, text) => {\r\n                    return  !wrap.isOptionDisabled && origFilterPredicate(wrap, text) ;\r\n                };\r\n            \r\n                let origBuildChoice = buildChoiceAspect.buildChoice;\r\n                buildChoiceAspect.buildChoice = (wrap) => {\r\n                    origBuildChoice(wrap);\r\n                    wrap.updateDisabled = wrap.choice.choiceDomManagerHandlers.updateDisabled\r\n                    wrap.choice.dispose = composeSync(()=>{wrap.updateDisabled=null;}, wrap.choice.dispose);\r\n                }\r\n                \r\n                ExtendProducePickAspectProducePick(producePickAspect);\r\n            \r\n                ExtendPickDomFactoryCreate(pickDomFactory, css);\r\n\r\n                return {\r\n                    buildApi(api){\r\n                        api.updateOptionsDisabled = () => wrapsCollection.forLoop( wrap => updateChoiceDisabled(wrap, getIsOptionDisabled))\r\n                        api.updateOptionDisabled = (key) => updateChoiceDisabled(wrapsCollection.get(key), getIsOptionDisabled)\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendProducePickAspectProducePick(producePickAspect){\r\n    let orig = producePickAspect.producePick;\r\n    producePickAspect.producePick = (wrap) => {\r\n        let val = orig(wrap);\r\n        let pick = wrap.pick;\r\n        let choiceUpdateDisabledBackup = wrap.updateDisabled; // backup disable only choice\r\n        wrap.updateDisabled = composeSync(choiceUpdateDisabledBackup, () => pick.pickDomManagerHandlers.updateDisabled()); // add pickDisabled\r\n        pick.dispose = composeSync(pick.dispose, \r\n                ()=>{\r\n                     wrap.updateDisabled = choiceUpdateDisabledBackup; // remove pickDisabled\r\n                     wrap.updateDisabled(); // make \"true disabled\" without it checkbox only looks disabled\r\n                }\r\n        )\r\n        return val;\r\n    }\r\n}\r\n\r\nfunction ExtendPickDomFactoryCreate(pickDomFactory, css){\r\n    let orig = pickDomFactory.create;\r\n    pickDomFactory.create = (pick) => {\r\n        orig(pick);\r\n        let {pickDom, pickDomManagerHandlers} = pick;\r\n        let disableToggle = toggleStyling(pickDom.pickContentElement, css.pickContent_disabled);\r\n        pickDomManagerHandlers.updateDisabled = ()=>{\r\n            disableToggle(pick.wrap.isOptionDisabled);\r\n        }\r\n        pickDomManagerHandlers.updateDisabled();\r\n    }\r\n}\r\n\r\nfunction updateChoiceDisabled(wrap, getIsOptionDisabled){\r\n    let newIsDisabled = getIsOptionDisabled(wrap.option);\r\n    if (newIsDisabled != wrap.isOptionDisabled)\r\n    {\r\n        wrap.isOptionDisabled= newIsDisabled;\r\n        wrap.updateDisabled?.(); // some hidden oesn't have element (and need to be updated)\r\n    }\r\n}","export function PicksApiPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){\r\n    return (aspects) => {\r\n        return {\r\n                buildApi(api){\r\n                    let {picksList, createWrapAspect, createPickHandlersAspect, addPickAspect} = aspects;\r\n                    api.forEachPeak = (f) => \r\n                        picksList.forEach(wrap=>f(wrap.option));\r\n                    // TODO: getHeadPeak\r\n                    api.getTailPeak = () => picksList.getTail()?.option;\r\n                    api.countPeaks = () => picksList.getCount();\r\n                    api.isEmptyPeaks = () => picksList.isEmpty();\r\n\r\n                    api.addPick = (option) => {\r\n                        let wrap = createWrapAspect.createWrap(option);\r\n                        // TODO should be moved to specific plugins\r\n                        wrap.updateDisabled = ()=>{};\r\n                        wrap.updateHidden = ()=>{};\r\n                        let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n                        addPickAspect.addPick(wrap, pickHandlers);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function PicksPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            plugStaticDom: ()=> {\r\n                let {picksList} = aspects;\r\n                let {picks} = configuration;\r\n                if (picks) {\r\n                    let {add: origAdd, reset: origReset} = picksList;\r\n                \r\n                    picksList.add = (e) => {\r\n                        let {remove, index} = origAdd(e);\r\n                        picks.push(e);\r\n                        return { remove: composeSync(remove, () => void picks.splice(index(), 1)), index};\r\n                    }\r\n                \r\n                    picksList.reset = () => {\r\n                        origReset();\r\n                        picks.length = 0;\r\n                    }\r\n                }\r\n            },\r\n            layout: () => {\r\n                let {inputAspect, filterDom, filterManagerAspect} = aspects;\r\n                let {picks, addOptionPicked} = configuration;\r\n                /*\r\n                if (!addOptionPicked){\r\n                    addOptionPicked = (option, index, value) => {\r\n                        if (value)\r\n                            picks.push(option);\r\n                        else\r\n                            picks.splice(index, 1);\r\n                        return true;\r\n                    };\r\n                }\r\n            \r\n                function trySetWrapSelected(option, updateSelected, booleanValue){\r\n                    let success = false;\r\n                    var confirmed = setIsOptionSelected(option, booleanValue);\r\n                    if (!(confirmed===false)) {\r\n                        updateSelected();\r\n                        success = true;\r\n                    }\r\n                    return success;\r\n                }\r\n            \r\n                let origProcessInput = inputAspect.processInput;\r\n                inputAspect.processInput = () => {\r\n                    let origResult = origProcessInput();\r\n                    if (!origResult.isEmpty)\r\n                    {\r\n                        if ( filterManagerAspect.getNavigateManager().getCount() == 1)\r\n                        {\r\n                            // todo: move exact match to filterManager\r\n                            let fullMatchWrap =  filterManagerAspect.getNavigateManager().getHead();\r\n                            let text = filterManagerAspect.getFilter();\r\n                            if (fullMatchWrap.choice.searchText == text)\r\n                            {\r\n                                let success = trySetWrapSelected(fullMatchWrap, true);\r\n                                if (success) {\r\n                                    filterDom.setEmpty();\r\n                                    origResult.isEmpty = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return origResult;\r\n                }*/\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function CreatePopperPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){ \r\n    var popperRtlAspect = PopperRtlAspect();\r\n    return (aspects) => {\r\n        aspects.popperRtlAspect = popperRtlAspect;\r\n\r\n        let {environment} = aspects;\r\n\r\n        let {createPopper, Popper, globalPopper} = environment;\r\n        let createModifiersVX = null;\r\n        let createPopperVX = null;\r\n        if (Popper) { // V2\r\n            createPopperVX = createPopper =  (function(createPopperConstructor) {\r\n                return function(anchorElement, element, popperConfiguration) {\r\n                    return new createPopperConstructor(anchorElement, element, popperConfiguration);\r\n                }\r\n            })(Popper);;\r\n            createModifiersVX = CreateModifiersV1;\r\n        } else if (createPopper) {\r\n            createPopperVX = createPopper;\r\n            createModifiersVX = CreateModifiersV2;\r\n        } else if (globalPopper) {\r\n            if (globalPopper.createPopper) {\r\n                createPopperVX = globalPopper.createPopper;\r\n                createModifiersVX = CreateModifiersV2;\r\n            } else {\r\n                createPopperVX = createPopper =  (function(createPopperConstructor) {\r\n                    return function(anchorElement, element, popperConfiguration) {\r\n                        return new createPopperConstructor(anchorElement, element, popperConfiguration);\r\n                    }\r\n                })(globalPopper);\r\n                createModifiersVX = CreateModifiersV1;\r\n            }\r\n        } else {\r\n            throw new Error(\"BsMultiSelect: Popper component (https://popper.js.org) is required\");\r\n        }\r\n        var createPopperConfigurationAspect = CreatePopperConfigurationAspect(createModifiersVX);\r\n        var createPopperAspect = CreatePopperAspect(createPopperVX, popperRtlAspect, createPopperConfigurationAspect); \r\n        aspects.createPopperAspect = createPopperAspect;\r\n\r\n        return {\r\n            append(){\r\n                let {filterDom, choicesDom, disposeAspect, staticManager, choicesVisibilityAspect, specialPicksEventsAspect} = aspects;\r\n                \r\n                let filterInputElement = filterDom.filterInputElement;\r\n                let choicesElement     = choicesDom.choicesElement;\r\n            \r\n                let pop = createPopperAspect.createPopper(choicesElement, filterInputElement, true);\r\n            \r\n                staticManager.appendToContainer = composeSync(staticManager.appendToContainer, pop.init);\r\n            \r\n                var origBackSpace = specialPicksEventsAspect.backSpace;\r\n                specialPicksEventsAspect.backSpace = (pick) => {origBackSpace(pick);  pop.update();};\r\n            \r\n                disposeAspect.dispose = composeSync(disposeAspect.dispose, pop.dispose);\r\n            \r\n                choicesVisibilityAspect.updatePopupLocation = composeSync(\r\n                    choicesVisibilityAspect.updatePopupLocation, \r\n                    function(){pop.update();}\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction PopperRtlAspect(){\r\n    return {\r\n        getIsRtl(){\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction CreateModifiersV1(preventOverflow){\r\n    return {\r\n        preventOverflow: {enabled:preventOverflow},\r\n        hide: {enabled:false},\r\n        flip: {enabled:false}\r\n    };\r\n}\r\n\r\nfunction CreateModifiersV2(preventOverflow){\r\n    var modifiers = [{\r\n            name: 'flip',\r\n            options: {\r\n                fallbackPlacements: ['bottom'],\r\n            },\r\n        }\r\n    ];\r\n    if (preventOverflow) {\r\n        modifiers.push({name: 'preventOverflow'});\r\n    }\r\n    return modifiers;\r\n}\r\n\r\nfunction CreatePopperAspect(createPopperVX, popperRtlAspect, createPopperConfigurationAspect){\r\n    return {\r\n        createPopper(element, anchorElement, preventOverflow){\r\n            let popper = null;\r\n            return {\r\n                init(){\r\n                    var isRtl = popperRtlAspect.getIsRtl();\r\n                    var popperConfiguration = createPopperConfigurationAspect.createConfiguration(preventOverflow, isRtl);\r\n                    popper = createPopperVX(anchorElement, element, popperConfiguration); \r\n                },\r\n                update(){ \r\n                    popper.update(); // become async in popper 2; use forceUpdate if sync is needed? \r\n                },\r\n                dispose(){\r\n                    popper.destroy();\r\n                }\r\n            }\r\n        }\r\n    }   \r\n}\r\n\r\nfunction CreatePopperConfigurationAspect(createModifiersVX){\r\n    return {\r\n        createConfiguration(preventOverflow, isRtl){\r\n            let modifiers = createModifiersVX(preventOverflow);\r\n            \r\n            let popperConfiguration = {\r\n                placement: 'bottom-start',\r\n                modifiers: modifiers\r\n            };\r\n\r\n            if (isRtl){\r\n                popperConfiguration.placement = 'bottom-end';\r\n            }\r\n            return popperConfiguration;\r\n        }\r\n    }   \r\n}","// aka auto height and scrolling\r\nexport function ChoicesDynamicStylingPlugin(defaults, environment){\r\n    preset(defaults)\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function preset(o){\r\n    o.useChoicesDynamicStyling = false;\r\n    o.choicesDynamicStyling = (aspects)=>choicesDynamicStyling(aspects, window);\r\n    o.minimalChoicesDynamicStylingMaxHeight = 20;\r\n}\r\n\r\nexport function plug(configuration){ \r\n    let {choicesDynamicStyling, useChoicesDynamicStyling} = configuration;\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                \r\n                if (useChoicesDynamicStyling) {\r\n                    let {choicesVisibilityAspect, specialPicksEventsAspect} = aspects;\r\n                    var origSetChoicesVisible = choicesVisibilityAspect.setChoicesVisible;\r\n                    choicesVisibilityAspect.setChoicesVisible = \r\n                        function(visible){\r\n                            if (visible)\r\n                                choicesDynamicStyling(aspects);\r\n                            origSetChoicesVisible(visible);\r\n                        };\r\n                    var origBackSpace = specialPicksEventsAspect.backSpace;\r\n                    specialPicksEventsAspect.backSpace = (pick) => {origBackSpace(pick);  choicesDynamicStyling(aspects);};\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction choicesDynamicStyling(aspects, window){\r\n    let {choicesDom, navigateAspect, configuration} = aspects;\r\n    let choicesElement = choicesDom.choicesElement;\r\n    let minimalChoicesDynamicStylingMaxHeight = configuration.minimalChoicesDynamicStylingMaxHeight;\r\n\r\n    //find height of the browser window\r\n    var g = window.document.getElementsByTagName('body')[0],\r\n        e = window.document.documentElement,\r\n        y = window.innerHeight || e.clientHeight  || g.clientHeight;\r\n  \r\n    //find position of choicesElement, if it's at the bottom of the page make the choicesElement shorter\r\n    var pos = choicesElement.parentNode.getBoundingClientRect();\r\n    var new_y = y - pos.top;\r\n  \r\n    //calculate multi select max-height\r\n    var msHeight = Math.max(minimalChoicesDynamicStylingMaxHeight, Math.round((new_y * 0.85))); // Michalek: 0.85 is empiric value, without it list was longer than footer height ; TODO: propose better way\r\n  \r\n    //add css height value\r\n    choicesElement.style.setProperty(\"max-height\", msHeight+\"px\");\r\n    choicesElement.style.setProperty(\"overflow-y\", \"auto\");\r\n\r\n    if (!choicesDom.ChoicesDynamicStylingPlugin_scrollHandle){\r\n        choicesDom.ChoicesDynamicStylingPlugin_scrollHandle = true;\r\n        var origNavigateAspectNavigate = navigateAspect.navigate;\r\n        navigateAspect.navigate = function(down){\r\n            var wrap = origNavigateAspectNavigate(down);\r\n            if (wrap!= null && wrap.choice!=null && wrap.choice.choiceElement!=null)\r\n            wrap.choice.choiceElement.scrollIntoView(false); // alignTo false -  scroll to the top bottom of dropdown first\r\n            // TODO: BUG if mouse left on the dropdow scroll to bottom and one after doesn't work properly\r\n            return wrap;\r\n        }\r\n    }\r\n}\r\n","export function HighlightPlugin(defaults){\r\n    defaults.useHighlighting = false;\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nfunction ExtendChoiceDomFactory(choiceDomFactory, optionPropertiesAspect){\r\n    var origChoiceDomFactoryCreate = choiceDomFactory.create;\r\n    choiceDomFactory.create = (choiceElement, wrap) => {\r\n        var value = origChoiceDomFactoryCreate(choiceElement, wrap);\r\n        value.choiceDomManagerHandlers.updateHighlighted = () => {\r\n            var text = optionPropertiesAspect.getText(wrap.option);\r\n            var highlighter = aspects.highlightAspect.getHighlighter();\r\n            if (highlighter)\r\n                highlighter(choiceElement, value.choiceDom, text);                    \r\n            else\r\n            choiceElement.textContent = text;\r\n        };\r\n        return value;\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        if (configuration.useHighlighting)\r\n            aspects.highlightAspect = HighlightAspect();\r\n        return {\r\n            plugStaticDom(){\r\n                var {choiceDomFactory, optionPropertiesAspect} = aspects;\r\n                ExtendChoiceDomFactory(choiceDomFactory, optionPropertiesAspect);\r\n            },\r\n            layout(){\r\n                let {highlightAspect, filterManagerAspect,  buildChoiceAspect} = aspects;\r\n                if (highlightAspect){\r\n                    let origProcessEmptyInput = filterManagerAspect.processEmptyInput;\r\n                    filterManagerAspect.processEmptyInput = function(){\r\n                        highlightAspect.reset();\r\n                        origProcessEmptyInput(); \r\n                    }\r\n                    let origSetFilter = filterManagerAspect.setFilter;\r\n                    filterManagerAspect.setFilter = function(text){\r\n                        highlightAspect.set(text);\r\n                        origSetFilter(text);\r\n                    }\r\n                    let origBuildChoice = buildChoiceAspect.buildChoice;\r\n                    buildChoiceAspect.buildChoice = function(wrap){\r\n                        origBuildChoice(wrap);\r\n                        let origSetVisible =  wrap.choice.setVisible;\r\n                        wrap.choice.setVisible = function(v){\r\n                          origSetVisible(v);\r\n                          wrap.choice.choiceDomManagerHandlers.updateHighlighted();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction HighlightAspect(){\r\n    let highlighter = null;\r\n    return {\r\n        getHighlighter(){\r\n            return highlighter;\r\n        },\r\n        set(filter){\r\n            var guarded = filter.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n            var regex = new RegExp(\"(\"+guarded+\")\",\"gi\");\r\n            highlighter = function(e, choiceDom, text){\r\n                // TODO replace with\r\n                // var pos = text.indexOf(filter);\r\n                e.innerHTML = text.replace(regex,\"<u>$1</u>\");\r\n                // TODO to method\r\n                // var nodes = e.querySelectorAll('u');\r\n                // var array = Array.prototype.slice.call(nodes);\r\n                // if (choiceDom.highlightedElements)\r\n                //     choiceDom.highlightedElements.concat(array);\r\n                // else\r\n                //     choiceDom.highlightedElements = array;\r\n            }\r\n        },\r\n        reset(){\r\n            highlighter = null;\r\n        }\r\n    }\r\n}","import { composeSync } from \"../ToolsJs\";\r\n\r\nexport function CustomChoiceStylingsPlugin(defaults){\r\n    defaults.customChoiceStylings =  null;\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            plugStaticDom: ()=> {\r\n                let {choiceDomFactory} = aspects;\r\n                let customChoiceStylings = configuration.customChoiceStylings;\r\n                if (customChoiceStylings) {\r\n\r\n                    let customChoiceStylingsAspect = CustomChoiceStylingsAspect(customChoiceStylings);\r\n                    ExtendChoiceDomFactory(choiceDomFactory, customChoiceStylingsAspect);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendChoiceDomFactory(choiceDomFactory, customChoiceStylingsAspect){\r\n    let origChoiceDomFactoryCreate = choiceDomFactory.create;\r\n    choiceDomFactory.create = function(choiceElement, wrap){\r\n        var o = origChoiceDomFactoryCreate(choiceElement, wrap);\r\n        customChoiceStylingsAspect.customize(wrap, o.choiceDom, o.choiceDomManagerHandlers);\r\n        return o;\r\n    }\r\n}\r\n\r\nfunction CustomChoiceStylingsAspect(customChoiceStylings){\r\n    return {\r\n        customize(wrap, choiceDom, choiceDomManagerHandlers){\r\n            var handlers = customChoiceStylings(choiceDom, wrap.option);\r\n\r\n            if (handlers){\r\n                function customChoiceStylingsClosure(custom){\r\n                    return function() {\r\n                            custom({\r\n                                isOptionSelected: wrap.isOptionSelected,\r\n                                isOptionDisabled: wrap.isOptionDisabled,\r\n                                isHoverIn: wrap.choice.isHoverIn,\r\n                                //isHighlighted: wrap.choice.isHighlighted  // TODO isHighlighted should be developed\r\n                            });\r\n                    }\r\n                }\r\n                if (choiceDomManagerHandlers.updateHoverIn && handlers.updateHoverIn)  \r\n                    choiceDomManagerHandlers.updateHoverIn \r\n                        = composeSync(choiceDomManagerHandlers.updateHoverIn, customChoiceStylingsClosure(handlers.updateHoverIn) );\r\n                if (choiceDomManagerHandlers.updateSelected && handlers.updateSelected)  \r\n                    choiceDomManagerHandlers.updateSelected \r\n                        = composeSync(choiceDomManagerHandlers.updateSelected, customChoiceStylingsClosure(handlers.updateSelected));\r\n                if (choiceDomManagerHandlers.updateDisabled && handlers.updateDisabled)  \r\n                    choiceDomManagerHandlers.updateDisabled\r\n                        = composeSync(choiceDomManagerHandlers.updateDisabled, customChoiceStylingsClosure(handlers.updateDisabled));\r\n                if (choiceDomManagerHandlers.updateHighlighted && handlers.updateHighlighted)  \r\n                    choiceDomManagerHandlers.updateHighlighted\r\n                        = composeSync(choiceDomManagerHandlers.updateHighlighted, customChoiceStylingsClosure(handlers.updateHighlighted));\r\n            }\r\n        }\r\n    }\r\n}","import { composeSync } from \"../ToolsJs\";\r\n\r\nexport function CustomPickStylingsPlugin(defaults){\r\n    defaults.customPickStylings = null;\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            plugStaticDom: ()=> {\r\n                let {disabledComponentAspect, pickDomFactory} = aspects;\r\n                let customPickStylings = configuration.customPickStylings;\r\n                let customPickStylingsAspect = CustomPickStylingsAspect(disabledComponentAspect, customPickStylings);\r\n                ExtendPickDomFactory(pickDomFactory, customPickStylingsAspect);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendPickDomFactory(pickDomFactory, customPickStylingsAspect){\r\n    let origCreatePickDomFactory = pickDomFactory.create;\r\n    pickDomFactory.create = function(pick){\r\n        origCreatePickDomFactory(pick);\r\n        customPickStylingsAspect.customize(pick);\r\n    }\r\n}\r\n\r\nfunction CustomPickStylingsAspect(disabledComponentAspect, customPickStylings){\r\n    return {\r\n        customize(pick){\r\n            if (customPickStylings){\r\n                var handlers = customPickStylings(pick.pickDom, pick.wrap.option);\r\n\r\n                if (handlers){\r\n                    function customPickStylingsClosure(custom){\r\n                        return function() {\r\n                            custom({\r\n                                isOptionDisabled: pick.wrap.isOptionDisabled,\r\n                                // wrap.component.getDisabled();\r\n                                // wrap.group.getDisabled();\r\n                                isComponentDisabled: disabledComponentAspect.getDisabled()\r\n                            });\r\n                        }\r\n                    }\r\n                    let pickDomManagerHandlers = pick.pickDomManagerHandlers;\r\n                    // TODO: automate it\r\n                    if (pickDomManagerHandlers.updateDisabled && handlers.updateDisabled)  \r\n                        pickDomManagerHandlers.updateDisabled \r\n                            = composeSync(pickDomManagerHandlers.updateDisabled, customPickStylingsClosure(handlers.updateDisabled));\r\n                    if (pickDomManagerHandlers.updateComponentDisabled && handlers.updateComponentDisabled)  \r\n                        pickDomManagerHandlers.updateComponentDisabled \r\n                            = composeSync(pickDomManagerHandlers.updateComponentDisabled, customPickStylingsClosure(handlers.updateComponentDisabled));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function UpdateAppearancePlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){\r\n    var updateAppearanceAspect = UpdateAppearanceAspect();\r\n    return (aspects) => {\r\n        aspects.updateAppearanceAspect = updateAppearanceAspect;\r\n        return {\r\n            layout: () => {\r\n                var {updateAspect, loadAspect} = aspects;\r\n\r\n                updateAspect.update = composeSync(updateAspect.update, ()=>updateAppearanceAspect.updateAppearance())\r\n                loadAspect.load = composeSync(loadAspect.load, ()=>updateAppearanceAspect.updateAppearance())\r\n\r\n                return{\r\n                    buildApi(api){\r\n                        api.updateAppearance = ()=>updateAppearanceAspect.updateAppearance();\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nfunction UpdateAppearanceAspect(){\r\n    return {\r\n        updateAppearance(){}\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function DisableComponentPlugin(defaults){\r\n    preset(defaults)\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function preset(defaults){\r\n    defaults.getDisabled = () => null;\r\n}\r\n\r\nexport function plug(configuration){ \r\n    let disabledComponentAspect = DisabledComponentAspect(configuration.getDisabled);\r\n    return (aspects) => {\r\n        aspects.disabledComponentAspect=disabledComponentAspect;\r\n        return {\r\n            plugStaticDom: () => {\r\n                var {pickDomFactory} = aspects;\r\n                ExtendPickDomFactory(pickDomFactory, disabledComponentAspect);\r\n            },\r\n            layout: () => {\r\n                var {updateAppearanceAspect, picksList, picksDom, picksElementAspect} = aspects;\r\n\r\n                var disableComponent = (isComponentDisabled)=>{\r\n                    picksList.forEach(pick=>pick.pickDomManagerHandlers.updateComponentDisabled())\r\n                    picksDom.disable(isComponentDisabled);\r\n                }\r\n\r\n                var origOnClick = picksElementAspect.onClick;\r\n                picksElementAspect.onClick = (handler)=>{\r\n                    disableComponent = (isComponentDisabled)=>{\r\n                        picksList.forEach(pick=>pick.pickDomManagerHandlers.updateComponentDisabled())\r\n                        picksDom.disable(isComponentDisabled);\r\n                        if (isComponentDisabled)\r\n                            picksElementAspect.onClickUnbind(); //componentDisabledEventBinder.unbind();\r\n                        else\r\n                            origOnClick(handler); //componentDisabledEventBinder.bind(picksElement, \"click\",  handler); \r\n                    }\r\n                } \r\n            \r\n                let isComponentDisabled; // state! \r\n                function updateDisabled(){\r\n                    let newIsComponentDisabled = disabledComponentAspect.getDisabled()??false;\r\n                    if (isComponentDisabled!==newIsComponentDisabled){\r\n                        isComponentDisabled=newIsComponentDisabled;\r\n                        disableComponent(newIsComponentDisabled);\r\n                    }\r\n                }\r\n            \r\n                updateAppearanceAspect.updateAppearance = composeSync(updateAppearanceAspect.updateAppearance,  updateDisabled);\r\n            \r\n                return{\r\n                    buildApi(api){\r\n                        api.updateDisabled = updateDisabled;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function DisabledComponentAspect(getDisabled) {\r\n    return {\r\n        getDisabled\r\n    }\r\n}\r\n\r\nfunction ExtendPickDomFactory(pickDomFactory, disabledComponentAspect){\r\n    var origCreatePickDomFactory = pickDomFactory.create;\r\n    pickDomFactory.create = (pick) => {\r\n        origCreatePickDomFactory(pick);\r\n        let pickDomManagerHandlers = pick.pickDomManagerHandlers;\r\n        pickDomManagerHandlers.updateComponentDisabled = () => {\r\n            if (pickDomManagerHandlers.disableButton)\r\n                pickDomManagerHandlers.disableButton(disabledComponentAspect.getDisabled()??false)\r\n        };\r\n        pickDomManagerHandlers.updateComponentDisabled();\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\nimport {getDataGuardedWithPrefix} from '../ToolsDom';\r\nimport {toggleStyling} from '../ToolsStyling';\r\nimport {ResetableFlag} from '../ToolsDom'\r\n\r\nexport function PlaceholderPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {staticManager, picksList, picksDom, filterDom, initialDom, updateDataAspect,\r\n                    resetFilterListAspect, filterManagerAspect, environment} = aspects;\r\n                let isIE11 = environment.isIE11;\r\n                let {placeholder,  css} = configuration;\r\n                let {picksElement} = picksDom;\r\n                let filterInputElement = filterDom.filterInputElement;\r\n                \r\n                function setPlaceholder(placeholder){\r\n                    filterInputElement.placeholder = placeholder;\r\n                }\r\n                if (isIE11){\r\n                    var ignoreNextInputResetableFlag = ResetableFlag(); \r\n                    let placeholderStopInputAspect = PlaceholderStopInputAspect(ignoreNextInputResetableFlag);\r\n                    var setPlaceholderOrig = setPlaceholder;\r\n                    setPlaceholder = function(placeholder){\r\n                        ignoreNextInputResetableFlag.set();\r\n                        setPlaceholderOrig(placeholder);\r\n                    }\r\n                    var origOnInput = filterDom.onInput;\r\n                    filterDom.onInput = (handler) => {\r\n                        origOnInput(\r\n                            ()=>{if (placeholderStopInputAspect.get()){\r\n                                placeholderStopInputAspect.reset();\r\n                            } else {\r\n                                handler();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            \r\n                if (!placeholder){\r\n                    placeholder = getDataGuardedWithPrefix(initialDom.initialElement,\"bsmultiselect\",\"placeholder\");\r\n                }\r\n            \r\n                function setEmptyInputWidth(isVisible){\r\n                    if(isVisible)\r\n                        filterInputElement.style.width ='100%';\r\n                    else \r\n                        filterInputElement.style.width ='2ch';\r\n                }\r\n                var emptyToggleStyling = toggleStyling(filterInputElement, css.filterInput_empty);\r\n                function showPlacehodler(isVisible){\r\n                    if (isVisible)\r\n                    {\r\n                        setPlaceholder(placeholder?placeholder:'');\r\n                        picksElement.style.display = 'block';\r\n                    }\r\n                    else\r\n                    {\r\n                        setPlaceholder('');\r\n                        picksElement.style.display = 'flex';\r\n                    }\r\n                    emptyToggleStyling(isVisible);\r\n                    setEmptyInputWidth(isVisible);\r\n                }\r\n                showPlacehodler(true);\r\n            \r\n                function setDisabled(isComponentDisabled){ \r\n                    filterInputElement.disabled = isComponentDisabled;\r\n                };\r\n                let isEmpty = () => picksList.isEmpty() && filterDom.isEmpty()\r\n            \r\n                function updatePlacehodlerVisibility(){\r\n                    showPlacehodler(isEmpty());\r\n                };\r\n                function updateEmptyInputWidth(){\r\n                    setEmptyInputWidth(isEmpty())\r\n                };\r\n                \r\n                let origDisable = picksDom.disable;\r\n                picksDom.disable = (isComponentDisabled)=>{\r\n                    setDisabled(isComponentDisabled);\r\n                    origDisable(isComponentDisabled);\r\n                };\r\n            \r\n                staticManager.appendToContainer = composeSync(staticManager.appendToContainer, updateEmptyInputWidth);\r\n            \r\n                filterManagerAspect.processEmptyInput = composeSync(updateEmptyInputWidth, filterManagerAspect.processEmptyInput);\r\n                resetFilterListAspect.forceResetFilter = composeSync(resetFilterListAspect.forceResetFilter, updatePlacehodlerVisibility);\r\n                        \r\n                let origAdd = picksList.add;\r\n                picksList.add = (pick) => { \r\n                    let returnValue = origAdd(pick);\r\n                    if (picksList.getCount()==1 ){ // make flex\r\n                        if (filterDom.isEmpty()){\r\n                            setPlaceholder('');\r\n                            picksElement.style.display = 'flex';\r\n                            emptyToggleStyling(false);\r\n                            filterInputElement.style.width ='2ch';\r\n                        } else {\r\n                            picksElement.style.display = 'flex';\r\n                        }\r\n                    }\r\n                    pick.dispose = composeSync(pick.dispose, function()\r\n                        { \r\n                            if (isEmpty()) {\r\n                                showPlacehodler(true);\r\n                            }\r\n                        });\r\n                    return returnValue;\r\n                };\r\n            \r\n                updateDataAspect.updateData = composeSync(updateDataAspect.updateData, updatePlacehodlerVisibility);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ie11 support\r\nfunction PlaceholderStopInputAspect(resetableFlag){\r\n    return{\r\n        get(){\r\n            return resetableFlag.get();\r\n        },\r\n        reset(){\r\n            return resetableFlag.reset();\r\n        }             \r\n    }\r\n}","export function PlaceholderCssPatchPlugin(defaults){\r\n    defaults.cssPatch.filterInput_empty = 'form-control'\r\n}","import {composeSync} from '../ToolsJs';\r\nimport {toggleStyling} from '../ToolsStyling';\r\n\r\nexport function FloatingLabelPlugin(defaults){\r\n    defaults.css.label_floating_lifted = 'floating-lifted';\r\n    defaults.css.picks_floating_lifted = 'floating-lifted';            \r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){ \r\n    return (aspects) => {\r\n        return {\r\n            plugStaticDom: ()=> {\r\n                aspects.floatingLabelAspect = FloatingLabelAspect();\r\n            },\r\n            layout: () => {\r\n                let {picksList, picksDom, filterDom, \r\n                    updateDataAspect, resetFilterListAspect, floatingLabelAspect, getLabelAspect} = aspects;\r\n                let {css} = configuration;\r\n                \r\n                if (floatingLabelAspect.isFloatingLabel() ){\r\n                   let labelElement = getLabelAspect.getLabel(); \r\n                   let picksElement = picksDom.picksElement;\r\n            \r\n                   var liftToggleStyling1 = toggleStyling(labelElement, css.label_floating_lifted);\r\n                   var liftToggleStyling2 = toggleStyling(picksElement, css.picks_floating_lifted);\r\n            \r\n                   function liftedLabel(isEmpty){\r\n                       liftToggleStyling1(isEmpty);\r\n                       liftToggleStyling2(isEmpty);\r\n                   }\r\n               \r\n                   let isEmpty = () => picksList.isEmpty() && filterDom.isEmpty() && !picksDom.getIsFocusIn();;\r\n               \r\n                   function updateLiftedLabel(){\r\n                       liftedLabel(!isEmpty());\r\n                   };\r\n               \r\n                   updateLiftedLabel();\r\n               \r\n                   resetFilterListAspect.forceResetFilter = composeSync(resetFilterListAspect.forceResetFilter, updateLiftedLabel);\r\n                       \r\n                   let origAdd = picksList.add;\r\n                   picksList.add = (pick) => { \r\n                       let returnValue = origAdd(pick);\r\n                       if (picksList.getCount()==1) \r\n                           updateLiftedLabel()\r\n                       pick.dispose = composeSync(pick.dispose, ()=>\r\n                           { \r\n                               if (picksList.getCount()==0) \r\n                                   updateLiftedLabel()\r\n                           })\r\n                       return returnValue;\r\n                   };\r\n               \r\n                   var origToggleFocusStyling = picksDom.toggleFocusStyling;\r\n                   picksDom.toggleFocusStyling = () => {\r\n                       var isFocusIn = picksDom.getIsFocusIn();\r\n                       origToggleFocusStyling(isFocusIn);\r\n                       updateLiftedLabel();\r\n                   }\r\n               \r\n                   updateDataAspect.updateData = composeSync(updateDataAspect.updateData, updateLiftedLabel);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction FloatingLabelAspect() {\r\n    return {\r\n        isFloatingLabel(){},\r\n    }\r\n}","export function WarningCssPatchPlugin(defaults){\r\n    defaults.cssPatch.warning = {paddingLeft: '.25rem', paddingRight: '.25rem', zIndex: 4,  fontSize:'small', backgroundColor: 'var(--bs-warning)'}\r\n}","import {addStyling} from \"../ToolsStyling\";\r\nimport {composeSync} from '../ToolsJs';\r\n\r\nconst defNoResultsWarningMessage = 'No results found';\r\n\r\nexport function preset(o){o.noResultsWarning=defNoResultsWarningMessage; o.isNoResultsWarningEnabled=false;}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {choicesDom, createElementAspect, staticManager, afterInputAspect, filterManagerAspect, resetLayoutAspect} = aspects;\r\n                let {css, noResultsWarning} = configuration;\r\n\r\n                if (configuration.isNoResultsWarningEnabled){\r\n                    let warningAspect = WarningAspect(choicesDom, createElementAspect, staticManager, css);\r\n                    aspects.warningAspect = warningAspect;\r\n                \r\n                    ExtendAfterInputAspect(afterInputAspect, warningAspect, filterManagerAspect, noResultsWarning);\r\n                \r\n                    resetLayoutAspect.resetLayout = composeSync(() => warningAspect.hide(), resetLayoutAspect.resetLayout);\r\n                }\r\n            },\r\n            append: ()=> {\r\n                let {createPopperAspect, filterDom, warningAspect, staticManager, disposeAspect} = aspects;\r\n                if (warningAspect){\r\n                    let filterInputElement = filterDom.filterInputElement;\r\n\r\n                    let pop2 = createPopperAspect.createPopper(warningAspect.warningElement, filterInputElement, false);\r\n                    staticManager.appendToContainer = composeSync(staticManager.appendToContainer, pop2.init);\r\n\r\n                    var origWarningAspectShow = warningAspect.show;\r\n                    warningAspect.show = (msg) => {\r\n                        pop2.update();\r\n                        origWarningAspectShow(msg);\r\n                    }\r\n                    disposeAspect.dispose = composeSync(disposeAspect.dispose, pop2.dispose);      \r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendAfterInputAspect(afterInputAspect, warningAspect, filterManagerAspect, noResultsWarning){\r\n    var origVisible = afterInputAspect.visible;\r\n    afterInputAspect.visible = (showChoices, visibleCount) => {\r\n        warningAspect.hide(); \r\n        origVisible(showChoices, visibleCount)\r\n    }\r\n\r\n    var origNotVisible = afterInputAspect.notVisible;\r\n    afterInputAspect.notVisible = (hideChoices) => {\r\n        origNotVisible(hideChoices);\r\n    \r\n        if (filterManagerAspect.getFilter())\r\n            warningAspect.show(noResultsWarning); \r\n        else\r\n            warningAspect.hide();\r\n    }\r\n}\r\n\r\nfunction WarningAspect(choicesDom, createElementAspect, staticManager, css){\r\n    let choicesElement = choicesDom.choicesElement;\r\n\r\n    var warningElement = createElementAspect.createElement('DIV'); \r\n    staticManager.appendToContainer = composeSync(staticManager.appendToContainer, ()=>\r\n        choicesElement.parentNode.insertBefore(warningElement, choicesElement.nextSibling));\r\n\r\n    warningElement.style.display = 'none';\r\n    addStyling(warningElement, css.warning);\r\n\r\n\r\n    return {\r\n        warningElement,\r\n        show(message){\r\n            warningElement.style.display = 'block';\r\n            warningElement.innerHTML = message;\r\n        },\r\n        hide(){\r\n            warningElement.style.display = 'none';\r\n            warningElement.innerHTML = \"\";\r\n        }\r\n    }\r\n}","import {plug as plug2, preset as preset2} from './WarningPlugin';\r\n\r\nexport function WarningBs4Plugin(defaults){\r\n    preset(defaults);\r\n    return {plug:plug2};\r\n}\r\n\r\nexport function preset(defaults){\r\n    defaults.css.warning = 'alert-warning bg-warning';\r\n    preset2(defaults);\r\n}\r\n","import {EventBinder} from '../ToolsDom';\r\nimport {addStyling} from '../ToolsStyling';\r\nimport {composeSync} from '../ToolsJs';\r\n\r\nexport function PickButtonPlugCssPatchBs4(defaults){\r\n    // increase font and limit the line\r\n    defaults.cssPatch.pickButton = {float : \"none\",  verticalAlign: \"text-top\", fontSize:'1.8em', lineHeight: '0.5em', fontWeight:'400' }; \r\n\r\n}\r\n\r\nexport function PickButtonPlugCssPatchBs5(defaults){\r\n    defaults.cssPatch.pickButton = {float : \"none\", verticalAlign: \"text-top\", fontSize:'0.8em'};\r\n}\r\n\r\nexport function PickButtonBs4Plugin(defaults){\r\n    defaults.pickButtonHTML = '<button aria-label=\"Remove\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>';\r\n    defaults.css.pickButton = 'close';\r\n    return PickButtonPlugin()\r\n}\r\n\r\nexport function PickButtonBs5Plugin(defaults){\r\n    defaults.pickButtonHTML = '<button aria-label=\"Remove\" tabIndex=\"-1\" type=\"button\"></button>'; \r\n    defaults.css.pickButton = 'btn-close';\r\n    return PickButtonPlugin()\r\n}\r\n\r\nexport function PickButtonPlugin(){\r\n    return {plug}\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            plugStaticDom: () => {\r\n                var {pickDomFactory, createElementAspect} = aspects;\r\n                ExtendPickDomFactory(pickDomFactory, createElementAspect, configuration.pickButtonHTML, configuration.css);\r\n            },\r\n            layout: ()=>{\r\n                var {producePickAspect} = aspects;\r\n                ExtendProducePickAspect(producePickAspect);\r\n                \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendProducePickAspect(producePickAspect){\r\n    let origProducePickPickAspect = producePickAspect.producePick;\r\n    producePickAspect.producePick = (wrap)=>{\r\n        let pick = origProducePickPickAspect(wrap)\r\n        pick.removeOnButton = (event) => {\r\n            pick.setSelectedFalse();\r\n        }\r\n        pick.dispose = composeSync(\r\n            pick.dispose,\r\n            ()=>{pick.removeOnButton=null}\r\n        );\r\n        return pick;\r\n    }\r\n}\r\n\r\nfunction ExtendPickDomFactory(pickDomFactory, createElementAspect, pickButtonHTML, css){\r\n    var origCreatePickDomFactory = pickDomFactory.create;\r\n    pickDomFactory.create = (pick) => {\r\n        \r\n        origCreatePickDomFactory(pick);\r\n        let {pickDom,pickDomManagerHandlers} = pick;\r\n        createElementAspect.createElementFromHtmlPutAfter(pickDom.pickContentElement, pickButtonHTML);\r\n        let pickButtonElement  = pickDom.pickElement.querySelector('BUTTON');\r\n        pickDom.pickButtonElement=pickButtonElement;\r\n        pickDomManagerHandlers.disableButton = (val)=> {\r\n            pickButtonElement.disabled = val;\r\n        }\r\n\r\n        let eventBinder = EventBinder();\r\n        eventBinder.bind(pickButtonElement, \"click\", (event)=>pick.removeOnButton(event));\r\n        \r\n        addStyling(pickButtonElement, css.pickButton);\r\n        \r\n        pick.dispose = composeSync(\r\n            pick.dispose,\r\n            ()=>{\r\n                eventBinder.unbind();\r\n                pickDom.pickButtonElement=null;\r\n                pickDomManagerHandlers.disableButton = null;\r\n            }\r\n        )\r\n    }\r\n}","import {\r\n    BsAppearanceBs4Plugin, BsAppearanceBs5Plugin, \r\n    \r\n    CssPatchBs4Plugin, CssPatchBs5Plugin,\r\n    BsAppearanceBs4CssPatchPlugin, BsAppearanceBs5CssPatchPlugin,\r\n    \r\n    SelectElementPlugin, \r\n    LabelForAttributePlugin, ValidationApiPlugin, \r\n    UpdateAppearancePlugin, \r\n    \r\n    DisableComponentPlugin,\r\n    FormResetPlugin, CreatePopperPlugin,  RtlPlugin,  PlaceholderPlugin, PlaceholderCssPatchPlugin, \r\n     OptionsApiPlugin, \r\n    JQueryMethodsPlugin, \r\n    SelectedOptionPlugin, FormRestoreOnBackwardPlugin, \r\n    DisabledOptionPlugin, DisabledOptionCssPatchPlugin,\r\n    PicksApiPlugin, HighlightPlugin,\r\n    ChoicesDynamicStylingPlugin, CustomPickStylingsPlugin, CustomChoiceStylingsPlugin,\r\n    \r\n    FloatingLabelPlugin, FloatingLabelCssPatchBs5Plugin, \r\n    \r\n    WarningCssPatchPlugin, WarningBs4Plugin, WarningBs5Plugin,\r\n\r\n    PicksPlugin,\r\n    PickButtonBs4Plugin, PickButtonBs5Plugin, PickButtonPlugCssPatchBs4, PickButtonPlugCssPatchBs5,\r\n    HiddenOptionPlugin,\r\n    /*HiddenOptionAltPlugin as HiddenOptionPlugin*/} from './plugins/index'\r\n\r\nimport {shallowClearClone} from './ToolsJs'\r\n\r\n\r\nexport let Bs4PluginSet = {BsAppearanceBs4Plugin, PickButtonBs4Plugin, WarningBs4Plugin, CssPatchBs4Plugin, BsAppearanceBs4CssPatchPlugin, PickButtonPlugCssPatchBs4}\r\n\r\nexport let Bs5PluginSet = {BsAppearanceBs5Plugin, PickButtonBs5Plugin, WarningBs5Plugin, CssPatchBs5Plugin, BsAppearanceBs5CssPatchPlugin, PickButtonPlugCssPatchBs5, FloatingLabelCssPatchBs5Plugin}\r\n\r\nexport let multiSelectPlugins = {SelectElementPlugin, \r\n    LabelForAttributePlugin, HiddenOptionPlugin, ValidationApiPlugin, \r\n    UpdateAppearancePlugin, \r\n    DisableComponentPlugin,\r\n    FormResetPlugin, CreatePopperPlugin, WarningCssPatchPlugin, RtlPlugin,  PlaceholderPlugin, PlaceholderCssPatchPlugin, FloatingLabelPlugin,  OptionsApiPlugin, \r\n    JQueryMethodsPlugin, \r\n    SelectedOptionPlugin, FormRestoreOnBackwardPlugin, \r\n    DisabledOptionPlugin, DisabledOptionCssPatchPlugin, PicksApiPlugin, HighlightPlugin,\r\n    ChoicesDynamicStylingPlugin, CustomPickStylingsPlugin, CustomChoiceStylingsPlugin};\r\n\r\nexport let picksPlugins = {PicksPlugin, \r\n    LabelForAttributePlugin, ValidationApiPlugin, \r\n    UpdateAppearancePlugin, \r\n    DisableComponentPlugin, \r\n    CreatePopperPlugin, WarningCssPatchPlugin, RtlPlugin,  PlaceholderPlugin, PlaceholderCssPatchPlugin, FloatingLabelPlugin, OptionsApiPlugin, \r\n    JQueryMethodsPlugin, PicksApiPlugin, HighlightPlugin,\r\n    ChoicesDynamicStylingPlugin, CustomPickStylingsPlugin, CustomChoiceStylingsPlugin};\r\n\r\nexport let allPlugins =  shallowClearClone(multiSelectPlugins, {PicksPlugin});\r\n\r\n\r\n\r\n\r\n// var defaultConfig = {\r\n//     plugins: multiSelectPlugins\r\n// }\r\n\r\n// var picksConfig = {\r\n//     plugins: picksPlugins\r\n// }\r\n\r\n// export function createConfig(arg){\r\n//     return config;\r\n// }","import {composeSync} from './ToolsJs'\r\nimport {EventBinder} from './ToolsDom'\r\nimport {addStyling, toggleStyling} from './ToolsStyling'\r\n\r\nexport let utilities = {composeSync, EventBinder, addStyling, toggleStyling}","import {findDirectChildByTagName, closestByClassName} from './ToolsDom';\r\n\r\nexport function StaticDomFactory(\r\n    createElementAspect, choicesDomFactory, filterDomFactory, picksDomFactory, initialDom, containerClass){\r\n    return {\r\n        createStaticDom(){\r\n            var element = initialDom.initialElement;\r\n            \r\n            let containerElement, picksElement;\r\n            let removableContainerClass= false;\r\n            if (element.tagName == 'DIV') {\r\n                containerElement = element;\r\n                if (!containerElement.classList.contains(containerClass)){\r\n                    containerElement.classList.add(containerClass);\r\n                    removableContainerClass = true;\r\n                }\r\n                picksElement = findDirectChildByTagName(containerElement, 'UL');\r\n            }\r\n            else if (element.tagName == 'UL') {\r\n                picksElement = element;\r\n                containerElement = closestByClassName(element, containerClass);\r\n                if (!containerElement){\r\n                    throw new Error('BsMultiSelect: defined on UL but precedentant DIV for container not found; class='+containerClass);\r\n                }\r\n            } \r\n            else if (element.tagName==\"INPUT\") {\r\n                throw new Error('BsMultiSelect: INPUT element is not supported');\r\n            }\r\n\r\n            let staticDom = {\r\n                containerElement\r\n            };\r\n            \r\n            let isDisposablePicksElementFlag=false;\r\n            if (!picksElement) {\r\n                picksElement = createElementAspect.createElement('UL');\r\n                isDisposablePicksElementFlag = true; \r\n            }\r\n\r\n            let choicesDom = choicesDomFactory.create();\r\n            let picksDom  = picksDomFactory.create(picksElement, isDisposablePicksElementFlag);\r\n            let filterDom = filterDomFactory.create(isDisposablePicksElementFlag);\r\n\r\n            let {choicesElement} = choicesDom; \r\n            return {\r\n                staticDom,\r\n\r\n                choicesDom,\r\n                filterDom,\r\n                picksDom,\r\n                \r\n                staticManager: {\r\n                    appendToContainer(){ \r\n                        picksDom.pickFilterElement.appendChild(filterDom.filterInputElement);\r\n                        picksDom.picksElement.appendChild(picksDom.pickFilterElement); \r\n                        containerElement.appendChild(choicesElement); \r\n                        if (isDisposablePicksElementFlag)\r\n                            containerElement.appendChild(picksElement)\r\n                    },\r\n                    dispose(){ \r\n                        containerElement.removeChild(choicesElement); \r\n                        if (removableContainerClass)\r\n                            containerElement.classList.remove(containerClass);\r\n                        if (isDisposablePicksElementFlag)\r\n                            containerElement.removeChild(picksElement)\r\n                        picksDom.dispose();\r\n                        filterDom.dispose();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","export function CreateElementAspect(createElement, createElementFromHtml, createElementFromHtmlPutAfter){\r\n    return {\r\n        createElement,\r\n        createElementFromHtml,\r\n        createElementFromHtmlPutAfter\r\n    }\r\n}","export function ChoicesVisibilityAspect(choicesElement) {\r\n\r\n    return {\r\n        isChoicesVisible(){ \r\n            return choicesElement.style.display != 'none'},\r\n        setChoicesVisible(visible){\r\n            choicesElement.style.display = visible ? 'block' : 'none';\r\n        },\r\n        updatePopupLocation(){\r\n\r\n        }\r\n    }\r\n}\r\n","export function SpecialPicksEventsAspect(){\r\n    return {\r\n        backSpace(pick){ \r\n            pick.setSelectedFalse(); \r\n        }\r\n    }\r\n}","export function TriggerAspect(element, trigger) {\r\n    return {\r\n        trigger: (eventName) => {\r\n            trigger(element, eventName)\r\n        }\r\n    }\r\n}\r\n\r\nexport function OnChangeAspect(triggerAspect, name) {\r\n    return {\r\n        onChange(){\r\n            triggerAspect.trigger(name)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","export function OptionsAspect(options){\r\n    return {\r\n        getOptions : () => options\r\n    }\r\n}\r\n\r\nexport function OptionPropertiesAspect(getText){\r\n    if (!getText){\r\n        getText = (option) => option.text;\r\n    }\r\n    return {\r\n        getText\r\n    }\r\n}\r\n","export function ChoicesEnumerableAspect(countableChoicesList, getNext){\r\n    return {\r\n        forEach(f){\r\n            let wrap =  countableChoicesList.getHead(); \r\n            while(wrap){\r\n                f(wrap);\r\n                wrap = getNext(wrap);\r\n            }\r\n        }\r\n    }\r\n}","export function NavigateManager(\r\n    list, getPrev, getNext\r\n){\r\n    return {\r\n        navigate(down, wrap /* hoveredChoice */){ \r\n            if (down) {\r\n                return wrap?getNext(wrap): list.getHead();\r\n            } else {\r\n                return wrap?getPrev(wrap): list.getTail();\r\n            }\r\n        },\r\n        getCount(){\r\n            return list.getCount()\r\n        },\r\n        getHead(){\r\n            return list.getHead()\r\n        }\r\n    }\r\n}\r\n\r\nexport function FilterPredicateAspect(){\r\n    return {\r\n        filterPredicate: (wrap, text) => \r\n            wrap.choice.searchText.indexOf(text) >= 0    \r\n    }\r\n}\r\n\r\nexport function FilterManagerAspect(\r\n    emptyNavigateManager,\r\n    filteredNavigateManager,\r\n    filteredChoicesList, \r\n    choicesEnumerableAspect,\r\n    filterPredicateAspect\r\n    ) {\r\n    let showEmptyFilter=true;\r\n    let filterText = \"\";\r\n    return {\r\n        getNavigateManager(){\r\n            return (showEmptyFilter)?emptyNavigateManager:filteredNavigateManager;\r\n        },\r\n        processEmptyInput(){ // redefined in PlaceholderPulgin, HighlightPlugin\r\n            showEmptyFilter =true;\r\n            filterText =\"\";\r\n            choicesEnumerableAspect.forEach( (wrap)=>{\r\n                wrap.choice.setVisible(true);\r\n            });\r\n        },\r\n        getFilter(){\r\n            return filterText;\r\n        },\r\n        setFilter(text){   // redefined in  HighlightPlugin\r\n            showEmptyFilter =false;\r\n            filterText = text;\r\n            filteredChoicesList.reset();\r\n            choicesEnumerableAspect.forEach( (wrap)=>{\r\n                wrap.choice.filteredPrev = wrap.choice.filteredNext = null;\r\n                var v = filterPredicateAspect.filterPredicate(wrap, text)\r\n                if (v)\r\n                    filteredChoicesList.add(wrap);\r\n                wrap.choice.setVisible(v);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","export function BuildAndAttachChoiceAspect(\r\n    buildChoiceAspect,\r\n    ){\r\n    return {\r\n        buildAndAttachChoice(\r\n            wrap,\r\n            getNextElement \r\n            )\r\n        {\r\n            buildChoiceAspect.buildChoice(wrap);\r\n            wrap.choice.choiceElementAttach(getNextElement?.());\r\n        }\r\n    }\r\n}\r\n\r\n                //ProducePickAspect producePick\r\nexport function BuildChoiceAspect(choicesDom, choiceDomFactory, choiceClickAspect) {\r\n    return {\r\n        buildChoice(wrap) {\r\n            var {choiceElement, setVisible, attach, detach} = choicesDom.createChoiceElement();\r\n            wrap.choice.choiceElement = choiceElement;\r\n            wrap.choice.choiceElementAttach = attach;\r\n            wrap.choice.isChoiceElementAttached = true;\r\n            \r\n            let {choiceDom, choiceDomManagerHandlers, dispose} = choiceDomFactory.create(choiceElement, wrap);\r\n            choiceDomManagerHandlers.composeToggle = (event) => choiceClickAspect.choiceClick(wrap);\r\n\r\n            wrap.choice.choiceDom=choiceDom;\r\n            choiceDomManagerHandlers.updateData();\r\n            if (choiceDomManagerHandlers.updateSelected)  \r\n                choiceDomManagerHandlers.updateSelected();\r\n            if (choiceDomManagerHandlers.updateDisabled)  \r\n                choiceDomManagerHandlers.updateDisabled();\r\n            \r\n\r\n            wrap.choice.choiceDomManagerHandlers = choiceDomManagerHandlers;\r\n            \r\n            wrap.choice.remove = () => {\r\n                detach();\r\n            };\r\n            \r\n            wrap.choice.isFilteredIn = true;\r\n            \r\n            wrap.choice.setHoverIn = (v) => {\r\n                wrap.choice.isHoverIn =v ;\r\n                choiceDomManagerHandlers.updateHoverIn();\r\n            }\r\n        \r\n            wrap.choice.setVisible = (v) => {\r\n                wrap.choice.isFilteredIn = v;\r\n                setVisible(wrap.choice.isFilteredIn)\r\n            }\r\n            \r\n            wrap.choice.dispose = () => {\r\n                wrap.choice.choiceDomManagerHandlers.composeToggle=null;\r\n                wrap.choice.choiceDomManagerHandlers = null;\r\n                dispose();\r\n    \r\n                wrap.choice.choiceElement = null;\r\n                wrap.choice.choiceDom = null;\r\n                wrap.choice.choiceElementAttach = null;\r\n                wrap.choice.isChoiceElementAttached = false;\r\n                wrap.choice.remove = null; \r\n        \r\n                // not real data manipulation but internal state\r\n                wrap.choice.setVisible = null; // TODO: refactor it there should be 3 types of not visibility: for hidden, for filtered out, for optgroup, for message item\r\n                wrap.choice.setHoverIn = null;\r\n        \r\n                wrap.choice.dispose = null;\r\n            }\r\n\r\n            wrap.dispose = () => {\r\n                wrap.choice.dispose();\r\n                wrap.dispose = null;\r\n            }\r\n        }\r\n    }\r\n}","export function OptionAttachAspect(createWrapAspect, createChoiceBaseAspect, buildAndAttachChoiceAspect, wraps){\r\n    return {\r\n        attach(option){\r\n            let wrap = createWrapAspect.createWrap(option);\r\n            wrap.choice = createChoiceBaseAspect.createChoiceBase(option);\r\n\r\n            // let optGroup = optGroupAspect.getOptionOptGroup(option);\r\n            // if (prevOptGroup != optGroup){\r\n            //     currentOptGroup = optGroup;\r\n            //     var optGroupWrap = optGroupBuildAspect.wrapAndAttachOptGroupItem(option);\r\n            // }\r\n            // wrap.optGroup = currentOptGroup;\r\n            \r\n            \r\n            wraps.push(wrap); // note: before attach because attach need it for navigation management\r\n            buildAndAttachChoiceAspect.buildAndAttachChoice(wrap);\r\n            //wraps.push(wrap);\r\n        }\r\n    }\r\n}\r\n\r\nexport function OptionsLoopAspect(optionsAspect, optionAttachAspect){ \r\n    return{\r\n        loop(){\r\n            let options = optionsAspect.getOptions();\r\n            for(let i = 0; i<options.length; i++) {\r\n                let option = options[i];\r\n                optionAttachAspect.attach(option);\r\n            } \r\n        }\r\n    }\r\n}","export function UpdateDataAspect(choicesDom, wraps, picksList, optionsLoopAspect, resetLayoutAspect){\r\n    return {\r\n        updateData(){\r\n            // close drop down , remove filter\r\n            resetLayoutAspect.resetLayout();\r\n            choicesDom.choicesListElement.innerHTML = \"\"; // TODO: there should better \"optimization\"\r\n            wraps.clear();\r\n            picksList.forEach(pick=>pick.dispose());\r\n            picksList.reset();\r\n            optionsLoopAspect.loop();\r\n        }\r\n    }\r\n}\r\n\r\nexport function UpdateAspect(updateDataAspect){\r\n    return {\r\n        update(){\r\n            updateDataAspect.updateData();\r\n        }\r\n    }\r\n}","// todo: remove?\r\nexport function ChoiceClickAspect(optionToggleAspect, filterDom){\r\n    return {\r\n        choiceClick: (wrap) => {\r\n            optionToggleAspect.toggle(wrap);\r\n            filterDom.setFocus();\r\n        }\r\n    }\r\n}\r\n\r\n// // fullMatchAspect trySetWrapSelected(fullMatchWrap.option, composeUpdateSelected(fullMatchWrap, true), true);\r\n\r\nexport function OptionToggleAspect(createPickHandlersAspect, addPickAspect /*, setOptionSelectedAspect*/){\r\n    return {\r\n        toggle: (wrap) => {\r\n            let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n            addPickAspect.addPick(wrap, pickHandlers);\r\n            return true; // TODO: process setOptionSelectedAspect\r\n        }\r\n    }\r\n}\r\n\r\nexport function AddPickAspect(){\r\n    return {\r\n        addPick(wrap, pickHandlers){\r\n            return pickHandlers.producePick();\r\n        }\r\n    }\r\n}\r\n\r\nexport function FullMatchAspect(createPickHandlersAspect, addPickAspect){\r\n    return {\r\n        fullMatch(wrap){\r\n            let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n            addPickAspect.addPick(wrap, pickHandlers);\r\n            return true; // TODO: process setOptionSelectedAspect\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function CreateChoiceBaseAspect(optionPropertiesAspect){\r\n    return {\r\n        createChoiceBase(option){\r\n            return {\r\n                    \r\n                //updateDisabled:null,  \r\n                //updateHidden:null,\r\n                \r\n                // navigation and filter support\r\n                filteredPrev: null, \r\n                filteredNext: null, \r\n                searchText: optionPropertiesAspect.getText(option).toLowerCase().trim(), // TODO make an index abstraction\r\n                \r\n                // internal state handlers, so they do not have \"update semantics\"\r\n                isHoverIn: false,\r\n                isFilteredIn: false,\r\n                \r\n                setVisible: null,\r\n                setHoverIn: null,\r\n                \r\n                // TODO: is it a really sense to have them there?\r\n                isChoiceElementAttached: false,\r\n                choiceElement: null,\r\n                choiceDom:null,\r\n                choiceElementAttach: null,\r\n                \r\n                itemPrev: null,\r\n                itemNext: null,\r\n                \r\n                remove: null,\r\n                \r\n                dispose: null\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function CreateWrapAspect(){\r\n    return {\r\n        createWrap(option){\r\n            return {\r\n                option: option\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from './ToolsJs';\r\n\r\n// redefined in SelectedOptionPlugin to compose wrap.updateSelected\r\nexport function CreatePickHandlersAspect(producePickAspect, picksList){ \r\n    return{\r\n        createPickHandlers(wrap){\r\n            var pickHandlers = { \r\n                producePick: null,  // not redefined directly, but redefined in addPickAspect\r\n                removeAndDispose: null,  // not redefined, used in MultiSelectInlineLayout injected into wrap.choice.remove \r\n            }\r\n            \r\n            pickHandlers.producePick = () => {\r\n                let pick = producePickAspect.producePick(wrap);\r\n                let {remove: removeFromPicksList} = picksList.add(pick);\r\n                pick.dispose = composeSync(removeFromPicksList, pick.dispose);\r\n                pickHandlers.removeAndDispose = () => pick.dispose();\r\n                return pick;\r\n            }\r\n            return pickHandlers;\r\n        }\r\n    }\r\n}","export function ProducePickAspect(picksDom, pickDomFactory){\r\n    return {\r\n        // overrided by DisableOptionPlugin\r\n        producePick(wrap){\r\n            let {pickElement, attach, detach} = picksDom.createPickElement(); \r\n            let pickDom = {pickElement};\r\n            let pickDomManagerHandlers = {attach};\r\n            \r\n            let pick = {\r\n                wrap,\r\n                pickDom,\r\n                pickDomManagerHandlers,\r\n                \r\n                dispose: () => { \r\n                    detach();\r\n                    pickDom.pickElement=null;\r\n                    pickDomManagerHandlers.attach=null;\r\n                    pick.wrap=null;\r\n                    pick.pickDom=null;\r\n                    pick.pickDomManagerHandlers=null;\r\n                }\r\n            }\r\n\r\n            wrap.pick=pick;\r\n            pickDomFactory.create(pick); \r\n                \r\n            pick.pickDomManagerHandlers.attach();\r\n\r\n            return pick;\r\n        } \r\n    }\r\n}","export function HoveredChoiceAspect(){\r\n    let hoveredChoice=null;\r\n    return {\r\n        getHoveredChoice: () => hoveredChoice,\r\n        setHoveredChoice: (wrap) => {hoveredChoice = wrap},\r\n        resetHoveredChoice() {\r\n            if (hoveredChoice) {\r\n                hoveredChoice.choice.setHoverIn(false)\r\n                hoveredChoice = null;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function NavigateAspect(hoveredChoiceAspect, navigate){\r\n    return {\r\n        hoverIn(wrap){\r\n            hoveredChoiceAspect.resetHoveredChoice(); \r\n            hoveredChoiceAspect.setHoveredChoice(wrap);\r\n            wrap.choice.setHoverIn(true);\r\n        },\r\n        navigate: (down) => navigate(down, hoveredChoiceAspect.getHoveredChoice()), \r\n    }\r\n}","export function Wraps(wrapsCollection,  \r\n    listFacade_reset, listFacade_remove, listFacade_add) \r\n{\r\n    return {\r\n        push: (wrap) => push(wrap, wrapsCollection, listFacade_add),\r\n        insert: (key, wrap) => insert(key, wrap, wrapsCollection, listFacade_add),\r\n        remove: (key) => {\r\n            var wrap = wrapsCollection.remove(key);\r\n            listFacade_remove(wrap);\r\n            return wrap;\r\n        },\r\n        clear: () => {\r\n            wrapsCollection.reset();\r\n            listFacade_reset();\r\n        }, \r\n        dispose: () => wrapsCollection.forLoop(wrap => wrap.dispose()) \r\n    }\r\n}\r\n\r\nfunction push(wrap, wrapsCollection, listFacade_add){\r\n    wrapsCollection.push(wrap);\r\n    listFacade_add(wrap);\r\n}\r\n\r\nfunction insert(key, wrap, wrapsCollection, listFacade_add){\r\n    if (key>=wrapsCollection.getCount()) {\r\n        push(wrap, wrapsCollection, listFacade_add);\r\n    }\r\n    else {\r\n        wrapsCollection.add(wrap, key);\r\n        listFacade_add(wrap, key);\r\n    }\r\n}","export function InputAspect(\r\n    filterDom,\r\n    filterManagerAspect,\r\n    fullMatchAspect\r\n    ){\r\n\r\n    return {\r\n        // overrided in SelectedOptionPlugin\r\n        processInput(){ \r\n            let filterInputValue = filterDom.getValue();\r\n            let text = filterInputValue.trim();\r\n            var isEmpty=false;\r\n            if (text == '')\r\n                isEmpty=true;\r\n            else\r\n            {\r\n                filterManagerAspect.setFilter(text.toLowerCase());\r\n            }\r\n            \r\n            if (!isEmpty)\r\n            {\r\n                if ( filterManagerAspect.getNavigateManager().getCount() == 1)\r\n                {\r\n                    // todo: move exact match to filterManager\r\n                    let fullMatchWrap =  filterManagerAspect.getNavigateManager().getHead();\r\n                    let text = filterManagerAspect.getFilter();\r\n                    if (fullMatchWrap.choice.searchText == text)\r\n                    {\r\n                        let success = fullMatchAspect.fullMatch(fullMatchWrap); \r\n                        if (success) {\r\n                            filterDom.setEmpty();\r\n                            isEmpty = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {filterInputValue, isEmpty};\r\n        }\r\n    }\r\n}","export function ResetFilterListAspect(filterDom, filterManagerAspect){\r\n    return {\r\n        forceResetFilter(){  // over in PlaceholderPlugin\r\n            filterDom.setEmpty();\r\n            filterManagerAspect.processEmptyInput(); // over in PlaceholderPlugin\r\n        }\r\n    }\r\n}\r\n\r\nexport function ResetFilterAspect(filterDom, resetFilterListAspect){\r\n    return {\r\n        resetFilter(){ // call in OptionsApiPlugin\r\n            if (!filterDom.isEmpty())  // call in Placeholder\r\n                resetFilterListAspect.forceResetFilter(); // over in Placeholder\r\n        }\r\n    }\r\n}\r\n\r\nexport function FocusInAspect(picksDom){\r\n    return {\r\n        setFocusIn(focus){ // call in OptionsApiPlugin\r\n            picksDom.setIsFocusIn(focus) // unique call, call BsAppearancePlugin\r\n            picksDom.toggleFocusStyling() // over BsAppearancePlugin\r\n        }\r\n    }\r\n}\r\n\r\n","import {composeSync} from './ToolsJs';\r\nimport {EventBinder, EventLoopProlongableFlag, EventTumbler, containsAndSelf} from './ToolsDom'\r\n\r\nexport function MultiSelectInlineLayoutAspect (\r\n        environment, filterDom, choicesDom, \r\n        choicesVisibilityAspect, \r\n        hoveredChoiceAspect, navigateAspect, filterManagerAspect,\r\n        focusInAspect, optionToggleAspect,\r\n        createPickHandlersAspect,\r\n        picksList,\r\n        inputAspect, specialPicksEventsAspect,  buildChoiceAspect, \r\n        resetLayoutAspect,\r\n        picksElementAspect,\r\n        \r\n        afterInputAspect,\r\n        disposeAspect,\r\n        pickDomFactory\r\n    ) \r\n{\r\n    \r\n    //return  \r\n    let choicesElement = choicesDom.choicesElement;\r\n    var window = environment.window;\r\n    var document = window.document;\r\n    var eventLoopFlag =EventLoopProlongableFlag(window); \r\n    var skipFocusout = false; // state\r\n    \r\n    function getSkipFocusout() {\r\n        return skipFocusout;\r\n    };\r\n    function resetSkipFocusout() {\r\n        skipFocusout = false;\r\n    };\r\n    function setSkipFocusout() {\r\n        skipFocusout = true;\r\n    };\r\n\r\n    // we want to escape the closing of the menu (because of focus out from) on a user's click inside the container\r\n    var skipoutMousedown = function() {\r\n        setSkipFocusout();\r\n    }\r\n\r\n    // add listeners that manages close dropdown on  click outside container\r\n    var choicesElementMousedownEventTumbler = EventTumbler(choicesElement, \"mousedown\", skipoutMousedown);\r\n    var documentMouseupEventTumbler = EventTumbler(document, \"mouseup\", documentMouseup);\r\n\r\n    var documentMouseup = function(event) {\r\n        // if we would left without focus then \"close the drop\" do not remove focus border\r\n        if (choicesElement == event.target) \r\n            filterDom.setFocus()\r\n\r\n        // if click outside container - close dropdown\r\n        else if ( !containsAndSelf(choicesElement, event.target) && !picksElementAspect.containsAndSelf(event.target)) {\r\n            resetLayoutAspect.resetLayout();\r\n            focusInAspect.setFocusIn(false);\r\n        }\r\n    }\r\n\r\n    function showChoices() {\r\n        if ( !choicesVisibilityAspect.isChoicesVisible() )\r\n        {\r\n            choicesVisibilityAspect.updatePopupLocation();\r\n            eventLoopFlag.set();\r\n            choicesVisibilityAspect.setChoicesVisible(true);\r\n            \r\n            // TODO: move to scroll plugin\r\n            choicesElement.scrollTop = 0;\r\n            \r\n            choicesElementMousedownEventTumbler.on();\r\n            documentMouseupEventTumbler.on();\r\n        }\r\n    }\r\n\r\n    function hideChoices() {\r\n        resetMouseCandidateChoice();\r\n        hoveredChoiceAspect.resetHoveredChoice();\r\n        if (choicesVisibilityAspect.isChoicesVisible())\r\n        {\r\n            // COOMENT OUT DEBUGGING popup layout\r\n            choicesVisibilityAspect.setChoicesVisible(false);\r\n            \r\n            choicesElementMousedownEventTumbler.off();\r\n            documentMouseupEventTumbler.off();\r\n        }\r\n    }\r\n\r\n    var preventDefaultClickEvent = null; // state\r\n    function setPreventDefaultClickEvent(event){\r\n        preventDefaultClickEvent=event;\r\n    }\r\n\r\n    // TODO: remove setTimeout: set on start of mouse event reset on end\r\n    function skipoutAndResetMousedown(){\r\n        skipoutMousedown();\r\n        window.setTimeout(()=>resetSkipFocusout());\r\n    }\r\n\r\n\r\n    // function composeOnRemoveButtonEventHandler(onRemove, setSelectedFalse){\r\n    //     // processRemoveButtonClick removes the item\r\n    //     // what is a problem with calling 'remove' directly (not using  setTimeout('remove', 0)):\r\n    //     // consider situation \"MultiSelect\" on DROPDOWN (that should be closed on the click outside dropdown)\r\n    //     // therefore we aslo have document's click's handler where we decide to close or leave the DROPDOWN open.\r\n    //     // because of the event's bubling process 'remove' runs first. \r\n    //     // that means the event's target element on which we click (the x button) will be removed from the DOM together with badge \r\n    //     // before we could analize is it belong to our dropdown or not.\r\n    //     // important 1: we can't just the stop propogation using stopPropogate because click outside dropdown on the similar \r\n    //     // component that use stopPropogation will not close dropdown (error, dropdown should be closed)\r\n    //     // important 2: we can't change the dropdown's event handler to leave dropdown open if event's target is null because of\r\n    //     // the situation described above: click outside dropdown on the same component.\r\n    //     // Alternatively it could be possible to use stopPropogate but together create custom click event setting new target \r\n    //     // that belomgs to DOM (e.g. panel)\r\n\r\n\r\n    //     onRemove(event => {\r\n    //         processUncheck(setSelectedFalse, event);\r\n    //         hideChoices();\r\n    //         resetFilterAspect.resetFilter(); \r\n    //     });\r\n    // }\r\n    \r\n    // we can't remove item on \"click\" in the same loop iteration - it is unfrendly for 3PP event handlers (they will get detached element)\r\n    // never remove elements in the same event iteration\r\n\r\n    function composeOnRemoveButtonEventHandler(removeOnButton){ return (event) => {\r\n        window.setTimeout(()=>removeOnButton(event))\r\n        \r\n        setPreventDefaultClickEvent(event); \r\n        resetLayoutAspect.resetLayout(); \r\n    }}\r\n    \r\n    let mouseCandidateEventBinder = EventBinder();\r\n    var resetMouseCandidateChoice = () => {\r\n        mouseCandidateEventBinder.unbind();\r\n    };\r\n\r\n    var mouseOverToHoveredAndReset = (wrap) => {\r\n        \r\n        if (!wrap.choice.isHoverIn)\r\n            navigateAspect.hoverIn(wrap);\r\n        resetMouseCandidateChoice();\r\n    };\r\n \r\n    function adoptChoiceElement(wrap){\r\n        let choiceElement = wrap.choice.choiceElement;\r\n        // in chrome it happens on \"become visible\" so we need to skip it, \r\n        // for IE11 and edge it doesn't happens, but for IE11 and Edge it doesn't happens on small \r\n        // mouse moves inside the item. \r\n        // https://stackoverflow.com/questions/59022563/browser-events-mouseover-doesnt-happen-when-you-make-element-visible-and-mous\r\n        \r\n        var onChoiceElementMouseover = () => \r\n        {\r\n            if (eventLoopFlag.get() )\r\n            {\r\n                resetMouseCandidateChoice();\r\n                mouseCandidateEventBinder.bind(choiceElement, 'mousemove', ()=>mouseOverToHoveredAndReset(wrap));\r\n                mouseCandidateEventBinder.bind(choiceElement, 'mousedown', ()=>mouseOverToHoveredAndReset(wrap));\r\n            }\r\n            else\r\n            {\r\n                if (!wrap.choice.isHoverIn)\r\n                {\r\n                    // NOTE: mouseleave is not enough to guarantee remove hover styles in situations\r\n                    // when style was setuped without mouse (keyboard arrows)\r\n                    // therefore force reset manually (done inside hoverIn)\r\n                    navigateAspect.hoverIn(wrap);\r\n                }   \r\n            }\r\n        }\r\n        \r\n        // note 1: mouseleave preferred to mouseout - which fires on each descendant\r\n        // note 2: since I want add aditional info panels to the dropdown put mouseleave on dropdwon would not work\r\n        var onChoiceElementMouseleave = () => {\r\n            if (!eventLoopFlag.get()) {\r\n                hoveredChoiceAspect.resetHoveredChoice();\r\n            }\r\n        }\r\n        var overAndLeaveEventBinder = EventBinder();\r\n        overAndLeaveEventBinder.bind(choiceElement, 'mouseover',  onChoiceElementMouseover);\r\n        overAndLeaveEventBinder.bind(choiceElement, 'mouseleave', onChoiceElementMouseleave);\r\n\r\n        return overAndLeaveEventBinder.unbind;\r\n    }\r\n\r\n    \r\n\r\n\r\n    // it can be initated by 3PP functionality\r\n    // sample (1) BS functionality - input x button click - clears input\r\n    // sample (2) BS functionality - esc keydown - clears input\r\n    // and there could be difference in processing: (2) should hide the menu, then reset , when (1) should just reset without hiding.\r\n\r\n    function afterInput(){\r\n        let visibleCount = filterManagerAspect.getNavigateManager().getCount();\r\n\r\n        if (visibleCount > 0){\r\n            afterInputAspect.visible(showChoices, visibleCount);\r\n        }else{\r\n            afterInputAspect.notVisible(hideChoices);\r\n        }\r\n    }\r\n\r\n    function keyDownArrow(down) {\r\n        let wrap = navigateAspect.navigate(down);  \r\n        if (wrap)\r\n        {\r\n            // TODO: next line should be moved to planned  \"HeightAndScroll\" plugin, actual only for scrolling with keyDown functionality\r\n            eventLoopFlag.set(400); // means disable mouse handlers that set hovered choice item; arrowDown can intiate scrolling when scrolling can itiate mouse leave on hovered item; this stops it\r\n            navigateAspect.hoverIn(wrap); // !\r\n            showChoices(); \r\n        }\r\n    }\r\n\r\n    function hoveredToSelected(){\r\n        let hoveredWrap = hoveredChoiceAspect.getHoveredChoice(); \r\n        if (hoveredWrap){\r\n            let wasToggled = optionToggleAspect.toggle(hoveredWrap); \r\n            if (wasToggled) {\r\n                resetLayoutAspect.resetLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: bind it more declarative way? (compact code)\r\n    var onKeyDown = (event) => {\r\n        let keyCode = event.which;\r\n        var empty = filterDom.isEmpty();\r\n        if ([ 13,\r\n              27  // '27-esc' there is \"just in case\", I can imagine that there are user agents that do UNDO\r\n            ].indexOf(keyCode)>=0 \r\n            || (keyCode == 9 && !empty) //  otherwice there are no keyup (true at least for '9-tab'),\r\n            ) {\r\n                event.preventDefault(); \r\n            \r\n            // '13-enter'  - prevention against form's default button \r\n            // but doesn't help with bootsrap modal ESC or ENTER (close behaviour);\r\n        }\r\n        if ([ 38, 40 ].indexOf(keyCode) >= 0 )\r\n            event.preventDefault(); \r\n        if (keyCode == 8 /*backspace*/) {\r\n            // NOTE: this will process backspace only if there are no text in the input field\r\n            // If user will find this inconvinient, we will need to calculate something like this\r\n            // let isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n            if (empty) {\r\n                let pick = picksList.getTail();\r\n                if (pick){ \r\n                    specialPicksEventsAspect.backSpace(pick);\r\n                }\r\n            }\r\n        }\r\n        // ---------------------------------------------------------------------------------\r\n        // NOTE: no preventDefault called in case of empty for 9-tab\r\n        else if (keyCode == 9  /*tab*/) { // NOTE: no keydown for this (without preventDefaul after TAB keyup event will be targeted another element)  \r\n            if (empty) { \r\n                hideChoices();  // hideChoices inside (and no filter reset since it is empty) \r\n            }\r\n        }\r\n        else if (keyCode == 27 /*esc*/ ) { // NOTE: forbid the ESC to close the modal (in case the nonempty or dropdown is open)\r\n            if (!empty  || choicesVisibilityAspect.isChoicesVisible())\r\n                event.stopPropagation()\r\n        }\r\n        else if (keyCode == 38) {\r\n            keyDownArrow(false); // up\r\n        }\r\n        else if (keyCode == 40) {\r\n            keyDownArrow(true); // down\r\n        }\r\n    }\r\n    var onKeyUp = (event) => {\r\n        let keyCode = event.which;\r\n        //var handler = keyUp[event.which/* key code */];\r\n        //handler();    \r\n        if (keyCode == 9 /*tab*/) {\r\n            if (choicesVisibilityAspect.isChoicesVisible()) {\r\n                keyDownArrow(true);\r\n            } else {\r\n                if (filterManagerAspect.getNavigateManager().getCount()>0){\r\n                    showChoices();\r\n                }\r\n            }\r\n        }\r\n        else if (keyCode == 13 ) {\r\n            if (choicesVisibilityAspect.isChoicesVisible()) {\r\n                hoveredToSelected();\r\n            } else {\r\n                if (filterManagerAspect.getNavigateManager().getCount()>0){\r\n                    showChoices();\r\n                }\r\n            }\r\n        }\r\n        else if (keyCode == 27) { // escape\r\n            // is it always empty (bs x can still it) \r\n            resetLayoutAspect.resetLayout();\r\n        }\r\n    }\r\n\r\n    function clickToShowChoices(event){\r\n        filterDom.setFocusIfNotTarget(event.target);\r\n        if (preventDefaultClickEvent != event) {\r\n            if (choicesVisibilityAspect.isChoicesVisible()){\r\n                hideChoices() \r\n            } else {\r\n                if (filterManagerAspect.getNavigateManager().getCount()>0)\r\n                    showChoices();\r\n            }\r\n        }\r\n        preventDefaultClickEvent=null;\r\n    }\r\n\r\n    return {\r\n        layout(){\r\n            filterDom.onFocusIn(()=>focusInAspect.setFocusIn(true));\r\n            filterDom.onFocusOut(() => { \r\n                    if (!getSkipFocusout()){ // skip initiated by mouse click (we manage it different way)\r\n                        resetLayoutAspect.resetLayout(); // if do not do this we will return to filtered list without text filter in input\r\n                        focusInAspect.setFocusIn(false);\r\n                    }\r\n                    resetSkipFocusout();\r\n                }\r\n            );\r\n                \r\n            filterDom.onInput(() => {\r\n                let {filterInputValue, isEmpty} = inputAspect.processInput();\r\n                if (isEmpty)\r\n                    filterManagerAspect.processEmptyInput();\r\n                else\r\n                    filterDom.setWidth(filterInputValue);  \r\n                eventLoopFlag.set(); // means disable mouse handlers that set hovered item; otherwise we will get \"Hover On MouseEnter\" when filter's changes should remove hover\r\n                afterInput();\r\n            });    \r\n            filterDom.onKeyDown(onKeyDown);    \r\n            filterDom.onKeyUp(onKeyUp);\r\n                \r\n            picksElementAspect.onClick(clickToShowChoices);\r\n            picksElementAspect.onMousedown(skipoutAndResetMousedown);\r\n        \r\n            resetLayoutAspect.resetLayout = composeSync(\r\n                hideChoices,\r\n                resetLayoutAspect.resetLayout // resetFilter by default\r\n            );\r\n        \r\n            var origCreatePickDomFactory = pickDomFactory.create;\r\n            pickDomFactory.create = (pick) => {\r\n                origCreatePickDomFactory(pick);\r\n                if (pick.removeOnButton){\r\n                    var origRemoveOnButton = pick.removeOnButton;\r\n                    pick.removeOnButton = composeOnRemoveButtonEventHandler(origRemoveOnButton);\r\n                }\r\n            }\r\n            \r\n            \r\n            let origBuildChoice = buildChoiceAspect.buildChoice;\r\n            buildChoiceAspect.buildChoice = (wrap) => {\r\n                origBuildChoice(wrap);\r\n                let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n        \r\n                wrap.choice.remove = composeSync(wrap.choice.remove, () => {\r\n                    if (pickHandlers.removeAndDispose) {\r\n                        pickHandlers.removeAndDispose();\r\n                        pickHandlers.removeAndDispose=null;\r\n                    }\r\n                })\r\n                \r\n                let unbindChoiceElement = adoptChoiceElement(wrap);\r\n                wrap.choice.dispose = composeSync(unbindChoiceElement, wrap.choice.dispose);\r\n            }\r\n\r\n            disposeAspect.dispose = composeSync(disposeAspect.dispose, resetMouseCandidateChoice, () => picksElementAspect.unbind() );\r\n        }\r\n    }\r\n}\r\n","export function ResetLayoutAspect(resetFilterAspect){\r\n    return {\r\n        resetLayout(){\r\n            resetFilterAspect.resetFilter();\r\n        }\r\n    }\r\n}","\r\nexport function LoadAspect(optionsLoopAspect){\r\n    return{\r\n        load(){  // redriven in AppearancePlugin, FormRestoreOnBackwardPlugin\r\n            optionsLoopAspect.loop();\r\n        }\r\n    }\r\n}","export function CountableChoicesListInsertAspect(countableChoicesList, wrapsCollection){\r\n    return {\r\n        countableChoicesListInsert(wrap, key){\r\n            let choiceNext = wrapsCollection.getNext(key);\r\n            countableChoicesList.add(wrap, choiceNext)\r\n        }\r\n    }\r\n}","import {EventBinder, containsAndSelf} from './ToolsDom';\r\n\r\nexport function PicksElementAspect(picksElement){\r\n    var componentDisabledEventBinder = EventBinder();\r\n    var skipoutAndResetMousedownEventBinder = EventBinder();\r\n    return {\r\n        containsAndSelf(element){\r\n            return containsAndSelf(picksElement, element);\r\n        },\r\n        onClickUnbind(){\r\n            componentDisabledEventBinder.unbind();\r\n        },\r\n        onClick(handler){\r\n            componentDisabledEventBinder.bind(picksElement, \"click\",  handler);\r\n        },\r\n        onMousedown(handler){\r\n            skipoutAndResetMousedownEventBinder.bind(picksElement, \"mousedown\",  handler);\r\n        },\r\n        unbind(){\r\n            skipoutAndResetMousedownEventBinder.unbind();\r\n            componentDisabledEventBinder.unbind();\r\n        }\r\n    }\r\n}","export function AfterInputAspect(filterManagerAspect, navigateAspect, choicesVisibilityAspect, hoveredChoiceAspect){\r\n    return {\r\n        visible(showChoices, visibleCount){\r\n            let panelIsVisble = choicesVisibilityAspect.isChoicesVisible();\r\n            if (!panelIsVisble) {\r\n                  showChoices(); \r\n            }\r\n            if (visibleCount == 1) {\r\n                navigateAspect.hoverIn(filterManagerAspect.getNavigateManager().getHead())\r\n            } else {\r\n                if (panelIsVisble)\r\n                    hoveredChoiceAspect.resetHoveredChoice();\r\n            }   \r\n        },\r\n        notVisible(hideChoices){\r\n            if (choicesVisibilityAspect.isChoicesVisible()){\r\n                hideChoices();\r\n            }\r\n        }\r\n    }\r\n}","export function ShowErrorAspect(initialDom, createElementAspect){\r\n    return {\r\n        showError(error){\r\n            let errorElement = createElementAspect.createElement('SPAN'); \r\n            errorElement.style.backgroundColor = 'red';\r\n            errorElement.style.color = 'white';\r\n            errorElement.style.block = 'inline-block';\r\n            errorElement.style.padding = '0.2rem 0.5rem';\r\n            errorElement.textContent = 'BsMultiSelect ' + error.toString();\r\n            initialDom.initialElement.parentNode.insertBefore(errorElement, initialDom.initialElement.nextSibling)\r\n        }\r\n    }\r\n}","import {composeSync, List} from './ToolsJs';\r\nimport {PickDomFactory} from './PickDomFactory';\r\nimport {ChoiceDomFactory} from './ChoiceDomFactory';\r\n\r\nimport {StaticDomFactory} from './StaticDomFactory';\r\n\r\nimport {CreateElementAspect} from './CreateElementAspect';\r\n\r\nimport {PicksDomFactory} from './PicksDomFactory';\r\nimport {FilterDomFactory} from './FilterDomFactory';\r\n\r\nimport {ChoicesDomFactory} from './ChoicesDomFactory';\r\nimport {ChoicesVisibilityAspect} from './ChoicesVisibilityAspect';\r\nimport {SpecialPicksEventsAspect} from './SpecialPicksEventsAspect';\r\n \r\nimport {TriggerAspect, OnChangeAspect} from './OnChangeAspect';\r\nimport {OptionsAspect, OptionPropertiesAspect} from './OptionsAspect';\r\n\r\nimport {ChoicesEnumerableAspect } from './ChoicesEnumerableAspect'\r\nimport {FilterManagerAspect, NavigateManager, FilterPredicateAspect} from './FilterManagerAspect'\r\nimport {BuildAndAttachChoiceAspect, BuildChoiceAspect} from './BuildChoiceAspect'\r\nimport {OptionsLoopAspect, OptionAttachAspect} from './OptionsLoopAspect'\r\n\r\nimport {UpdateDataAspect } from './UpdateDataAspect'\r\nimport {UpdateAspect } from './UpdateDataAspect'\r\nimport {CreateWrapAspect, CreateChoiceBaseAspect, OptionToggleAspect, \r\n    AddPickAspect, FullMatchAspect, ChoiceClickAspect} from './CreateWrapAspect'\r\nimport {CreatePickHandlersAspect} from './CreatePickHandlersAspect'\r\nimport {ProducePickAspect} from './ProducePickAspect'\r\nimport {NavigateAspect, HoveredChoiceAspect} from './NavigateAspect'\r\nimport {Wraps} from './Wraps'\r\n\r\nimport {AppendAspect} from './AppendAspect'\r\n\r\n\r\nimport {InputAspect} from './InputAspect'\r\nimport {ResetFilterAspect, FocusInAspect, ResetFilterListAspect} from './ResetFilterListAspect'\r\n\r\nimport {MultiSelectInlineLayoutAspect} from './MultiSelectInlineLayoutAspect'\r\n\r\nimport {ResetLayoutAspect} from './ResetLayoutAspect'\r\n\r\nimport {LoadAspect} from './LoadAspect'\r\nimport {DoublyLinkedList, ArrayFacade} from './ToolsJs'\r\nimport {CountableChoicesListInsertAspect} from './CountableChoicesListInsertAspect'\r\n\r\nimport {PicksElementAspect} from './PicksElementAspect'\r\nimport {AfterInputAspect} from './AfterInputAspect'\r\n\r\nimport {ShowErrorAspect} from './ShowErrorAspect'\r\n\r\n/// environment - common for many; configuration for concreate\r\nexport function BsMultiSelect(element, environment, pluginManager, configuration){\r\n    let { css, \r\n          options, \r\n          getText,\r\n          containerClass\r\n        } = configuration;\r\n    \r\n    let initialDom = {initialElement: element};\r\n    let createElementAspect = CreateElementAspect(\r\n        name => environment.window.document.createElement(name), \r\n        (element, html) => element.innerHTML = html ,\r\n        (element, html) => {\r\n            var newElement = new environment.window.DOMParser().parseFromString(html, 'text/html').body.children[0]; \r\n            element.parentNode.insertBefore(newElement, element.nextSibling);\r\n        });\r\n        \r\n    let showErrorAspect = ShowErrorAspect(initialDom, createElementAspect);\r\n    try{\r\n        \r\n        let picksDomFactory   = PicksDomFactory  (css, createElementAspect);\r\n        let filterDomFactory  = FilterDomFactory (css, createElementAspect);\r\n        let choicesDomFactory = ChoicesDomFactory(css, createElementAspect);\r\n\r\n        let staticDomFactory  = StaticDomFactory(\r\n            createElementAspect, choicesDomFactory, filterDomFactory, picksDomFactory, initialDom, containerClass\r\n        );\r\n\r\n        let eventHandlers =  pluginManager.createHandlers();\r\n        \r\n        let disposeAspect = {dispose(){}};\r\n        let triggerAspect = TriggerAspect(element, environment.trigger);\r\n        let onChangeAspect = OnChangeAspect(triggerAspect, 'dashboardcode.multiselect:change');\r\n        \r\n        let optionsAspect = OptionsAspect(options); \r\n\r\n        eventHandlers.dom({\r\n            configuration, \r\n            initialDom, createElementAspect, showErrorAspect,\r\n            \r\n            onChangeAspect, triggerAspect, \r\n            optionsAspect, disposeAspect, \r\n            staticDomFactory, choicesDomFactory, filterDomFactory, picksDomFactory,\r\n            \r\n        });\r\n\r\n        // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\r\n\r\n        //let choicesDom = choicesDomFactory.create();\r\n\r\n        let {staticDom,\r\n\r\n            choicesDom,\r\n            filterDom,\r\n            picksDom,\r\n            \r\n            staticManager} = staticDomFactory.createStaticDom(); // overrided in SelectElementPlugin\r\n\r\n                            // let isDisposablePicksElementFlag=false;\r\n            // if (!picksElement) {\r\n            //     picksElement = createElementAspect.createElement('UL');\r\n            //     isDisposablePicksElementFlag = true; \r\n            // }\r\n            \r\n\r\n        // let picksDom  = picksDomFactory.create(staticManager.picksElement, staticManager.isDisposablePicksElementFlag);\r\n        // let filterDom = filterDomFactory.create(staticManager.isDisposablePicksElementFlag);\r\n\r\n        // containerElement.appendChild(choicesElement); \r\n        \r\n        // picksDom.pickFilterElement.appendChild(filterDom.filterInputElement);\r\n        // picksDom.picksElement.appendChild(picksDom.pickFilterElement); \r\n\r\n        // choicesElement.parentNode.removeChild(choicesElement); // select\r\n        // //containerElement.removeChild(choicesElement);  // no select\r\n        // picksDom.dispose();\r\n        // filterDom.dispose();\r\n\r\n        // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\r\n\r\n        let optionPropertiesAspect = OptionPropertiesAspect(getText);\r\n\r\n        let pickDomFactory    = PickDomFactory   (css, createElementAspect, optionPropertiesAspect); // overrided in CustomPickStylingsPlugin, DisableComponentPlugin\r\n        let choiceDomFactory  = ChoiceDomFactory (css, createElementAspect, optionPropertiesAspect); // overrided in CustomChoicesStylingsPlugin, HighlightPlugin\r\n\r\n        let createWrapAspect       = CreateWrapAspect();\r\n        let createChoiceBaseAspect = CreateChoiceBaseAspect(optionPropertiesAspect);\r\n        \r\n        let addPickAspect = AddPickAspect();\r\n\r\n        let wrapsCollection = ArrayFacade();\r\n\r\n        let countableChoicesList = DoublyLinkedList(\r\n            (wrap)=>wrap.choice.itemPrev, \r\n            (warp, v)=>warp.choice.itemPrev=v, \r\n            (wrap)=>wrap.choice.itemNext, \r\n            (wrap, v)=>wrap.choice.itemNext=v\r\n        );\r\n        \r\n        let countableChoicesListInsertAspect = CountableChoicesListInsertAspect(countableChoicesList, wrapsCollection);\r\n\r\n        let choicesEnumerableAspect = ChoicesEnumerableAspect(countableChoicesList, wrap=>wrap.choice.itemNext)\r\n        \r\n        let filteredChoicesList = DoublyLinkedList(\r\n            (wrap)=>wrap.choice.filteredPrev, \r\n            (wrap, v)=>wrap.choice.filteredPrev=v, \r\n            (wrap)=>wrap.choice.filteredNext, \r\n            (wrap, v)=>wrap.choice.filteredNext=v\r\n        );\r\n        \r\n        let emptyNavigateManager = NavigateManager(\r\n            countableChoicesList,\r\n            (wrap)=>wrap.choice.itemPrev,\r\n            (wrap)=>wrap.choice.itemNext \r\n\r\n        ); \r\n        let filteredNavigateManager = NavigateManager(\r\n            filteredChoicesList, \r\n            (wrap)=>wrap.choice.filteredPrev,\r\n            (wrap)=>wrap.choice.filteredNext ); \r\n\r\n        let filterPredicateAspect = FilterPredicateAspect()\r\n\r\n        let filterManagerAspect = FilterManagerAspect(\r\n            emptyNavigateManager,\r\n            filteredNavigateManager,\r\n\r\n            filteredChoicesList, \r\n            choicesEnumerableAspect,\r\n            filterPredicateAspect\r\n        );\r\n\r\n        let hoveredChoiceAspect = HoveredChoiceAspect()\r\n        let navigateAspect = NavigateAspect(hoveredChoiceAspect, \r\n            (down, hoveredChoice)=>filterManagerAspect.getNavigateManager().navigate(down, hoveredChoice));\r\n\r\n        let picksList = List(); // !!!!!!!!!!\r\n        let wraps = Wraps(\r\n            wrapsCollection,\r\n            () =>countableChoicesList.reset(), \r\n            (w)=>countableChoicesList.remove(w),\r\n            (w, key)=>countableChoicesListInsertAspect.countableChoicesListInsert(w, key)); // !!!!!!!!!!!\r\n\r\n        // TODO: union to events or create event bus\r\n        eventHandlers.plugStaticDom({\r\n            environment, \r\n            pickDomFactory, choiceDomFactory, \r\n            countableChoicesList, countableChoicesListInsertAspect, optionPropertiesAspect, \r\n            wrapsCollection, choicesEnumerableAspect, filteredChoicesList, \r\n            filterPredicateAspect, \r\n            hoveredChoiceAspect, navigateAspect, \r\n            filterManagerAspect,\r\n            createWrapAspect, createChoiceBaseAspect, \r\n            picksList, wraps, addPickAspect\r\n        }); // apply selectElement support;  \r\n\r\n        // TODO: to staticManager\r\n        //let {staticManager, staticDom, filterDom, picksDom, choicesDom} = staticDomFactory.createStaticDom(); // overrided in SelectElementPlugin\r\n\r\n        // after this we can use staticDom (means generated DOM elements) in plugin construtctor, what simplifies parameters passing a lot   \r\n\r\n        let specialPicksEventsAspect = SpecialPicksEventsAspect();\r\n\r\n        let choicesVisibilityAspect = ChoicesVisibilityAspect(choicesDom.choicesElement);\r\n        let resetFilterListAspect = ResetFilterListAspect(filterDom, filterManagerAspect);\r\n        let resetFilterAspect =  ResetFilterAspect(filterDom, resetFilterListAspect);\r\n\r\n        let focusInAspect = FocusInAspect(picksDom);\r\n        \r\n        let producePickAspect = ProducePickAspect(picksDom, pickDomFactory);\r\n        let createPickHandlersAspect = CreatePickHandlersAspect(producePickAspect, picksList);\r\n        \r\n        let optionToggleAspect  = OptionToggleAspect(createPickHandlersAspect, addPickAspect);\r\n\r\n        let fullMatchAspect = FullMatchAspect(createPickHandlersAspect, addPickAspect);\r\n        let inputAspect = InputAspect(filterDom, filterManagerAspect, fullMatchAspect);    \r\n        \r\n        \r\n        \r\n        let choiceClickAspect = ChoiceClickAspect(optionToggleAspect, filterDom);\r\n        \r\n        let buildChoiceAspect = BuildChoiceAspect(choicesDom, choiceDomFactory, choiceClickAspect);\r\n        \r\n        let buildAndAttachChoiceAspect =  BuildAndAttachChoiceAspect(buildChoiceAspect);\r\n        let resetLayoutAspect = ResetLayoutAspect(resetFilterAspect); //!!!!!!!!!\r\n        //createWrapAspect, createChoiceBaseAspect, buildAndAttachChoiceAspect, wraps\r\n        let optionAttachAspect = OptionAttachAspect(createWrapAspect, createChoiceBaseAspect, buildAndAttachChoiceAspect, wraps);\r\n        let optionsLoopAspect = OptionsLoopAspect(optionsAspect, optionAttachAspect);\r\n\r\n        let updateDataAspect = UpdateDataAspect(choicesDom, wraps, picksList, optionsLoopAspect, resetLayoutAspect);\r\n        let loadAspect = LoadAspect(optionsLoopAspect); // !!!!!!!!!!!\r\n        let updateAspect = UpdateAspect(updateDataAspect);\r\n\r\n        \r\n\r\n        let picksElementAspect = PicksElementAspect(picksDom.picksElement);\r\n        let afterInputAspect = AfterInputAspect(filterManagerAspect, navigateAspect, choicesVisibilityAspect, hoveredChoiceAspect);\r\n\r\n        let multiSelectInlineLayoutAspect =  MultiSelectInlineLayoutAspect(\r\n            environment, filterDom, choicesDom, \r\n            choicesVisibilityAspect, \r\n            hoveredChoiceAspect, navigateAspect, filterManagerAspect,\r\n            focusInAspect, optionToggleAspect,\r\n            createPickHandlersAspect,\r\n            picksList,\r\n            inputAspect, specialPicksEventsAspect,  buildChoiceAspect, \r\n            resetLayoutAspect, \r\n            picksElementAspect,\r\n            afterInputAspect,\r\n            disposeAspect,\r\n            pickDomFactory\r\n        );\r\n        \r\n        eventHandlers.layout({\r\n            staticDom, picksDom, choicesDom, filterDom, resetLayoutAspect, \r\n            choicesVisibilityAspect, staticManager, buildChoiceAspect, optionToggleAspect,  choiceClickAspect, \r\n            buildAndAttachChoiceAspect, optionsLoopAspect, optionAttachAspect,\r\n            producePickAspect, createPickHandlersAspect, inputAspect, resetFilterListAspect, resetFilterAspect, \r\n            specialPicksEventsAspect,\r\n            resetLayoutAspect, focusInAspect, \r\n            loadAspect, updateDataAspect, updateAspect, \r\n            fullMatchAspect,\r\n            picksElementAspect, afterInputAspect,\r\n            multiSelectInlineLayoutAspect \r\n        });\r\n        multiSelectInlineLayoutAspect.layout(); // TODO: to staticManager\r\n\r\n        eventHandlers.append();\r\n\r\n        let api = {component: \"BsMultiSelect.api\"} // key to use in memory leak analyzes\r\n        eventHandlers.buildApi(api);\r\n\r\n        api.updateData = () => { \r\n            updateDataAspect.updateData();\r\n        };\r\n        api.update = () => {\r\n            updateAspect.update()\r\n        }\r\n        // TODO api.updateOption = (key) => {/* all updates: selected, disabled, hidden, text */}\r\n\r\n        api.dispose = composeSync(\r\n            resetLayoutAspect.resetLayout,\r\n            ()=>{disposeAspect.dispose()},\r\n            eventHandlers.dispose, \r\n            ()=>{picksList.forEach(pick=>pick.dispose());},\r\n            wraps.dispose,\r\n            staticManager.dispose);\r\n        \r\n        // after this we can pass aspects methods call without wrapping - there should be no more overridings. TODO freeze aspects?        \r\n        staticManager.appendToContainer();\r\n\r\n        loadAspect.load();\r\n        return api;\r\n    } catch(error) {\r\n        showErrorAspect.showError(error);\r\n        throw error;\r\n    }\r\n}\r\n","import {extendIfUndefined} from './ToolsJs';\r\n\r\nfunction parseEventHandler(key, eventHandler, doms, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes){\r\n    if (eventHandler) {\r\n        if (eventHandler.dom)\r\n            doms.push({key, value:eventHandler.dom});\r\n        if (eventHandler.plugStaticDom)\r\n            plugStaticDoms.push({key, value:eventHandler.plugStaticDom});\r\n        if (eventHandler.preLayout)\r\n            preLayouts.push({key, value:eventHandler.preLayout});\r\n        if (eventHandler.layout)\r\n            layouts.push({key, value:eventHandler.layout});\r\n        if (eventHandler.append)\r\n            appends.push({key, value:eventHandler.append});\r\n        if (eventHandler.buildApi)\r\n            buildApis.push({key, value:eventHandler.buildApi});\r\n        if (eventHandler.dispose)\r\n            disposes.push({key, value:eventHandler.dispose});\r\n    }\r\n}\r\n\r\nexport function ComposePluginManagerFactory(plugins, defaults, environment){ \r\n    let plugedList = [];\r\n    let mergeList = [];\r\n    for(let i = 0; i<plugins.length; i++){\r\n        let pluged =  plugins[i].value(defaults, environment);\r\n        if (pluged){\r\n            if (pluged.plug)\r\n                plugedList.push({key:plugins[i].key, value:pluged.plug})\r\n            if (pluged.merge)\r\n                mergeList.push({key:plugins[i].key, value:pluged.merge})\r\n        }\r\n    }\r\n    \r\n    return (configuration, settings, inlineBuildAspects) => {\r\n        let buildAspectsList = [];\r\n        for(let i = 0; i<mergeList.length; i++){\r\n            let merge = mergeList[i].value\r\n            if (merge){\r\n                merge(configuration, settings)\r\n            }\r\n        }\r\n        for(let j = 0; j<plugedList.length; j++){\r\n            let buildAspects = plugedList[j].value(configuration);\r\n            if (buildAspects) {\r\n                buildAspectsList.push({key:plugedList[j].key, value:buildAspects})\r\n            }\r\n        }\r\n        if (inlineBuildAspects)\r\n            buildAspectsList.push({key:\"\", value:inlineBuildAspects})\r\n        return PluginManager(environment, buildAspectsList);\r\n    };\r\n}\r\n\r\nexport function PluginManager(environment, buildAspectsList){\r\n    let aspects = {environment};\r\n    let createHandlers = (newAspects)=> {\r\n        extendIfUndefined(aspects, newAspects)\r\n\r\n        var doms = [];\r\n        var plugStaticDoms = [];\r\n        var preLayouts = [];\r\n        var layouts = [];\r\n        var appends = [];\r\n        var buildApis = [];\r\n        let disposes = [];\r\n        for(let k = 0; k<buildAspectsList.length; k++){\r\n            let eventHandler = buildAspectsList[k].value(aspects);\r\n            parseEventHandler(buildAspectsList[k].key, eventHandler, doms, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n        }\r\n\r\n        return  {\r\n            dom(newAspects){\r\n                extendIfUndefined(aspects, newAspects);\r\n                for(let i = 0; i<doms.length; i++){\r\n                    var eventHandler = doms[i].value?.();\r\n                    parseEventHandler(doms[i].key, eventHandler, doms, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n                }\r\n            },\r\n            plugStaticDom(newAspects){\r\n                extendIfUndefined(aspects, newAspects);\r\n                for(let i = 0; i<plugStaticDoms.length; i++){\r\n                    var eventHandler = plugStaticDoms[i].value?.();\r\n                    parseEventHandler(plugStaticDoms[i].key, eventHandler, doms, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n                }\r\n            },\r\n            layout(newAspects){\r\n                extendIfUndefined(aspects, newAspects);\r\n                for(let i = 0; i<preLayouts.length; i++){\r\n                    let eventHandler = preLayouts[i].value?.();\r\n                    parseEventHandler(preLayouts[i].key, eventHandler, doms, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n                }\r\n                for(let j = 0; j<layouts.length; j++){\r\n                    let eventHandler = layouts[j].value?.();\r\n                    parseEventHandler(layouts[j].key, eventHandler, doms, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n                }\r\n            },\r\n            append(){\r\n                for(let i = 0; i<appends.length; i++){\r\n                    var eventHandler = appends[i].value?.();\r\n                    parseEventHandler(appends[i].key, eventHandler, doms, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n                }\r\n            },\r\n            buildApi(api){\r\n                for(let i = 0; i<buildApis.length; i++){\r\n                    var eventHandler = buildApis[i].value?.(api);\r\n                    parseEventHandler(buildApis[i].key, eventHandler, doms, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n                }\r\n            },\r\n            dispose(){\r\n                for(let i = 0; i<disposes.length; i++){\r\n                    disposes[i].value?.();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        aspects,\r\n        createHandlers\r\n    };\r\n}","const transformStyles = [\r\n    {old:'selectedPanelDisabledBackgroundColor', opt:'picks_disabled', style:\"backgroundColor\"},\r\n    {old:'selectedPanelFocusValidBoxShadow', opt:'picks_focus_valid', style:\"boxShadow\"},\r\n    {old:'selectedPanelFocusInvalidBoxShadow', opt:'picks_focus_invalid', style:\"boxShadow\"},\r\n    {old:'selectedPanelDefMinHeight', opt:'picks_def', style:\"minHeight\"},\r\n    {old:'selectedPanelLgMinHeight', opt:'picks_lg', style:\"minHeight\"},\r\n    {old:'selectedPanelSmMinHeight', opt:'picks_sm', style:\"minHeight\"},\r\n    {old:'selectedItemContentDisabledOpacity', opt:'choiceLabel_disabled', style:\"opacity\"}\r\n]\r\n\r\nconst transformClasses = [\r\n    {old:'dropDownMenuClass', opt:'choices'},\r\n    {old:'dropDownItemClass', opt:'choice'},\r\n    {old:'dropDownItemHoverClass', opt:'choice_hover'},\r\n    {old:'selectedPanelClass', opt:'picks'},\r\n    {old:'selectedItemClass', opt:'pick'},\r\n    {old:'removeSelectedItemButtonClass', opt:'pickButton'},\r\n    {old:'filterInputItemClass', opt:'pickFilter'},\r\n    {old:'filterInputClass', opt:'filterInput'},\r\n    {old:'selectedPanelFocusClass', opt:'picks_focus'},\r\n    {old:'selectedPanelDisabledClass', opt:'picks_disabled'},\r\n    {old:'selectedItemContentDisabledClass', opt:'pick_disabled'}\r\n]\r\n\r\nexport function adjustLegacySettings(settings){\r\n    if (!settings.css)\r\n        settings.css={}\r\n    var css =settings.css;\r\n\r\n    if (!settings.cssPatch)\r\n        settings.cssPatch={}\r\n    var cssPatch =settings.cssPatch;\r\n\r\n    if (settings.selectedPanelFocusBorderColor || settings.selectedPanelFocusBoxShadow){\r\n        console.log(\"DashboarCode.BsMultiSelect: selectedPanelFocusBorderColor and selectedPanelFocusBoxShadow are depricated, use - cssPatch:{picks_focus:{borderColor:'myValue', boxShadow:'myValue'}}\");\r\n        if(!cssPatch.picks_focus){\r\n            cssPatch.picks_focus = {boxShadow: settings.selectedPanelFocusBoxShadow, borderColor: settings.selectedPanelFocusBorderColor}\r\n        }\r\n        delete settings.selectedPanelFocusBorderColor;\r\n        delete settings.selectedPanelFocusBoxShadow;\r\n    }\r\n\r\n    transformStyles.forEach(\r\n        (i)=>{\r\n            if (settings[i.old]){\r\n                console.log(`DashboarCode.BsMultiSelect: ${i.old} is depricated, use - cssPatch:{${i.opt}:{${i.style}:'myValue'}}`);\r\n                if(!settings[i.opt]){\r\n                    let opt = {}\r\n                    opt[i.style] = settings[i.old]\r\n                    settings.cssPatch[i.opt]=opt;\r\n                }\r\n                delete settings[i.old];\r\n            }\r\n        }\r\n    )\r\n    \r\n    transformClasses.forEach( (i) => {\r\n        if (settings[i.old]){\r\n            console.log(`DashboarCode.BsMultiSelect: ${i.old} is depricated, use - css:{${i.opt}:'myValue'}`);\r\n            if(!css[i.opt]){\r\n                css[i.opt]= settings[i.old]\r\n            }\r\n            delete settings[i.old];\r\n        }\r\n    })\r\n    \r\n    if (settings.inputColor){\r\n        console.log(\"DashboarCode.BsMultiSelect: inputColor is depricated, remove parameter\");\r\n        delete settings.inputColor;\r\n    }\r\n\r\n    if (settings.useCss){\r\n        console.log(\"DashboarCode.BsMultiSelect: 'useCss: true' is depricated, use - 'useCssPatch: false'\");\r\n        if(!css.pick_disabled){\r\n            settings.useCssPatch = !settings.useCss\r\n        }\r\n        delete settings.useCss;\r\n    }  \r\n\r\n    if (settings.getIsValid || settings.getIsInValid){\r\n        throw \"DashboarCode.BsMultiSelect: parameters getIsValid and getIsInValid are depricated and removed, use - getValidity that should return (true|false|null) \"\r\n    } \r\n}","import {BsMultiSelect} from './BsMultiSelect'\r\nimport {ComposePluginManagerFactory} from './PluginManager'\r\n\r\nimport {adjustLegacySettings} from './BsMultiSelectDepricatedParameters'\r\n\r\nimport {extendIfUndefined} from './ToolsJs'\r\n\r\nimport {createCss} from './ToolsStyling'\r\n\r\n// TODO: remove environment - replace it with plugins\r\n// TODO: defaultCss should come together with DomFactories and Layout \r\nexport function MultiSelectBuilder(environment, plugins, defaultCss) \r\n{\r\n    const defaults = {containerClass: \"dashboardcode-bsmultiselect\", css: defaultCss}\r\n    \r\n    var pluginManagerFactory = ComposePluginManagerFactory(plugins, defaults, environment);\r\n\r\n    /*  NOTE: about namings\r\n        defaults - defaults for module \r\n        setting - object that could modify defaults (not just overwrite)\r\n        options - configuration \"generalization\": can be buildConfiguration function or settings\r\n        configuration - for control instance\r\n    */\r\n    let create = (element, options) => { \r\n        if (options && options.plugins)\r\n            console.log(\"DashboarCode.BsMultiSelect: 'options.plugins' is depricated, use - MultiSelectBuilder(environment, plugins) instead\");\r\n        \r\n        let buildConfiguration;\r\n        let settings;\r\n        if (options instanceof Function) {\r\n            buildConfiguration = options;\r\n            settings = null;\r\n        } else {\r\n            buildConfiguration = options?.buildConfiguration;\r\n            settings = options;\r\n        }\r\n        if (settings){\r\n            adjustLegacySettings(settings);\r\n        }\r\n        let configuration = {};\r\n        \r\n        configuration.css = createCss(defaults.css, settings?.css);\r\n        \r\n        extendIfUndefined(configuration, settings);\r\n        // next line: merging of cssPatch will be delayed to the CssPatchPlugin merge handler\r\n        extendIfUndefined(configuration, defaults); \r\n        let inlineBuildAspectsList = buildConfiguration?.(element, configuration); \r\n        // next line merges settings.cssPatch and defaults.cssPatch also merge defaults.css and defaults.cssPatch \r\n        var pluginManager = pluginManagerFactory(configuration, settings, inlineBuildAspectsList); \r\n        // now we can freeze configuration object\r\n        Object.freeze(configuration);\r\n        let multiSelect = BsMultiSelect(element, environment, pluginManager, configuration); \r\n        return multiSelect;\r\n    }\r\n    \r\n    return {create, defaultSettings: defaults}\r\n}","import {multiSelectPlugins, picksPlugins, allPlugins} from './PluginSet'\r\nimport {shallowClearClone, ObjectValuesEx} from './ToolsJs'\r\nimport {utilities} from './ToolSet'\r\nimport {MultiSelectBuilder} from './MultiSelectBuilder'\r\n\r\nexport function ModuleFactory(environment, customizationPlugins, defaultCss){\r\n    if (!environment.trigger)\r\n        environment.trigger = (e, name) => e.dispatchEvent(new environment.window.Event(name))\r\n\r\n    if (!environment.isIE11)\r\n        environment.isIE11 = !!environment.window.MSInputMethodContext && !!environment.window.document.documentMode;\r\n\r\n    let multiSelectPluginsObj = shallowClearClone(customizationPlugins, multiSelectPlugins);\r\n    let pluginsArray = ObjectValuesEx(multiSelectPluginsObj);\r\n    let {create: BsMultiSelect, BsMultiSelectDefault} = MultiSelectBuilder(environment, pluginsArray, defaultCss) \r\n    BsMultiSelect.Default = BsMultiSelectDefault;\r\n    \r\n    let picksPluginsObj = shallowClearClone(customizationPlugins, picksPlugins);\r\n    let picksPluginsArray = ObjectValuesEx(picksPluginsObj);\r\n    let {create: BsPicks, BsPicksDefault} = MultiSelectBuilder(environment, picksPluginsArray, defaultCss) \r\n    BsPicks.Default = BsPicksDefault; \r\n\r\n    return {\r\n        BsMultiSelect,\r\n        BsPicks,\r\n        MultiSelectTools: {MultiSelectBuilder, plugins: shallowClearClone(customizationPlugins, allPlugins), defaultCss, utilities} \r\n    }\r\n}\r\n\r\n\r\n// TEST\r\n// function areValidElements(...args) {\r\n//     const result = Object.values(obj);\r\n//     return !args.some(\r\n//       (element) =>\r\n//         !(element && typeof element.getBoundingClientRect === 'function')\r\n//     );\r\n// }\r\n\r\n// function ModuleFactory(environment) {\r\n//     if (!environment.trigger)\r\n//         environment.trigger = (e, name) => e.dispatchEvent(new environment.window.Event(name))\r\n\r\n//     let pluginsArray = ObjectValues(shallowClearClone({Bs5Plugin}, multiSelectPlugins));\r\n//     let {create: BsMultiSelect, BsMultiSelectDefault} = MultiSelectBuilder(environment, pluginsArray) \r\n//     BsMultiSelect.Default = BsMultiSelectDefault;\r\n    \r\n//     let picksPluginsArray = ObjectValues(shallowClearClone({Bs5Plugin}, picksPlugins));\r\n//     let {create: BsPicks, BsPicksDefault} = MultiSelectBuilder(environment, picksPluginsArray) \r\n//     BsPicks.Default = BsPicksDefault;\r\n\r\n//     return {\r\n//         BsMultiSelect,\r\n//         BsPicks,\r\n//         MultiSelectTools: {MultiSelectBuilder, plugins: shallowClearClone({Bs5Plugin}, allPlugins), utilities} \r\n//     }\r\n// }\r\n","import {createDefaultCssBs5} from \"./DomFactories\";\r\nimport {Bs4PluginSet} from './PluginSet'\r\nimport {ModuleFactory as ModuleFactoryImpl} from \"./ModuleFactory\";\r\n\r\nconst defaultCss = createDefaultCssBs5();\r\n\r\nfunction ModuleFactory(environment){\r\n    return ModuleFactoryImpl(\r\n        environment,\r\n        Bs4PluginSet,\r\n        defaultCss\r\n    );\r\n} \r\n\r\nfunction legacyConstructor(element, environment, settings){\r\n    console.log(\"DashboarCode.BsMultiSelect: 'BsMultiSelect' is depricated, use - ModuleFactory(environment).BsMultiSelect(element, settings)\");\r\n    var {BsMultiSelect} =  ModuleFactory(environment);\r\n    var bsMultiSelect = BsMultiSelect(element, settings);\r\n    return bsMultiSelect;\r\n}\r\n\r\nexport  { \r\n    legacyConstructor as BsMultiSelect,\r\n    ModuleFactory\r\n}"]}