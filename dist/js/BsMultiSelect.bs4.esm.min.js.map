{"version":3,"sources":["../../src/ToolsDom.js","../../src/ToolsJs.js","../../src/ToolsStyling.js","../../src/PickDomFactory.js","../../src/PicksDomFactory.js","../../src/ChoiceDomFactory.js","../../src/ChoicesDomFactory.js","../../src/FilterDomFactory.js","../../src/DomFactories.js","../../src/plugins/BsAppearancePlugin.js","../../src/plugins/BsAppearanceBs4Plugin.js","../../src/plugins/BsAppearanceBs4CssPatchPlugin.js","../../src/plugins/LabelForAttributePlugin.js","../../src/plugins/RtlPlugin.js","../../src/plugins/FormResetPlugin.js","../../src/plugins/ValidationApiPlugin.js","../../src/plugins/HiddenOptionPlugin.js","../../src/plugins/CssPatchPlugin.js","../../src/plugins/CssPatchBs4Plugin.js","../../src/plugins/JQueryMethodsPlugin.js","../../src/plugins/OptionsApiPlugin.js","../../src/plugins/FormRestoreOnBackwardPlugin.js","../../src/plugins/SelectElementPlugin.js","../../src/plugins/SelectedOptionPlugin.js","../../src/plugins/DisabledOptionPlugin.js","../../src/plugins/PicksApiPlugin.js","../../src/plugins/PicksPlugin.js","../../src/plugins/CreatePopperPlugin.js","../../src/plugins/ChoicesDynamicStylingPlugin.js","../../src/plugins/HighlightPlugin.js","../../src/plugins/CustomChoiceStylingsPlugin.js","../../src/plugins/CustomPickStylingsPlugin.js","../../src/plugins/UpdateAppearancePlugin.js","../../src/plugins/DisableComponentPlugin.js","../../src/plugins/PlaceholderPlugin.js","../../src/plugins/PlaceholderCssPatchPlugin.js","../../src/plugins/FloatingLabelPlugin.js","../../src/plugins/WarningCssPatchPlugin.js","../../src/plugins/WarningPlugin.js","../../src/plugins/WarningBs4Plugin.js","../../src/PluginSet.js","../../src/ToolSet.js","../../src/StaticDomFactory.js","../../src/CreateElementAspect.js","../../src/ChoicesVisibilityAspect.js","../../src/SpecialPicksEventsAspect.js","../../src/ComponentPropertiesAspect.js","../../src/OptionsAspect.js","../../src/ChoicesEnumerableAspect.js","../../src/FilterManagerAspect.js","../../src/BuildChoiceAspect.js","../../src/OptionsLoopAspect.js","../../src/UpdateDataAspect.js","../../src/CreateWrapAspect.js","../../src/NavigateAspect.js","../../src/Wraps.js","../../src/PickButtonAspect.js","../../src/BuildPickAspect.js","../../src/InputAspect.js","../../src/ResetFilterListAspect.js","../../src/MultiSelectInlineLayoutAspect.js","../../src/ResetLayoutAspect.js","../../src/LoadAspect.js","../../src/CountableChoicesListInsertAspect.js","../../src/PicksElementAspect.js","../../src/AfterInputAspect.js","../../src/ShowErrorAspect.js","../../src/BsMultiSelect.js","../../src/PluginManager.js","../../src/BsMultiSelectDepricatedParameters.js","../../src/MultiSelectBuilder.js","../../src/ModuleFactory.js","../../src/BsMultiSelect.esm.js"],"names":["findDirectChildByTagName","element","tagName","value","i","children","length","tmp","closestByTagName","closest","e","closestByClassName","className","classList","contains","closestByAttribute","attributeName","attribute","getAttribute","containsAndSelf","node","otherNode","getDataGuardedWithPrefix","prefix","name","tmp1","tmp2","predicate","Element","parentNode","siblingsAsArray","l","push","getIsRtl","isRtl","EventBinder","list","bind","eventName","handler","addEventListener","unbind","forEach","removeEventListener","EventTumbler","on","off","AttributeBackup","set","currentAtribute","setAttribute","restore","removeAttribute","EventLoopProlongableFlag","window","flag","pr","get","timeout","clearTimeout","setTimeout","ResetableFlag","reset","isBoolean","isString","String","extendIfUndefined","destination","source","property","undefined","shallowClearClone","sources","v","s","hasOwnProperty","forEachRecursion","f","prev","indexRecursion","index","List","tail","count","add","next","remove","getTail","getCount","isEmpty","DoublyLinkedList","getPrev","setPrev","getNext","setNext","head","getHead","ArrayFacade","key","splice","start","c","forLoop","composeSync","functions","defCall","Function","ObservableValue","getValue","setValue","newValue","attach","detachAll","ObservableLambda","func","call","ObjectValuesEx","object","arr","addStyling","styling","backupStyling","classes","styles","slice","style","removeStyling","toggleStyling","isOn","isF","force","extendClasses","out","param","actionStr","actionArr","isRemoveEmptyClasses","split","Array","extend","actionObj","Object","Styling","a","o","freeze","createStyling","isReplace","params","extendInt","p","concat","createCss","stylings1","stylings2","param1","param2","extendCss","PickDomFactoryPlugCss","css","pickContent","pickContent_disabled","pickButton","cssPatch","opacity","PickDomFactoryPlugCssPatch","float","fontSize","lineHeight","PickDomFactory","createElementAspect","optionPropertiesAspect","pickButtonAspect","create","buttonHTML","createElementFromHtml","pickContentElement","querySelector","pickButtonElement","pickElement","eventBinder","disableToggle","pickDom","updateData","updateDisabled","textContent","getText","wrap","option","isOptionDisabled","PicksDomFactory","pickFilterElement","createElement","picks","disableToggleStyling","focusToggleStyling","picksElement","picks_focus","isFocusIn","isDisposablePicksElementFlag","createPickElement","pick","detach","beforeElement","insertBefore","removeChild","isComponentDisabled","getIsFocusIn","newIsFocusIn","dispose","pickFilter","picks_disabled","listStyleType","display","flexWrap","height","marginBottom","cursor","backgroundColor","borderColor","boxShadow","PicksDomFactoryPlugCssPatch","paddingLeft","paddingRight","paddingInlineStart","paddingInlineEnd","updateDataInternal","choiceDom","toggle","choiceDomManagerHandlers","choiceElement","choiceContentElement","choiceCheckBoxElement","choiceLabelElement","choiceContent","choiceLabel","choiceSelectedToggle","checked","choiceHoverToggle","choice","isHoverIn","choiceCheckBoxDisabledToggle","choiceLabelDisabledToggle","choiceLabel_disabled","choiceCursorDisabledToggle","choiceDisabledToggle","disabled","isOptionSelected","isCheckBoxDisabled","choice_disabled_hover","choice_hover","updateHoverIn","updateSelected","choiceCheckBox_disabled","choiceCheckBox","choice_selected","ChoiceDomFactoryPlugCssPatch","color","justifyContent","ChoicesDomFactory","choicesElement","choicesListElement","appendChild","choices","createChoiceElement","isVisible","setVisible","ChoicesDomFactoryPlugCss","choicesList","ChoicesDomFactoryPlugCssPatch","FilterDomFactory","filterInputElement","filterInput","setEmpty","setFocus","focus","setWidth","width","text","setFocusIfNotTarget","target","onInput","onFilterInputInput","onFocusIn","onFocusOut","onKeyDown","onfilterInputKeyDown","onKeyUp","onFilterInputKeyUp","FilterDomFactoryPlugCss","FilterDomFactoryPlugCssPatch","border","padding","margin","outline","defaultCss","createDefaultCssBs5","PickDomFactoryPlugCssBs4","PickDomFactoryPlugCssBs5","PicksDomFactoryPlugCss","ChoiceDomFactoryPlugCssBs5","BsAppearancePlugin","plug","plug$o","configuration","aspects","preLayout","getLabelAspect","staticDom","selectElement","getDefaultLabel","getLabel","origLabelAspectGetLabel","layout","validationApiAspect","initialDom","picksDom","updateAppearanceAspect","componentPropertiesAspect","floatingLabelAspect","getValidity","getSize","useCssPatch","composeGetSize","initialElement","isFloatingLabel","composeGetValidity","updateSize","picks_lg","picks_sm","picks_def","picks_floating_def","updateSizeForAdapter","toggleFocusStyling","validity","validationObservable","origToggleFocusStyling","setIsFocusIn","picks_focus_invalid","picks_focus_valid","wasUpdatedObservable","getWasValidated","getManualValidationObservable","validationApiObservable","validMessages","invalidMessages","updateValidity","getMessagesElements","containerElement","updateAppearance","buildApi","api","map","updateSizeClasses","size","updateSizeJsPicks","picksLgStyling","picksSmStyling","picksDefStyling","updateSizeJs","updateSizeJsForAdapter","siblings","filter","defaults","BsAppearanceBs4Plugin","pickButtonHTML","inputGroupElement","formGroup","id","BsAppearanceBs4CssPatchPlugin","LabelForAttributePlugin","plug$n","label","createFilterInputElementIdAspect","createFilterInputElementId","filterInputElementId","filterDom","loadAspect","disposeAspect","load","labelElement","backupedForAttribute","inputId","containerClass","RtlPlugin","plug$m","popperRtlAspect","forceRtlOnContainer","attributeBackup","dirAttributeValue","FormResetPlugin","plug$l","updateDataAspect","environment","eventBuilder","form","defValueMissingMessage","preset","preset$2","ValidationApiPlugin","plug$k","getValueRequired","getValueRequiredAspect","GetValueRequiredAspect","plugStaticDom","optionsAspect","getIsValueMissing","valueMissingMessage","required","getOptions","optionsArray","isValueMissingObservable","onChangeAspect","onChange","triggerAspect","ValidityApi","isValid","trigger","ValidationApiAspect","customValidationMessage","visibleElement","validationMessage","setMessage","valueMissing","customError","setCustomValidity","checkValidity","valid","willValidate","message","reportValidity","HiddenOptionPlugin","plug$j","createWrapAspect","isChoiceSelectableAspect","wrapsCollection","buildAndAttachChoiceAspect","buildChoiceAspect","countableChoicesListInsertAspect","countableChoicesList","isOptionHidden","buildHiddenChoice","origBuildAndAttachChoice","getNextElement","getIsOptionHidden","options","hidden","origCreateWrap","isChoiceElementAttached","choiceElementAttach","setHoverIn","newIsOptionHidden","updateChoiceHidden","getNextNonHidden","nextChoice","CssPatchPlugin","merge","settings","Error","plug$i","CssPatchBs4Plugin","PickDomFactoryPlugCssPatchBs4","PicksDomFactoryPlugCssPatchBs4","JQueryMethodsPlugin","plug$h","choicesDom","picksList","OptionsApiPlugin","plug$g","wraps","createChoiceBaseAspect","resetLayoutAspect","createWrap","resetLayout","FormRestoreOnBackwardPlugin","plug$f","updateOptionsSelectedAspect","document","readyState","updateOptionsSelected","SelectElementPlugin","plug$e","staticDomFactory","optGroupAspect","choicesDomFactory","filterDomFactory","picksDomFactory","showErrorAspect","origCreateStaticDom","createStaticDom","showError","error","errorElement","toString","nextSibling","backupDisplay","backupedRequired","getDisabled","fieldsetElement","toLowerCase","staticManager","appendToContainer","isDisposableContainerElementFlag","origLoadAspectLoop","domContentLoadedHandler","SelectedOptionPlugin","plug$d","getSelected","getIsOptionSelected","setSelected","setIsOptionSelected","selected","getSelectedAspect","setSelectedAspect","UpdateOptionsSelectedAspect","removePickAspect","optionToggleAspect","createPickHandlersAspect","addPickAspect","fullMatchAspect","filterPredicateAspect","filterPredicate","composeUpdateSelected","booleanValue","success","buildChoice","trySetWrapSelected","pickHandlers","origCreatePickHandlers","producePick","removeAndDispose","origAddPick","isSelectable","setOptionSelected","updateChoiceSelected","newIsSelected","DisabledOptionPlugin","plug$c","buildPickAspect","getIsOptionDisabled","origBuildChoice","removeOnButton","choiceUpdateDisabledBackup","updateChoiceDisabled","newIsDisabled","PicksApiPlugin","plug$b","getTailPeak","addPick","PicksPlugin","plug$a","origAdd","origReset","CreatePopperPlugin","plug$9","PopperRtlAspect","createPopper","Popper","globalPopper","createModifiersVX","createPopperConstructor","createPopperVX","popperConfiguration","CreateModifiersV1","createPopperConfigurationAspect","CreatePopperConfigurationAspect","createPopperAspect","CreatePopperAspect","append","choicesVisibilityAspect","specialPicksEventsAspect","pop","init","backSpace","origBackSpace","updatePopupLocation","preventOverflow","hide","flip","modifiers","CreateModifiersV2","anchorElement","popper","createConfiguration","update","destroy","placement","ChoicesDynamicStylingPlugin","useChoicesDynamicStyling","choicesDynamicStyling","plug$8","setChoicesVisible","origSetChoicesVisible","navigateAspect","minimalChoicesDynamicStylingMaxHeight","g","getElementsByTagName","pos","documentElement","clientHeight","setProperty","msHeight","ChoicesDynamicStylingPlugin_scrollHandle","down","origNavigateAspectNavigate","scrollIntoView","HighlightPlugin","plug$7","origCreateChoiceDomFactory","choiceDomFactory","updateHighlighted","highlighter","highlightAspect","getHighlighter","useHighlighting","HighlightAspect","ExtendChoiceDomFactory$1","filterManagerAspect","processEmptyInput","setFilter","origSetVisible","replace","guarded","innerHTML","regex","CustomChoiceStylingsPlugin","plug$6","customChoiceStylings","ExtendChoiceDomFactory","customChoiceStylingsAspect","CustomChoiceStylingsAspect","origChoiceDomFactoryCreate","customize","handlers","custom","customChoiceStylingsClosure","CustomPickStylingsPlugin","plug$5","pickDomFactory","ExtendPickDomFactory$1","customPickStylingsAspect","customPickStylings","origCreatePickDomFactory","CustomPickStylingsAspect","pickDomManagerHandlers","customPickStylingsClosure","updateComponentDisabled","UpdateAppearancePlugin","plug$4","UpdateAppearanceAspect","updateAspect","DisableComponentPlugin","plug$3","ExtendPickDomFactory","picksElementAspect","disableComponent","disable","newIsComponentDisabled","onClick","onClickUnbind","PlaceholderPlugin","plug$2","resetFilterListAspect","isIE11","placeholder","setPlaceholder","ignoreNextInputResetableFlag","PlaceholderStopInputAspect","placeholderStopInputAspect","origOnInput","setEmptyInputWidth","emptyToggleStyling","showPlacehodler","updatePlacehodlerVisibility","updateEmptyInputWidth","origDisable","setDisabled","forceResetFilter","returnValue","resetableFlag","PlaceholderCssPatchPlugin","FloatingLabelPlugin","label_floating_lifted","plug$1","FloatingLabelAspect","liftToggleStyling1","liftedLabel","updateLiftedLabel","WarningCssPatchPlugin","zIndex","defNoResultsWarningMessage","noResultsWarning","afterInputAspect","isNoResultsWarningEnabled","warningAspect","WarningAspect","ExtendAfterInputAspect","warningElement","pop2","msg","origVisible","visibleCount","notVisible","origNotVisible","hideChoices","show","warning","WarningBs4Plugin","multiSelectPlugins","picksPlugins","allPlugins","StaticDomFactory","removableContainerClass","CreateElementAspect","ChoicesVisibilityAspect","isChoicesVisible","visible","SpecialPicksEventsAspect","TriggerAspect","OnChangeAspect","ComponentPropertiesAspect","OptionsAspect","OptionPropertiesAspect","ChoicesEnumerableAspect","NavigateManager","navigate","FilterPredicateAspect","searchText","indexOf","FilterManagerAspect","emptyNavigateManager","filteredNavigateManager","filteredChoicesList","choicesEnumerableAspect","showEmptyFilter","filterText","getNavigateManager","filteredNext","BuildAndAttachChoiceAspect","buildAndAttachChoice","BuildChoiceAspect","choiceClickAspect","isFilteredIn","OptionAttachAspect","OptionsLoopAspect","optionAttachAspect","loop","UpdateDataAspect","clear","UpdateAspect","ChoiceClickAspect","choiceClick","createPickHandlers","AddPickAspect","FullMatchAspect","fullMatch","RemovePickAspect","removePick","ProducePickAspect","event","removeFromPicksList","fixSelectedFalse","setSelectedFalse","CreatePickHandlersAspect","CreateChoiceBaseAspect","createChoiceBase","filteredPrev","trim","itemPrev","itemNext","CreateWrapAspect","hoveredChoice","HoveredChoiceAspect","getHoveredChoice","setHoveredChoice","resetHoveredChoice","NavigateAspect","hoveredChoiceAspect","hoverIn","Wraps","listFacade_add","insert","listFacade_remove","PickButtonAspect","getButtonHTML","BuildPickAspect","buildPick","pickElementAttach","InputAspect","processInput","filterInputValue","fullMatchWrap","ResetFilterListAspect","ResetFilterAspect","resetFilter","FocusInAspect","setFocusIn","MultiSelectInlineLayoutAspect","eventLoopFlag","skipFocusout","resetSkipFocusout","setSkipFocusout","choicesElementMousedownEventTumbler","resetMouseCandidateChoice","skipoutMousedown","handleOnRemoveButton","uncheckOption","processUncheck","mouseCandidateEventBinder","mouseOverToHoveredAndReset","keyDownArrow","which","keyCode","empty","preventDefault","stopPropagation","showChoices","hoveredWrap","hoveredToSelected","clickToShowChoices","preventDefaultClickEvent","focusInAspect","getSkipFocusout","inputAspect","skipoutAndResetMousedown","unbindChoiceElement","adoptChoiceElement","overAndLeaveEventBinder","onChoiceElementMouseover","onChoiceElementMouseleave","ResetLayoutAspect","LoadAspect","optionsLoopAspect","CountableChoicesListInsertAspect","countableChoicesListInsert","componentDisabledEventBinder","skipoutAndResetMousedownEventBinder","onMousedown","AfterInputAspect","panelIsVisble","ShowErrorAspect","block","html","warp","w","pluginManager","eventHandlers","resetFilterAspect","producePickAspect","OptionToggleAspect","PicksElementAspect","multiSelectInlineLayoutAspect","component","eventHandler","plugStaticDoms","preLayouts","layouts","appends","buildApis","disposes","plugedList","ComposePluginManagerFactory","pluged","plugins","mergeList","buildAspectsList","buildAspects","inlineBuildAspects","PluginManager","newAspects","parseEventHandler","k","_plugStaticDoms$i$val","_preLayouts$i$value","_layouts$j$value","j","_appends$i$value","_buildApis$i$value","_disposes$i$value","old","transformStyles","opt","transformClasses","adjustLegacySettings","console","selectedPanelFocusBorderColor","selectedPanelFocusBoxShadow","inputColor","useCss","pick_disabled","MultiSelectBuilder","pluginManagerFactory","buildConfiguration","_settings","ModuleFactory","customizationPlugins","Event","dispatchEvent","documentMode","multiSelectPluginsObj","MSInputMethodContext","BsMultiSelect","BsMultiSelectDefault","picksPluginsObj","BsPicks","BsPicksDefault","MultiSelectTools","Bs4PluginSet","legacyConstructor"],"mappings":"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","sourcesContent":["export function findDirectChildByTagName(element, tagName){\r\n    let value = null;\r\n    for (let i = 0; i<element.children.length; i++)\r\n    {\r\n        let tmp = element.children[i];\r\n        if (tmp.tagName==tagName)\r\n        {\r\n            value = tmp;\r\n            break;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n\r\nexport function composeEventTrigger(window){ \r\n    let trigger;\r\n    if (typeof(window.Event) === 'function'){\r\n        trigger = (e, eventName) =>{ \r\n            var event = new window.Event(eventName);\r\n            e.dispatchEvent(event);\r\n        }\r\n    }\r\n    else\r\n        trigger = (e, eventName) =>  { // IE 11 polyfill\r\n            let event = window.document.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, false, false, undefined);\r\n            e.dispatchEvent(event);\r\n    }\r\n    return trigger;\r\n}\r\n\r\nexport function closestByTagName(element, tagName){\r\n    return closest(element, e => e.tagName === tagName) // TODO support xhtml?  e.tagName.toUpperCase() ?\r\n}\r\n\r\nexport function closestByClassName(element, className){\r\n    return closest(element, e => e.classList.contains(className))\r\n}\r\n\r\nexport function closestByAttribute(element, attributeName, attribute){\r\n    return closest(element, e => e.getAttribute(attributeName)===attribute )\r\n}\r\n\r\nexport function containsAndSelf(node, otherNode ){\r\n    return node === otherNode || node.contains(otherNode);  \r\n}\r\n\r\nexport function getDataGuardedWithPrefix(element, prefix, name){\r\n    var tmp1 = element.getAttribute('data-' + prefix + '-' + name);\r\n    if (tmp1) {\r\n        return tmp1;\r\n    } else  {\r\n        var tmp2 = element.getAttribute('data-' + name);\r\n        if (tmp2)\r\n            return tmp2;\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction closest(element, predicate){\r\n    if (!element || !(element instanceof Element)) return null; // should be element, not document (TODO: check iframe)\r\n     \r\n    if (predicate(element)) return element;\r\n    return closest(element.parentNode, predicate);\r\n}\r\n\r\nexport function siblingsAsArray(element){\r\n    var value = []\r\n    if (element.parentNode){\r\n        var children = element.parentNode.children;\r\n        var l = element.parentNode.children.length;\r\n        if (children.length>1){\r\n            for (var i=0; i < l; ++i){\r\n                var e = children[i];\r\n                if (e!=element)\r\n                    value.push(e);\r\n                \r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\n\r\nexport function getIsRtl(element){\r\n    var isRtl = false;\r\n    var e = closestByAttribute(element,\"dir\",\"rtl\");\r\n    if (e)\r\n        isRtl = true;\r\n    return isRtl;\r\n}\r\n\r\nexport function EventBinder(){\r\n    var list = [];\r\n    return {\r\n        bind(element, eventName, handler) {\r\n            element.addEventListener(eventName, handler)\r\n            list.push( {element, eventName, handler} )\r\n        },\r\n        unbind() {\r\n            list.forEach( e=> {\r\n                let {element, eventName, handler}=e;\r\n                element.removeEventListener(eventName, handler)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function EventTumbler(element, eventName, handler){\r\n    return {\r\n        on() {\r\n            element.addEventListener(eventName, handler)\r\n        },\r\n        off() {\r\n            element.removeEventListener(eventName, handler)\r\n        }\r\n    }\r\n}\r\n\r\nexport function AttributeBackup(){\r\n    var list = [];\r\n    return {\r\n        set(element, attributeName, attribute){\r\n            var currentAtribute =  element.getAttribute(attributeName); \r\n            list.push( {element, currentAtribute, attribute} )\r\n            element.setAttribute(attributeName, attribute)\r\n        },\r\n        restore(){\r\n            list.forEach(e=>{\r\n                let {element, attributeName, attribute} = e;\r\n                if (attributeName)\r\n                    element.setAttribute(attributeName, attribute)\r\n                else\r\n                    element.removeAttribute(attributeName)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function EventLoopFlag(window) {\r\n    var flag = false;\r\n    return {\r\n        get(){\r\n            return flag;\r\n        },\r\n        set(){\r\n            flag = true;\r\n            pr = window.setTimeout( \r\n                () => {  \r\n                        flag = false;\r\n            })\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport function EventLoopProlongableFlag(window) {\r\n    var flag = false;\r\n    var pr = null;\r\n    return {\r\n        get(){\r\n            return flag;\r\n        },\r\n        set(timeout){\r\n            if (flag && pr){\r\n                window.clearTimeout(pr);\r\n            }\r\n            flag = true;\r\n            pr = window.setTimeout( \r\n                () => {  \r\n                        flag = false;\r\n                        pr=null;\r\n                }, timeout?timeout:0)\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport function ResetableFlag() {\r\n    var flag = false;\r\n    return {\r\n        get(){\r\n            return flag;\r\n        },\r\n        set(){\r\n            flag = true;\r\n        },\r\n        reset(){\r\n            flag = false;\r\n        }\r\n    }\r\n}","export function isBoolean(value){\r\n    return value === true || value === false;\r\n}\r\n\r\nexport function isString(value){\r\n    return value instanceof String || typeof(value) === 'string';\r\n}\r\n\r\nexport function extendIfUndefined(destination, source) {\r\n    for (let property in source)\r\n        if (destination[property] === undefined)\r\n            destination[property] = source[property];\r\n}\r\n\r\nexport function shallowClearClone(source, ...sources) { // override previous, no null and undefined\r\n    var destination = {};\r\n    for (let property in source){ // TODO:  Object.assign (need polyfill for IE11)\r\n        let v = source[property];\r\n        if (!(v === null || v===undefined))\r\n            destination[property] = v;\r\n    }\r\n    if(sources)\r\n        sources.forEach(\r\n            s=>{\r\n                for(let property in s){\r\n                    let v = s[property];\r\n                    if (!(v === null || v===undefined))\r\n                        destination[property] = v;\r\n                    else\r\n                        if (destination.hasOwnProperty(property)){\r\n                            delete destination[property];\r\n                        }\r\n                }\r\n            }\r\n        )\r\n    return destination;\r\n}\r\n\r\nfunction forEachRecursion(f, e){\r\n    if (!e)\r\n        return;\r\n    let goOn = f(e.value); \r\n    if (!(goOn===false))\r\n        forEachRecursion(f, e.prev);\r\n}\r\n\r\nfunction indexRecursion(index, e){\r\n    if (!e.prev)\r\n        return index;\r\n    indexRecursion(++index, e.prev);\r\n}\r\n\r\nexport function List(){\r\n    var tail = null;\r\n    var count = 0;\r\n    return {\r\n        add(e){\r\n            if (tail){\r\n                tail.next = {value:e, prev:tail, next:null};\r\n                tail = tail.next;\r\n            } else \r\n                tail = {value:e, prev:null, next:null}\r\n            count++;\r\n            let node = tail;\r\n            function remove(){\r\n                if (node.prev){\r\n                    (node.prev).next = node.next;\r\n                }\r\n                if (node.next){\r\n                    (node.next).prev = node.prev;\r\n                }\r\n                if (tail == node){\r\n                    tail = node.prev;\r\n                }\r\n                count--;\r\n            }\r\n            function index(){\r\n                return indexRecursion(0, node);\r\n            }\r\n            return {remove, index};\r\n        },\r\n        forEach(f){\r\n            forEachRecursion(f, tail);\r\n        },\r\n        getTail(){ return (tail)?tail.value:null },\r\n        getCount(){ return count },\r\n        isEmpty(){ return count==0 },\r\n        reset(){ tail=null; count = 0 }\r\n    }\r\n}\r\n\r\nexport function DoublyLinkedList(getPrev, setPrev, getNext, setNext){\r\n    var head = null, tail = null;\r\n    var count = 0;\r\n    return {\r\n        add(e, next){\r\n            if (!tail){\r\n                head = tail = e;\r\n                setPrev(e, null);\r\n                setNext(e, null);\r\n            }\r\n            else {\r\n                if (!next){\r\n                    setPrev(e, tail);\r\n                    setNext(e, null);\r\n                    setNext(tail, e);\r\n                    tail = e;\r\n                } \r\n                else{\r\n                    if (next===head)\r\n                        head=e;\r\n                    let prev = getPrev(next);\r\n                    setNext(e, next);\r\n                    setPrev(next, e);\r\n                    if (prev){\r\n                        setPrev(e, prev);\r\n                        setNext(prev, e);\r\n                    } else {\r\n                        setPrev(e, null);\r\n                    }\r\n                } \r\n            }\r\n            count++;\r\n        },\r\n        remove(e){\r\n            let next = getNext(e);\r\n            let prev = getPrev(e);\r\n            if (prev) {\r\n                setNext(prev, next)\r\n            }\r\n            if (next) {\r\n                 setPrev(next, prev)\r\n            }\r\n            if (tail == e) {\r\n                tail = prev;\r\n            }\r\n            if (head == e) {\r\n                head = next; \r\n            }\r\n            count--;\r\n        }, \r\n        getHead(){ return head },\r\n        getTail(){ return tail },\r\n        getCount(){ return count },\r\n        isEmpty(){ return count==0 },\r\n        reset(){ \r\n            tail=head=null; \r\n            count = 0; }\r\n    }\r\n}\r\n\r\nexport function DoublyLinkedCollection(getPrev, setPrev, getNext, setNext){\r\n    var list = [];\r\n    var head = null, tail = null;\r\n    return {\r\n        push(e){\r\n            list.push(e);\r\n            if (!tail){\r\n                head = tail = e;\r\n                setPrev(e, null);\r\n                setNext(e, null);\r\n            }\r\n            else {\r\n                setPrev(e, tail);\r\n                setNext(e, null);\r\n                setNext(tail, e);\r\n                tail = e;\r\n            }\r\n        },\r\n        add(e, key){\r\n            list.splice(key, 0, e);\r\n            if (!tail){\r\n                head = tail = e;\r\n                setPrev(e, null);\r\n                setNext(e, null);\r\n            }\r\n            else {\r\n                let next = list[key];\r\n                if (!next) {\r\n                    setPrev(e, tail);\r\n                    setNext(e, null);\r\n                    setNext(tail, e);\r\n                    tail = e;\r\n                } \r\n                else {\r\n                    if (next===head)\r\n                        head=e;\r\n                    let prev = getPrev(next);\r\n                    setNext(e, next);\r\n                    setPrev(next, e);\r\n                    if (prev){\r\n                        setPrev(e, prev);\r\n                        setNext(prev, e);\r\n                    } else {\r\n                        setPrev(e, null);\r\n                    }\r\n                } \r\n            }\r\n        },\r\n        get: (key) => list[key],\r\n        remove(key){\r\n            var e = list[key];\r\n            list.splice(key, 1);\r\n            let next = getNext(e);\r\n            let prev = getPrev(e);\r\n            if (prev) {\r\n                setNext(prev, next)\r\n            }\r\n            if (next) {\r\n                 setPrev(next, prev)\r\n            }\r\n            if (tail == e) {\r\n                tail = prev;\r\n            }\r\n            if (head == e) {\r\n                head = next; \r\n            }\r\n            return e;\r\n        }, \r\n        forLoop(f){\r\n            for(let i=0; i<list.length; i++)\r\n            {\r\n                let e = list[i];\r\n                f(e);\r\n            }\r\n        },\r\n        getHead(){ return head },\r\n        getTail(){ return tail },\r\n        getCount(){ return list.length },\r\n        isEmpty(){ return list.length==0 },\r\n        reset(){ \r\n            list=[];\r\n            tail=head=null; \r\n            }\r\n    }\r\n}\r\n\r\nexport function ArrayFacade(){\r\n    var list = [];\r\n    return {\r\n        push(e){\r\n            list.push(e);\r\n        },\r\n        add(e, key){\r\n            list.splice(key, 0, e);\r\n        },\r\n        get: (key) => list[key],\r\n        getNext: (key, predicate) => {\r\n            let count = list.length;\r\n            let start = key+1;\r\n            if (key<count) {\r\n                if (!predicate)\r\n                    return list[start];\r\n                for (let i = start; i < count; i++) {\r\n                    let c = list[i];\r\n                    if (predicate(c))\r\n                        return c;\r\n                }\r\n            }\r\n        },\r\n        remove(key){\r\n            var e = list[key];\r\n            list.splice(key, 1);\r\n            return e;\r\n        }, \r\n        forLoop(f){\r\n            for(let i=0; i<list.length; i++)\r\n            {\r\n                let e = list[i];\r\n                f(e, i);\r\n            }\r\n        },\r\n        getHead(){ return list[0] },\r\n        getCount(){ return list.length },\r\n        isEmpty(){ return list.length==0 },\r\n        reset(){ list=[];}\r\n    }\r\n}\r\n\r\nexport function composeSync(...functions){\r\n    return () => \r\n        functions.forEach(\r\n        (f) => {\r\n            if (f)\r\n                f();\r\n        }\r\n    )\r\n}\r\n\r\nexport function defCall(...functions){\r\n    for (let f of functions) \r\n        if (f) {\r\n            if (f instanceof Function){\r\n                let tmp =  f();\r\n                if (tmp)\r\n                    return tmp;\r\n            }\r\n            else\r\n                return f \r\n        }\r\n}\r\n\r\nexport function ObservableValue(value){\r\n    var list = List();\r\n    return {\r\n        getValue(){\r\n            return value;\r\n        },\r\n        setValue(newValue){\r\n            value = newValue;\r\n            list.forEach(f=>f(newValue));\r\n        },\r\n        attach(f){\r\n            return list.add(f)\r\n        },\r\n        detachAll(){\r\n            list.reset();\r\n        }\r\n    }\r\n}\r\n\r\nexport function ObservableLambda(func){\r\n    var list = List();\r\n    var value = func();\r\n    return {\r\n        getValue(){\r\n            return value;\r\n        },\r\n        call(){\r\n            value = func();\r\n            list.forEach(f=>f(value));\r\n        },\r\n        attach(f){\r\n            return list.add(f)\r\n        },\r\n        detachAll(){\r\n            list.reset();\r\n        }\r\n    }\r\n}\r\n\r\n// export function ObjectValues(object){ // Object.values(plugins) - problem for IE11; full impementation of polifill is mor complex, but for our purpose this is enough\r\n//     var arr = [];\r\n// \tfor (var key in object) {\r\n//         arr.push(object[key]);\r\n// \t}\r\n// \treturn arr;\r\n// }\r\n\r\nexport function ObjectValuesEx(object){ \r\n    var arr = [];\r\n\tfor (var key in object) {\r\n        arr.push({key:key, value:object[key]});\r\n\t}\r\n\treturn arr;\r\n}","import {shallowClearClone, isString} from './ToolsJs';\r\n\r\nexport function addStyling(element, styling){\r\n    var backupStyling = {classes:[], styles:{}}\r\n    if (styling) {\r\n        var {classes, styles} = styling;\r\n        classes.forEach(e => element.classList.add(e)) // todo use add(classes)\r\n        backupStyling.classes = classes.slice();\r\n        for (let property in styles){\r\n            backupStyling.styles[property] = element.style[property];\r\n            element.style[property] = styles[property]; // todo use Object.assign (need polyfill for IE11)\r\n        }\r\n    }\r\n    return backupStyling;\r\n}\r\n\r\nfunction removeStyling(element, styling){\r\n    if (styling) {\r\n        var {classes, styles} = styling;\r\n        classes.forEach(e=>element.classList.remove(e)) // todo use remove(classes)\r\n        for (let property in styles)\r\n            element.style[property]  = styles[property]; // todo use Object.assign (need polyfill for IE11)\r\n    }\r\n}\r\n\r\nexport function toggleStyling(element, styling){\r\n    var backupStyling = {classes:[], styles:{}};\r\n    var isOn=false;\r\n    var isF = styling instanceof Function;\r\n    return (value, force)=>{\r\n        if (value) {\r\n            if (isOn===false){\r\n                backupStyling = addStyling(element, isF?styling():styling)\r\n                isOn=true;\r\n            } else if (force){\r\n                removeStyling(element, backupStyling);\r\n                backupStyling =addStyling(element, isF?styling():styling)\r\n            }\r\n        } else {\r\n            if (isOn===true || force===true){\r\n                removeStyling(element, backupStyling);\r\n                isOn=false;\r\n            } \r\n        }\r\n    }\r\n}\r\n\r\nfunction extendClasses(out, param, actionStr, actionArr, isRemoveEmptyClasses){\r\n    if (isString(param)){\r\n        if (param === \"\"){\r\n            if (isRemoveEmptyClasses){\r\n                out.classes = [];\r\n            }\r\n        } else {\r\n            let c = param.split(' ');\r\n            out.classes = actionStr(c);\r\n        }\r\n        return true;\r\n    } else if (param instanceof Array){\r\n        if (param.length==0){\r\n            if (isRemoveEmptyClasses){\r\n                out.classes = [];\r\n            }\r\n        }\r\n        else{\r\n            out.classes = actionArr(param);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction extend(value, param, actionStr, actionArr, actionObj, isRemoveEmptyClasses){\r\n    var success = extendClasses(value, param, actionStr, actionArr, isRemoveEmptyClasses);\r\n    if (success === false){\r\n        if (param instanceof Object){\r\n            var {classes, styles} = param;\r\n            extendClasses(value, classes, actionStr, actionArr, isRemoveEmptyClasses);\r\n            \r\n            if (styles) {\r\n                value.styles = actionObj(styles);\r\n            } else if (!classes) {\r\n                value.styles = actionObj(param)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function Styling(param){\r\n    var value = {classes:[], styles:{}};\r\n    if (param){\r\n        extend(value, param, a=>a, a=>a.slice(), o=>shallowClearClone(o), true);\r\n    }\r\n    return Object.freeze(value);\r\n}\r\n\r\nfunction createStyling(isReplace, param, ...params){\r\n    var value = {classes:[], styles:{}};\r\n    if (param){\r\n        extend(value, param, a=>a, a=>a.slice(), o=>shallowClearClone(o),true);\r\n        if (params){\r\n            var {classes, styles} = value;\r\n            var extendInt = isReplace? (p)=>extend(value, p, s=>s, a=>a.slice(), o=> shallowClearClone(styles, o),true):\r\n                (p)=>extend(value, p, a=>classes.concat(a), a=>classes.concat(a), o=>shallowClearClone(styles, o),false)\r\n            params.forEach(p=> extendInt(p));\r\n        }\r\n    }\r\n    return Styling(value);\r\n}\r\n\r\nexport function createCss(stylings1, stylings2){\r\n    var destination = {};\r\n    for (let property in stylings1) {\r\n        let param1 = stylings1[property];\r\n\r\n        let param2 = stylings2?stylings2[property]:undefined;\r\n        if (param2===undefined)\r\n            destination[property] = Styling(param1)\r\n        else{\r\n            destination[property] = createStyling(true, param1, param2); \r\n        }\r\n    }\r\n    if (stylings2)\r\n        for (let property in stylings2) {\r\n            if (!stylings1[property])\r\n                destination[property] = Styling(stylings2[property])\r\n        }\r\n    return destination;\r\n}\r\n\r\nexport function extendCss(stylings1, stylings2){\r\n    for (let property in stylings2) {\r\n        let param2 = stylings2[property];\r\n        let param1 = stylings1[property];\r\n        if (param1 === undefined)\r\n            stylings1[property] = Styling(param2)\r\n        else{\r\n            stylings1[property] = createStyling(false, param1, param2); \r\n        }\r\n    }\r\n}","import  {EventBinder} from './ToolsDom';\r\nimport  {addStyling, toggleStyling} from './ToolsStyling';\r\n\r\nfunction PickDomFactoryPlugCss(css){\r\n    css.pickContent = '';\r\n    css.pickContent_disabled = 'disabled';\r\n}\r\n\r\nexport function PickDomFactoryPlugCssBs4(css){\r\n    PickDomFactoryPlugCss(css)\r\n    css.pickButton = 'close';\r\n}\r\n\r\nexport function PickDomFactoryPlugCssBs5(css){\r\n    PickDomFactoryPlugCss(css)\r\n    css.pickButton = 'btn-close';\r\n}\r\n\r\nfunction PickDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.pickContent_disabled = {opacity: '.65'};\r\n}\r\n\r\nexport function PickDomFactoryPlugCssPatchBs4(cssPatch){\r\n    PickDomFactoryPlugCssPatch(cssPatch);\r\n    cssPatch.pickButton = {float : \"none\", fontSize:'1.5em', lineHeight: '.9em', };\r\n}\r\n\r\nexport function PickDomFactoryPlugCssPatchBs5(cssPatch){\r\n    PickDomFactoryPlugCssPatch(cssPatch);\r\n    cssPatch.pickButton = {float : \"none\", fontSize:'0.8em', verticalAlign: \"text-top\"};\r\n}\r\n\r\nexport function PickDomFactory(css, createElementAspect, optionPropertiesAspect, pickButtonAspect){\r\n    return { \r\n        create(pickElement, wrap, remove){\r\n            let buttonHTML = pickButtonAspect.getButtonHTML();\r\n            createElementAspect.createElementFromHtml(pickElement, '<span></span>'+buttonHTML);\r\n            let pickContentElement = pickElement.querySelector('SPAN');\r\n            let pickButtonElement  = pickElement.querySelector('BUTTON');\r\n            let eventBinder = EventBinder();\r\n            eventBinder.bind(pickButtonElement, \"click\", remove);\r\n            \r\n            addStyling(pickContentElement, css.pickContent);\r\n            addStyling(pickButtonElement, css.pickButton);\r\n            let disableToggle = toggleStyling(pickContentElement, css.pickContent_disabled);\r\n\r\n            function updateData(){\r\n                pickContentElement.textContent = optionPropertiesAspect.getText(wrap.option); \r\n            }\r\n            function updateDisabled(){\r\n                disableToggle(wrap.isOptionDisabled)\r\n            }\r\n\r\n            return {\r\n                pickDom:{\r\n                    pickContentElement,\r\n                    pickButtonElement,\r\n                },\r\n                pickDomManagerHandlers:{\r\n                    updateData,\r\n                    updateDisabled,\r\n                },\r\n                dispose(){\r\n                    eventBinder.unbind();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {addStyling, toggleStyling} from './ToolsStyling';\r\n\r\nexport function PicksDomFactory(css, createElementAspect){\r\n    return {\r\n        create(picksElement, isDisposablePicksElementFlag){\r\n            var pickFilterElement  = createElementAspect.createElement('LI');\r\n    \r\n            addStyling(picksElement,      css.picks);\r\n            addStyling(pickFilterElement, css.pickFilter);\r\n        \r\n            let disableToggleStyling = toggleStyling(picksElement, css.picks_disabled);\r\n            let focusToggleStyling   = toggleStyling(picksElement, css.picks_focus);\r\n            let isFocusIn = false;\r\n        \r\n            return {\r\n                picksElement,\r\n                isDisposablePicksElementFlag,\r\n                pickFilterElement,\r\n\r\n                createPickElement(){\r\n                    var pickElement = createElementAspect.createElement('LI');\r\n                    addStyling(pickElement, css.pick);\r\n                    return {\r\n                        pickElement, \r\n                        attach: (beforeElement) => picksElement.insertBefore(pickElement, beforeElement??pickFilterElement),\r\n                        detach: () => picksElement.removeChild(pickElement)\r\n                    };\r\n                },\r\n                disable(isComponentDisabled){\r\n                    disableToggleStyling(isComponentDisabled)\r\n                },\r\n                toggleFocusStyling(){\r\n                    focusToggleStyling(isFocusIn)\r\n                },\r\n                getIsFocusIn(){\r\n                    return isFocusIn;\r\n                },\r\n                setIsFocusIn(newIsFocusIn){\r\n                    isFocusIn = newIsFocusIn\r\n                }, \r\n                dispose(){\r\n                    if (!isDisposablePicksElementFlag){\r\n                        disableToggleStyling(false)\r\n                        focusToggleStyling(false)\r\n\r\n                        if (pickFilterElement.parentNode)\r\n                            pickFilterElement.parentNode.removeChild(pickFilterElement)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function PicksDomFactoryPlugCss(css){\r\n    css.picks = 'form-control';\r\n    css.pickFilter = '';\r\n    css.picks_disabled = 'disabled';\r\n    css.picks_focus = 'focus';\r\n    css.pick = 'badge';\r\n}\r\n\r\nfunction PicksDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.picks = {listStyleType:'none', display:'flex', flexWrap:'wrap',  height: 'auto', marginBottom: '0',cursor: 'text'},\r\n    cssPatch.picks_disabled =  {backgroundColor: '#e9ecef'};\r\n    cssPatch.picks_focus = {borderColor: '#80bdff', boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'};\r\n}\r\n\r\nexport function PicksDomFactoryPlugCssPatchBs4(cssPatch){\r\n    PicksDomFactoryPlugCssPatch(cssPatch)\r\n    cssPatch.pick = {paddingLeft: '0', paddingRight: '.5rem', paddingInlineStart:'0', paddingInlineEnd:'0.5rem', lineHeight: '1.5em'};\r\n}\r\n\r\nexport function PicksDomFactoryPlugCssPatchBs5(cssPatch){\r\n    PicksDomFactoryPlugCssPatch(cssPatch)\r\n    cssPatch.pick = {paddingLeft: '0', paddingRight: '.5rem', paddingInlineStart:'0', paddingInlineEnd:'0.5rem', color:'var(--bs-dark)'};\r\n}","import {EventBinder} from './ToolsDom';\r\nimport {addStyling, toggleStyling} from './ToolsStyling';\r\n\r\nexport function ChoiceDomFactory(css, createElementAspect,  optionPropertiesAspect){\r\n    var updateDataInternal = function(wrap, element){\r\n        element.textContent = optionPropertiesAspect.getText(wrap.option);\r\n    }\r\n    //TODO move check which aspects availbale like wrap.hasOwnProperty(\"isOptionSelected\") to there\r\n    return {\r\n        create(choiceElement, wrap, toggle){\r\n            let choiceDom = null;\r\n            let choiceDomManagerHandlers = null;\r\n            let eventBinder = EventBinder();\r\n                eventBinder.bind(choiceElement, \"click\",  toggle);\r\n            \r\n            if (wrap.hasOwnProperty(\"isOptionSelected\")){\r\n                createElementAspect.createElementFromHtml(choiceElement, '<div><input formnovalidate type=\"checkbox\"><label></label></div>');\r\n                \r\n                let choiceContentElement = choiceElement.querySelector('DIV');\r\n                let choiceCheckBoxElement = choiceContentElement.querySelector('INPUT');\r\n                let choiceLabelElement = choiceContentElement.querySelector('LABEL');\r\n                \r\n                addStyling(choiceContentElement,  css.choiceContent); \r\n                addStyling(choiceCheckBoxElement, css.choiceCheckBox); \r\n                addStyling(choiceLabelElement,    css.choiceLabel); \r\n\r\n                choiceDom = {\r\n                    choiceElement,\r\n                    choiceContentElement,\r\n                    choiceCheckBoxElement,\r\n                    choiceLabelElement\r\n                };\r\n                \r\n                let choiceSelectedToggle = toggleStyling(choiceElement, css.choice_selected);\r\n                let updateSelected = function(){ \r\n                    choiceSelectedToggle(wrap.isOptionSelected);\r\n                    choiceCheckBoxElement.checked = wrap.isOptionSelected;\r\n                    if (wrap.isOptionDisabled || wrap.choice.isHoverIn){\r\n                        choiceHoverToggle(wrap.choice.isHoverIn, true);\r\n                    }\r\n                }\r\n\r\n                let choiceDisabledToggle = toggleStyling(choiceElement, css.choice_disabled);\r\n                let choiceCheckBoxDisabledToggle = toggleStyling(choiceCheckBoxElement, css.choiceCheckBox_disabled);\r\n                let choiceLabelDisabledToggle = toggleStyling(choiceLabelElement, css.choiceLabel_disabled);\r\n                let choiceCursorDisabledToggle = toggleStyling(choiceElement, {classes:[], styles:{cursor:\"default\"}}); \r\n                let updateDisabled = function(){\r\n                    choiceDisabledToggle(wrap.isOptionDisabled);\r\n                    choiceCheckBoxDisabledToggle(wrap.isOptionDisabled);\r\n                    choiceLabelDisabledToggle(wrap.isOptionDisabled);\r\n    \r\n                    // do not desable checkBox if option is selected! there should be possibility to unselect \"disabled\"\r\n                    let isCheckBoxDisabled = wrap.isOptionDisabled && !wrap.isOptionSelected;\r\n                    choiceCheckBoxElement.disabled = isCheckBoxDisabled;\r\n                    choiceCursorDisabledToggle(isCheckBoxDisabled);\r\n                }\r\n\r\n                let choiceHoverToggle    = toggleStyling(choiceElement, ()=>{\r\n                    if (css.choice_disabled_hover &&  wrap.isOptionDisabled===true && wrap.isOptionSelected===false)\r\n                        return css.choice_disabled_hover;\r\n                    else\r\n                        return css.choice_hover;\r\n                });\r\n                let updateHoverIn = function(){\r\n                    choiceHoverToggle(wrap.choice.isHoverIn);\r\n                }\r\n\r\n                choiceDomManagerHandlers = {\r\n                    updateData: ()=>updateDataInternal(wrap, choiceLabelElement),\r\n                    updateHoverIn,\r\n                    updateDisabled,\r\n                    updateSelected, \r\n                }\r\n            }else{\r\n                let choiceHoverToggle    = toggleStyling(choiceElement, ()=>\r\n                    (wrap.isOptionDisabled && css.choice_disabled_hover)?css.choice_disabled_hover:css.choice_hover);\r\n                \r\n                let updateHoverIn = function(){\r\n                    choiceHoverToggle(wrap.choice.isHoverIn);\r\n                }\r\n                choiceElement.innerHTML = '<span></span>';\r\n                let choiceContentElement = choiceElement.querySelector('SPAN');\r\n                choiceDom = {\r\n                    choiceElement,\r\n                    choiceContentElement,\r\n                };\r\n                choiceDomManagerHandlers = {\r\n                    updateData: ()=>updateDataInternal(wrap, choiceContentElement),\r\n                    updateHoverIn\r\n                }\r\n            }\r\n            \r\n            return {\r\n                choiceDom,\r\n                choiceDomManagerHandlers, \r\n                dispose(){\r\n                    eventBinder.unbind();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ChoiceDomFactoryPlugCss(css){\r\n    css.choiceCheckBox_disabled = 'disabled'; //  not bs, in scss as 'ul.form-control li .custom-control-input.disabled ~ .custom-control-label'\r\n    css.choiceLabel_disabled = '';\r\n    css.choice_disabled_hover  = '';\r\n    css.choice_hover = 'hover'; //  not bs, in scss as 'ul.dropdown-menu li.hover'\r\n}\r\n\r\nexport function ChoiceDomFactoryPlugCssBs4(css){\r\n    ChoiceDomFactoryPlugCss(css)\r\n    css.choiceCheckBox = 'custom-control-input';\r\n    css.choiceContent = 'custom-control custom-checkbox d-flex';\r\n    css.choiceLabel = 'custom-control-label justify-content-start';\r\n    css.choice_selected = '';\r\n    css.choice_disabled = '';\r\n}\r\n\r\nexport function ChoiceDomFactoryPlugCssBs5(css){\r\n    ChoiceDomFactoryPlugCss(css)\r\n    css.choiceCheckBox = 'form-check-input'; // bs\r\n    css.choiceContent = 'form-check'; // bs d-flex required for rtl to align items\r\n    css.choiceLabel = 'form-check-label';\r\n    css.choice_selected = 'selected'; //  not bs,\r\n    css.choice_disabled = 'disabled'; //  not bs,\r\n}\r\n\r\nexport function ChoiceDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.choiceCheckBox = {color: 'inherit', cursor:'inherit'};\r\n    cssPatch.choiceContent = {justifyContent: 'flex-start', cursor:'inherit'}; // BS problem: without this on inline form menu items justified center\r\n    cssPatch.choiceLabel = {color: 'inherit', cursor:'inherit'}; // otherwise BS .was-validated set its color\r\n    cssPatch.choiceLabel_disabled = {opacity: '.65'};  // more flexible than {color: '#6c757d'}; note: avoid opacity on pickElement's border; TODO write to BS4 \r\n    cssPatch.choice_disabled_hover  = 'bg-light';\r\n    cssPatch.choice_hover = 'text-primary bg-light';\r\n}\r\n\r\n","import {addStyling} from './ToolsStyling';\r\n\r\nexport function ChoicesDomFactory(css, createElementAspect) {\r\n    return {\r\n        create(){\r\n            var choicesElement = createElementAspect.createElement('DIV');\r\n            var choicesListElement = createElementAspect.createElement('UL');\r\n            \r\n            choicesElement.appendChild(choicesListElement);\r\n            choicesElement.style.display = 'none';\r\n\r\n            addStyling(choicesElement, css.choices);\r\n            addStyling(choicesListElement, css.choicesList);\r\n            \r\n            return {\r\n                choicesElement,\r\n                choicesListElement,\r\n                createChoiceElement(){\r\n                    var choiceElement = createElementAspect.createElement('LI');\r\n                    addStyling(choiceElement, css.choice);\r\n                    return {\r\n                        choiceElement,\r\n                        setVisible: (isVisible) => choiceElement.style.display = isVisible ? 'block': 'none',\r\n                        attach: (beforeElement) => choicesListElement.insertBefore(choiceElement, beforeElement),\r\n                        detach: () => choicesListElement.removeChild(choiceElement)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function ChoicesDomFactoryPlugCss(css){\r\n    css.choices = 'dropdown-menu';\r\n    css.choicesList = '';\r\n    css.choice = '';\r\n}\r\n\r\nexport function ChoicesDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.choicesList = {listStyleType:'none', paddingLeft:'0', paddingRight:'0', marginBottom:'0'};\r\n    cssPatch.choice = {classes:'px-md-2 px-1', styles:{cursor:'pointer'}};\r\n}","import {addStyling} from './ToolsStyling';\r\nimport {EventBinder} from './ToolsDom';\r\n\r\nexport function FilterDomFactory(css, createElementAspect){\r\n    return {\r\n        create(isDisposablePicksElementFlag){\r\n            var filterInputElement = createElementAspect.createElement('INPUT');\r\n            addStyling(filterInputElement, css.filterInput);\r\n        \r\n            filterInputElement.setAttribute(\"type\",\"search\");\r\n            filterInputElement.setAttribute(\"autocomplete\",\"off\");\r\n            var eventBinder = EventBinder();\r\n\r\n            return {\r\n                filterInputElement,\r\n                isEmpty(){return filterInputElement.value ? false : true},\r\n                setEmpty(){\r\n                    filterInputElement.value ='';\r\n                },\r\n                getValue(){\r\n                    return filterInputElement.value;\r\n                },\r\n                setFocus(){\r\n                    filterInputElement.focus();\r\n                },\r\n                setWidth(text){\r\n                    filterInputElement.style.width = text.length * 1.3 + 2 + \"ch\"\r\n                },\r\n                // TODO: check why I need this comparision? \r\n                setFocusIfNotTarget(target){\r\n                    if (target != filterInputElement)\r\n                        filterInputElement.focus();\r\n                },\r\n                onInput(onFilterInputInput){\r\n                    eventBinder.bind(filterInputElement,'input',    onFilterInputInput);\r\n                },\r\n                onFocusIn(onFocusIn){\r\n                    eventBinder.bind(filterInputElement,'focusin',  onFocusIn);\r\n                },\r\n                onFocusOut(onFocusOut){\r\n                    eventBinder.bind(filterInputElement,'focusout', onFocusOut);\r\n                },\r\n                onKeyDown(onfilterInputKeyDown){\r\n                    eventBinder.bind(filterInputElement,'keydown',  onfilterInputKeyDown);    \r\n                },\r\n                onKeyUp(onFilterInputKeyUp){\r\n                    eventBinder.bind(filterInputElement,'keyup',    onFilterInputKeyUp);\r\n                },\r\n                dispose(){\r\n                    eventBinder.unbind();\r\n                    if (!isDisposablePicksElementFlag){\r\n                        if (filterInputElement.parentNode)\r\n                            filterInputElement.parentNode.removeChild(filterInputElement)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function FilterDomFactoryPlugCss(css){\r\n    css.filterInput = '';\r\n}\r\n\r\nexport function FilterDomFactoryPlugCssPatch(cssPatch){\r\n    cssPatch.filterInput = {\r\n        border:'0px', height: 'auto', boxShadow:'none', \r\n        padding:'0', margin:'0', \r\n        outline:'none', backgroundColor:'transparent',\r\n        backgroundImage: 'none' // otherwise BS .was-validated set its image\r\n    };\r\n}\r\n","import {PickDomFactoryPlugCssBs5, PickDomFactoryPlugCssBs4} from './PickDomFactory'\r\nimport {PicksDomFactoryPlugCss} from './PicksDomFactory'\r\nimport {ChoiceDomFactoryPlugCssBs5, ChoiceDomFactoryPlugCssBs4} from './ChoiceDomFactory'\r\nimport {ChoicesDomFactoryPlugCss} from './ChoicesDomFactory'\r\nimport {FilterDomFactoryPlugCss} from './FilterDomFactory'\r\n\r\nexport function createDefaultCssBs5(){\r\n    var defaultCss={};\r\n    PickDomFactoryPlugCssBs5(defaultCss)\r\n    PicksDomFactoryPlugCss(defaultCss)\r\n    ChoiceDomFactoryPlugCssBs5(defaultCss)\r\n    ChoicesDomFactoryPlugCss(defaultCss)\r\n    FilterDomFactoryPlugCss(defaultCss)\r\n    return defaultCss;\r\n}\r\n\r\nexport function createDefaultCssBs4(){ \r\n    var defaultCss={}\r\n    PickDomFactoryPlugCssBs4(defaultCss)\r\n    PicksDomFactoryPlugCss(defaultCss)\r\n    ChoiceDomFactoryPlugCssBs4(defaultCss)\r\n    ChoicesDomFactoryPlugCss(defaultCss)\r\n    FilterDomFactoryPlugCss(defaultCss)\r\n    return defaultCss;\r\n}","import {closestByClassName, siblingsAsArray} from '../ToolsDom';\r\nimport {addStyling} from '../ToolsStyling'\r\nimport {ObservableLambda, composeSync} from '../ToolsJs';\r\n\r\nexport function BsAppearancePlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){ \r\n    return (aspects) => {\r\n        return {\r\n            // TODO, LabelElement should be moved to StaticDomFactory and staticDom \r\n            preLayout: () => {\r\n                var {getLabelAspect, staticDom} = aspects; \r\n                var {selectElement} = staticDom;\r\n                var {getDefaultLabel} = configuration;\r\n                let origLabelAspectGetLabel = getLabelAspect.getLabel; \r\n                getLabelAspect.getLabel = () => {\r\n                    var e = origLabelAspectGetLabel();\r\n                    if (e)\r\n                        return e;\r\n                    else{\r\n                        if (selectElement){\r\n                            let labelElement = getDefaultLabel(selectElement);\r\n                            return labelElement;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            layout: () => {\r\n                let {validationApiAspect, \r\n                    initialDom,\r\n                    picksDom, staticDom, updateAppearanceAspect, componentPropertiesAspect, floatingLabelAspect} = aspects;\r\n                let {getValidity, getSize, useCssPatch, css, composeGetSize} = configuration;\r\n                \r\n                let selectElement = staticDom.selectElement;\r\n                \r\n                let initialElement = initialDom.initialElement;\r\n                \r\n                let isFloatingLabel = false;\r\n                if (floatingLabelAspect){\r\n                    isFloatingLabel =  closestByClassName(initialElement, 'form-floating');\r\n                    floatingLabelAspect.isFloatingLabel = () => isFloatingLabel\r\n                }\r\n            \r\n                if (staticDom.selectElement) {\r\n                    if(!getValidity)\r\n                        getValidity = composeGetValidity(selectElement)\r\n                    if(!getSize) \r\n                        getSize = composeGetSize(selectElement)\r\n                } else {\r\n                    if (!getValidity)\r\n                        getValidity = () => null\r\n                    if (!getSize)\r\n                        getSize = () => null\r\n                }\r\n            \r\n                componentPropertiesAspect.getSize=getSize;\r\n            \r\n                componentPropertiesAspect.getValidity=getValidity;\r\n            \r\n                var updateSize;\r\n                if (!useCssPatch){\r\n                    updateSize= () => updateSizeForAdapter(picksDom.picksElement, getSize)\r\n                }\r\n                else{\r\n                    let {picks_lg, picks_sm, picks_def, picks_floating_def} = css;\r\n                    if (isFloatingLabel)\r\n                        picks_lg = picks_sm = picks_def = picks_floating_def;\r\n                    updateSize = () => updateSizeJsForAdapter(picksDom.picksElement, picks_lg, picks_sm, picks_def,  getSize);\r\n                }\r\n            \r\n                if (useCssPatch){\r\n                    var origToggleFocusStyling = picksDom.toggleFocusStyling;\r\n                    picksDom.toggleFocusStyling = () => {\r\n                        var validity =  validationObservable.getValue();\r\n                        var isFocusIn = picksDom.getIsFocusIn();\r\n                        origToggleFocusStyling(isFocusIn)\r\n                        if (isFocusIn){\r\n                            if (validity===false) { \r\n                                // but not toggle events (I know it will be done in future)\r\n                                picksDom.setIsFocusIn(isFocusIn);\r\n                                \r\n                                addStyling(picksDom.picksElement, css.picks_focus_invalid)\r\n                            } else if (validity===true) {\r\n                                // but not toggle events (I know it will be done in future)\r\n                                picksDom.setIsFocusIn(isFocusIn);\r\n                                \r\n                                addStyling(picksDom.picksElement, css.picks_focus_valid)  \r\n                            }              \r\n                        }\r\n                    }\r\n                }\r\n            \r\n                var getWasValidated = () => {\r\n                    var wasValidatedElement = closestByClassName(initialElement, 'was-validated');\r\n                    return wasValidatedElement?true:false;\r\n                }\r\n                var wasUpdatedObservable = ObservableLambda(()=>getWasValidated());\r\n                var getManualValidationObservable = ObservableLambda(()=>getValidity());\r\n                let validationApiObservable = validationApiAspect?.validationApiObservable;\r\n                \r\n                var validationObservable = ObservableLambda(\r\n                    () => wasUpdatedObservable.getValue()?validationApiObservable.getValue():getManualValidationObservable.getValue()\r\n                )\r\n                \r\n                validationObservable.attach(\r\n                    (value)=>{\r\n                        var  {validMessages, invalidMessages} = getMessagesElements(staticDom.containerElement);\r\n                        updateValidity(picksDom.picksElement, validMessages, invalidMessages, value);\r\n                        picksDom.toggleFocusStyling();\r\n                    }\r\n                )\r\n                wasUpdatedObservable.attach(\r\n                    ()=>validationObservable.call()\r\n                )\r\n                if (validationApiObservable)\r\n                    validationApiObservable.attach(\r\n                        ()=>validationObservable.call()\r\n                    )\r\n                getManualValidationObservable.attach(\r\n                    ()=>validationObservable.call()\r\n                )\r\n                \r\n                updateAppearanceAspect.updateAppearance = composeSync(\r\n                    updateAppearanceAspect.updateAppearance, \r\n                    updateSize, \r\n                    validationObservable.call, \r\n                    getManualValidationObservable.call);\r\n                \r\n                return {\r\n                    buildApi(api){\r\n                        api.updateSize=updateSize;\r\n                        api.updateValidity=()=>getManualValidationObservable.call();\r\n                        api.updateWasValidated=()=>wasUpdatedObservable.call();\r\n                    },\r\n                    dispose(){\r\n                        wasUpdatedObservable.detachAll();\r\n                        validationObservable.detachAll();\r\n                        getManualValidationObservable.detachAll();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateValidity(picksElement, validMessages, invalidMessages, validity){\r\n    if (validity===false){\r\n        picksElement.classList.add('is-invalid');\r\n        picksElement.classList.remove('is-valid');\r\n        invalidMessages.map(e=>e.style.display='block'); \r\n        validMessages.map(e=>e.style.display='none');      \r\n    }\r\n    else if (validity===true){\r\n        picksElement.classList.remove('is-invalid');\r\n        picksElement.classList.add('is-valid');\r\n        invalidMessages.map(e=>e.style.display='none'); \r\n        validMessages.map(e=>e.style.display='block'); \r\n    }else {\r\n        picksElement.classList.remove('is-invalid');\r\n        picksElement.classList.remove('is-valid');\r\n        invalidMessages.map(e=>e.style.display=''); \r\n        validMessages.map(e=>e.style.display=''); \r\n    }\r\n}\r\n\r\nfunction updateSizeClasses(picksElement, size){\r\n    if (size==\"lg\"){\r\n        picksElement.classList.add('form-control-lg');\r\n        picksElement.classList.remove('form-control-sm');\r\n    }\r\n    else if (size==\"sm\"){\r\n        picksElement.classList.remove('form-control-lg');\r\n        picksElement.classList.add('form-control-sm');\r\n    }\r\n    else{\r\n        picksElement.classList.remove('form-control-lg');\r\n        picksElement.classList.remove('form-control-sm');\r\n    }\r\n}\r\n\r\nfunction updateSizeJsPicks(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, size){\r\n    if (size==\"lg\"){\r\n        addStyling(picksElement, picksLgStyling);\r\n    } else if (size==\"sm\"){\r\n        addStyling(picksElement, picksSmStyling);\r\n    } else {\r\n        addStyling(picksElement, picksDefStyling);\r\n    }\r\n}\r\n\r\nfunction updateSizeJs(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, size){\r\n    updateSizeClasses(picksElement, size);\r\n    updateSizeJsPicks(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, size)\r\n}\r\n\r\nfunction updateSizeForAdapter(picksElement, getSize){\r\n    updateSizeClasses(picksElement, getSize())\r\n}\r\n\r\nfunction updateSizeJsForAdapter(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, getSize){\r\n    updateSizeJs(picksElement, picksLgStyling, picksSmStyling, picksDefStyling, getSize())\r\n}\r\n\r\nfunction getMessagesElements(containerElement){\r\n    var siblings = siblingsAsArray(containerElement);\r\n    var invalidMessages =  siblings.filter(e=>e.classList.contains('invalid-feedback') || \r\n        e.classList.contains('invalid-tooltip'));\r\n    var validMessages =  siblings.filter(e=>e.classList.contains('valid-feedback') || \r\n        e.classList.contains('valid-tooltip'));\r\n    return {validMessages, invalidMessages}    \r\n} \r\n\r\nfunction composeGetValidity(selectElement){\r\n    var getValidity = () => \r\n        selectElement.classList.contains('is-invalid')?false:\r\n        (selectElement.classList.contains('is-valid')?true:null);\r\n    return getValidity;\r\n}","import {closestByClassName} from '../ToolsDom'\r\nimport {BsAppearancePlugin} from './BsAppearancePlugin'\r\n\r\nexport function BsAppearanceBs4Plugin(defaults) {\r\n    defaults.pickButtonHTML = '<button aria-label=\"Remove\" tabIndex=\"-1\" type=\"button\"><span aria-hidden=\"true\">&times;</span></button>';\r\n    defaults.composeGetSize = composeGetSize; // BsAppearancePlugin\r\n    defaults.getDefaultLabel = getDefaultLabel; // FloatingLabelPlugin, BsAppearancePlugin\r\n    return BsAppearancePlugin();\r\n}\r\n\r\nfunction composeGetSize(element){\r\n    let inputGroupElement = closestByClassName(element, 'input-group');\r\n    let getSize = null;\r\n    if (inputGroupElement){\r\n        getSize = function(){\r\n            var value = null;\r\n            if (inputGroupElement.classList.contains('input-group-lg'))\r\n                value = 'lg';\r\n            else if (inputGroupElement.classList.contains('input-group-sm'))\r\n                value = 'sm';\r\n            return value;\r\n        }\r\n    }\r\n    else{ \r\n        getSize = function(){\r\n            var value = null;\r\n            if (element.classList.contains('custom-select-lg') || element.classList.contains('form-control-lg'))\r\n                value = 'lg';\r\n            else if (element.classList.contains('custom-select-sm') || element.classList.contains('form-control-sm'))\r\n                value = 'sm'; \r\n            return value;\r\n        }\r\n    }\r\n    return getSize;\r\n}\r\n\r\nfunction getDefaultLabel(element){\r\n    let value = null;\r\n    let formGroup = closestByClassName(element,'form-group');\r\n    if (formGroup) \r\n        value = formGroup.querySelector(`label[for=\"${element.id}\"]`);\r\n    return value;\r\n}","export function BsAppearanceBs4CssPatchPlugin(defaults){\r\n    let cssPatch = defaults.cssPatch;\r\n    cssPatch.picks_def = {minHeight: 'calc(2.25rem + 2px)'};\r\n    cssPatch.picks_lg = {minHeight: 'calc(2.875rem + 2px)'};\r\n    cssPatch.picks_sm = {minHeight: 'calc(1.8125rem + 2px)'};\r\n\r\n    cssPatch.picks_focus_valid = {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)'};\r\n    cssPatch.picks_focus_invalid = {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)'};           \r\n}","import {defCall, composeSync} from '../ToolsJs';\r\n\r\nexport function LabelForAttributePlugin(defaults){\r\n    defaults.label = null;\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    var getLabelAspect = {getLabel : ()=>defCall(configuration.label)}\r\n    var createFilterInputElementIdAspect = {\r\n        createFilterInputElementId : ()=>defCall(configuration.filterInputElementId),\r\n    }; \r\n    return (aspects) => {\r\n        aspects.getLabelAspect = getLabelAspect;\r\n        aspects.createFilterInputElementIdAspect = createFilterInputElementIdAspect;\r\n        return {\r\n            layout: () => {\r\n                var {filterDom, loadAspect, disposeAspect, staticDom} = aspects;\r\n\r\n                loadAspect.load = composeSync(loadAspect.load, ()=>{\r\n                    let {filterInputElement} = filterDom;\r\n\r\n                    let labelElement =  getLabelAspect.getLabel(); \r\n                    if (labelElement){\r\n                        let backupedForAttribute = labelElement.getAttribute('for');\r\n                        var inputId = createFilterInputElementIdAspect.createFilterInputElementId();\r\n                    \r\n                        if (!inputId){\r\n                            let {containerClass} = configuration;\r\n                            let {containerElement} = staticDom;\r\n                            inputId =`${containerClass}-generated-filter-${containerElement.id}` \r\n                        }\r\n                        filterInputElement.setAttribute('id', inputId);\r\n                        labelElement.setAttribute('for',inputId);\r\n                        if (backupedForAttribute){\r\n                            disposeAspect.dispose = composeSync(\r\n                                disposeAspect.dispose, \r\n                                () =>labelElement.setAttribute('for', backupedForAttribute)\r\n                            )\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}","\r\nimport {getIsRtl, AttributeBackup} from '../ToolsDom';\r\nimport {isBoolean} from '../ToolsJs';\r\n\r\nexport function RtlPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {popperRtlAspect, staticDom, initialDom} = aspects;\r\n                let {isRtl} = configuration;\r\n                let forceRtlOnContainer = false; \r\n                if (isBoolean(isRtl))\r\n                    forceRtlOnContainer = true;\r\n                else\r\n                    isRtl = getIsRtl(initialDom.initialElement);\r\n            \r\n                var attributeBackup = AttributeBackup();\r\n                if (forceRtlOnContainer){\r\n                    attributeBackup.set(staticDom.containerElement, \"dir\", \"rtl\");\r\n                }\r\n                else if (staticDom.selectElement){\r\n                    var dirAttributeValue = staticDom.selectElement.getAttribute(\"dir\");\r\n                    if (dirAttributeValue){\r\n                        attributeBackup.set(staticDom.containerElement, \"dir\", dirAttributeValue);\r\n                    }\r\n                }\r\n            \r\n                if (popperRtlAspect)\r\n                    popperRtlAspect.getIsRtl = () => isRtl;\r\n            \r\n                return {\r\n                    dispose(){\r\n                        attributeBackup.restore();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {EventBinder, closestByTagName} from '../ToolsDom';\r\n\r\nexport function FormResetPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                var {staticDom, updateDataAspect, environment} = aspects;\r\n\r\n                var eventBuilder = EventBinder();\r\n                if (staticDom.selectElement){\r\n                    var form = closestByTagName(staticDom.selectElement, 'FORM');\r\n                    if (form) {\r\n                        eventBuilder.bind(form, \r\n                            'reset', \r\n                            () => environment.window.setTimeout( ()=>updateDataAspect.updateData() ) );\r\n                    }\r\n                }\r\n                return {\r\n                    dispose(){\r\n                        eventBuilder.unbind();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {ObservableValue, ObservableLambda, defCall, isBoolean, composeSync} from '../ToolsJs';\r\nimport {getDataGuardedWithPrefix} from '../ToolsDom';\r\n\r\nconst defValueMissingMessage = 'Please select an item in the list'\r\n\r\nexport function ValidationApiPlugin(o){\r\n    preset(o);\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function preset(o){o.getValueRequired=() => false; o.valueMissingMessage='';}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        var getValueRequiredAspect = GetValueRequiredAspect(configuration.getValueRequired);\r\n        aspects.getValueRequiredAspect = getValueRequiredAspect;\r\n        return {\r\n            plugStaticDom: ()=>{\r\n                var {optionsAspect, initialDom} = aspects;\r\n                // TODO: required could be a function\r\n                let {getIsValueMissing, valueMissingMessage, required} = configuration;\r\n                if (!isBoolean(required))\r\n                   required = getValueRequiredAspect.getValueRequired(); \r\n                valueMissingMessage = defCall(valueMissingMessage,\r\n                   ()=> getDataGuardedWithPrefix(initialDom.initialElement,\"bsmultiselect\",\"value-missing-message\"),\r\n                   defValueMissingMessage)\r\n            \r\n                if (!getIsValueMissing) {\r\n                    getIsValueMissing = () => {\r\n                       let count = 0;\r\n                       let optionsArray = optionsAspect.getOptions();\r\n                       for (var i=0; i < optionsArray.length; i++) {\r\n                           if (optionsArray[i].selected) \r\n                               count++;\r\n                       }\r\n                       return count===0;\r\n                    }\r\n                }\r\n\r\n                var isValueMissingObservable = ObservableLambda(()=>required && getIsValueMissing());\r\n                var validationApiObservable  = ObservableValue(!isValueMissingObservable.getValue());\r\n                aspects.validationApiAspect = ValidationApiAspect(validationApiObservable);\r\n\r\n                return {\r\n                    layout: () => {\r\n                        var {onChangeAspect, updateDataAspect} = aspects;\r\n                        // TODO: required could be a function\r\n                        let {valueMissingMessage} = configuration;\r\n                        \r\n                        onChangeAspect.onChange = composeSync(isValueMissingObservable.call, onChangeAspect.onChange);\r\n                        updateDataAspect.updateData = composeSync(isValueMissingObservable.call, updateDataAspect.updateData); \r\n                   \r\n                        return {\r\n                            buildApi(api){\r\n                                var {triggerAspect, filterDom} = aspects;\r\n                                api.validationApi = ValidityApi(\r\n                                   filterDom.filterInputElement,  // !!\r\n                                   isValueMissingObservable, \r\n                                   valueMissingMessage,\r\n                                   (isValid)=>validationApiObservable.setValue(isValid),\r\n                                   triggerAspect.trigger\r\n                                );\r\n                            }\r\n                        }\r\n                    },\r\n                    dispose(){\r\n                        isValueMissingObservable.detachAll(); \r\n                        validationApiObservable.detachAll();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction GetValueRequiredAspect(getValueRequired){\r\n    return {\r\n        getValueRequired\r\n    }\r\n}\r\n\r\nfunction ValidationApiAspect(validationApiObservable){\r\n    return {\r\n        validationApiObservable\r\n    }\r\n}\r\n\r\nfunction ValidityApi(visibleElement, isValueMissingObservable, valueMissingMessage, onValid, trigger){\r\n    var customValidationMessage = \"\";\r\n    var validationMessage = \"\";\r\n    var validity = null;\r\n    var willValidate = true;\r\n    \r\n    function setMessage(valueMissing, customError){\r\n        validity = Object.freeze({\r\n            valueMissing,\r\n            customError,\r\n            valid: !(valueMissing || customError),\r\n        });\r\n        validationMessage = customError?customValidationMessage:(valueMissing?valueMissingMessage:\"\")\r\n        visibleElement.setCustomValidity(validationMessage);\r\n        onValid(validity.valid);\r\n    }\r\n\r\n    setMessage(isValueMissingObservable.getValue(), false);\r\n\r\n    isValueMissingObservable.attach(\r\n        (value) => {\r\n            setMessage(value, validity.customError);\r\n        }\r\n    );\r\n    var checkValidity = () => {\r\n        if (!validity.valid)\r\n            trigger('dashboardcode.multiselect:invalid')\r\n        return validity.valid;\r\n    }\r\n    return {\r\n        validationMessage,\r\n        willValidate,\r\n        validity,\r\n        setCustomValidity(message){\r\n            customValidationMessage = message;\r\n            setMessage(validity.valueMissing, customValidationMessage?true:false);\r\n        },\r\n        checkValidity,\r\n        reportValidity(){\r\n            visibleElement.reportValidity();\r\n            return checkValidity();\r\n        }\r\n    }\r\n}","export function HiddenOptionPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {createWrapAspect, isChoiceSelectableAspect,\r\n                    wrapsCollection, buildChoiceAspect, buildAndAttachChoiceAspect,\r\n                    countableChoicesListInsertAspect, countableChoicesList} = aspects;\r\n                \r\n                countableChoicesListInsertAspect.countableChoicesListInsert = (wrap, key) => {\r\n                    if ( !wrap.isOptionHidden ){\r\n                        let choiceNext = wrapsCollection.getNext(key, c=>!c.isOptionHidden );\r\n                        countableChoicesList.add(wrap, choiceNext)\r\n                    }\r\n                }\r\n            \r\n                let origBuildAndAttachChoice = buildAndAttachChoiceAspect.buildAndAttachChoice;\r\n                buildAndAttachChoiceAspect.buildAndAttachChoice=(wrap, getNextElement)=>{\r\n                    if (wrap.isOptionHidden){ \r\n                        buildHiddenChoice(wrap);\r\n                    }\r\n                    else{ \r\n                        origBuildAndAttachChoice(wrap, getNextElement);\r\n                    }\r\n                }\r\n            \r\n                var origIsSelectable = isChoiceSelectableAspect.isSelectable;\r\n                isChoiceSelectableAspect.isSelectable = (wrap) => origIsSelectable(wrap) && !wrap.isOptionHidden;\r\n            \r\n                let {getIsOptionHidden, options} = configuration;\r\n                if (options) {\r\n                    if (!getIsOptionHidden)\r\n                        getIsOptionHidden = (option) => (option.hidden===undefined)?false:option.hidden;     \r\n                } else {\r\n                    if (!getIsOptionHidden)\r\n                        getIsOptionHidden = (option) => {\r\n                            return option.hidden;     \r\n                        } \r\n                }\r\n\r\n                var origCreateWrap = createWrapAspect.createWrap;\r\n                createWrapAspect.createWrap = (option) => {\r\n                    let wrap = origCreateWrap(option);\r\n                    wrap.isOptionHidden = getIsOptionHidden(option);\r\n                    return wrap;\r\n                };\r\n            \r\n                return {\r\n                    buildApi(api){     \r\n                        let getNextNonHidden =  (key) => wrapsCollection.getNext(key, c => !c.isOptionHidden );\r\n                    \r\n                        api.updateOptionsHidden = () => \r\n                            wrapsCollection.forLoop( (wrap, key) => \r\n                                    updateChoiceHidden(wrap, key, getNextNonHidden, countableChoicesList, getIsOptionHidden, buildChoiceAspect)\r\n                                );\r\n                    \r\n                        api.updateOptionHidden  = (key) => \r\n                            updateChoiceHidden(wrapsCollection.get(key), key, getNextNonHidden, countableChoicesList, getIsOptionHidden, buildChoiceAspect);\r\n                        // TODO create updateHidden ? \r\n                        // it is too complex since we need to find the next non hidden, when this depends on key \r\n                        // there should be the backreference \"wrap -> index\" invited before\r\n                        // api.updateOptionHidden  = (key) => wrapsCollection.get(key).updateHidden();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction buildHiddenChoice(wrap){\r\n    wrap.updateSelected = () => void 0;\r\n    \r\n    wrap.choice.isChoiceElementAttached = false;\r\n    wrap.choice.choiceElement = null;\r\n    wrap.choice.choiceElementAttach = null;\r\n    wrap.choice.setVisible = null; \r\n    wrap.choice.setHoverIn = null;\r\n    wrap.choice.remove = null; \r\n    \r\n    wrap.choice.dispose = () => { \r\n        wrap.choice.dispose = null;\r\n    };\r\n\r\n    wrap.dispose = () => { \r\n        wrap.choice.dispose();\r\n        wrap.dispose = null;\r\n    };\r\n}\r\n\r\nfunction updateChoiceHidden(wrap, key, getNextNonHidden, countableChoicesList, getIsOptionHidden, buildChoiceAspect){\r\n    let newIsOptionHidden = getIsOptionHidden(wrap.option);\r\n    if (newIsOptionHidden != wrap.isOptionHidden)\r\n    {\r\n        wrap.isOptionHidden= newIsOptionHidden;\r\n        if (wrap.isOptionHidden) {\r\n\r\n            countableChoicesList.remove(wrap);\r\n            wrap.choice.remove(); \r\n            buildHiddenChoice(wrap);\r\n        } else {\r\n            let nextChoice = getNextNonHidden(key);\r\n            countableChoicesList.add(wrap, nextChoice);\r\n            buildChoiceAspect.buildChoice(wrap);\r\n            wrap.choice.choiceElementAttach(nextChoice?.choice.choiceElement);\r\n        }\r\n    }\r\n}","import {createCss, extendCss} from '../ToolsStyling';\r\nimport {isBoolean} from '../ToolsJs';\r\n\r\nexport function CssPatchPlugin(defaults){\r\n    defaults.useCssPatch = true;\r\n    return {\r\n        merge(configuration, settings){\r\n            let cssPatch = settings?.cssPatch;\r\n            if (isBoolean(cssPatch))\r\n                throw new Error(\"BsMultiSelect: 'cssPatch' was used instead of 'useCssPatch'\") // often type of error\r\n            configuration.cssPatch = createCss(defaults.cssPatch, cssPatch); // replace classes, merge styles\r\n        },\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    if (configuration.useCssPatch){\r\n        extendCss(configuration.css, configuration.cssPatch);\r\n        configuration.cssPatch = undefined;\r\n    }\r\n}\r\n\r\nconst _cssPatchBs5 = {\r\n    choicesList: {listStyleType:'none', paddingLeft:'0', paddingRight:'0', marginBottom:'0'},\r\n    picks: {listStyleType:'none', display:'flex', flexWrap:'wrap',  height: 'auto', marginBottom: '0', cursor: 'text'},\r\n    choice: {classes:'px-md-2 px-1', styles:{cursor:'pointer'}},\r\n    //choice_selected: 'selected',  //  remove,\r\n    //choice_disabled: 'disabled',  //  remove,\r\n    choice_hover: 'text-primary bg-light', \r\n    choice_disabled_hover: 'bg-light', // actually 'disabled, not selected'\r\n    filterInput: {\r\n        border:'0px', height: 'auto', boxShadow:'none', \r\n        padding:'0', margin:'0', \r\n        outline:'none', backgroundColor:'transparent',\r\n        backgroundImage: 'none' // otherwise BS .was-validated set its image\r\n    },\r\n    filterInput_empty: 'form-control', // need for placeholder, TODO test form-control-plaintext\r\n\r\n    // used in PicksDom\r\n    picks_disabled: {backgroundColor: '#e9ecef'},\r\n\r\n    picks_focus: {borderColor: '#80bdff', boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'},\r\n    picks_focus_valid: {borderColor: '',  boxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)'},\r\n    picks_focus_invalid: {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)'},\r\n    \r\n    // used in BsAppearancePlugin\r\n    picks_def: {minHeight: 'calc(2.25rem + 2px)'},\r\n    picks_lg:  {minHeight: 'calc(2.875rem + 2px)'},\r\n    picks_sm:  {minHeight: 'calc(1.8125rem + 2px)'},\r\n    picks_floating_def: {minHeight: 'calc(3.5rem + 2px)'},\r\n    \r\n    // used in pickContentGenerator\r\n    pick: {paddingLeft: '0', paddingRight: '.5rem', paddingInlineStart:'0', paddingInlineEnd:'0.5rem', color:'var(--bs-dark)'},\r\n    pickButton: {fontSize:'0.8em',  float : \"none\", verticalAlign: \"text-top\"},\r\n    pickContent_disabled: {opacity: '.65'}, \r\n    \r\n    // used in choiceContentGenerator\r\n    choiceContent: {justifyContent: 'flex-start', cursor:'inherit'}, // BS problem: without this on inline form menu items justified center\r\n    choiceLabel: {color: 'inherit', cursor:'inherit'}, // otherwise BS .was-validated set its color\r\n    choiceCheckBox: {color: 'inherit', cursor:'inherit'},\r\n    choiceLabel_disabled: {opacity: '.65'},  // more flexible than {color: '#6c757d'}; note: avoid opacity on pickElement's border; TODO write to BS \r\n\r\n    // floating plugin\r\n    label_floating_lifted: {opacity: '.65', transform : 'scale(.85) translateY(-.5rem) translateX(.15rem)'},\r\n    picks_floating_lifted: {paddingTop: '1.625rem', paddingLeft:'0.8rem', paddingBottom : '0'},\r\n\r\n    warning: {paddingLeft: '.25rem', paddingRight: '.25rem', zIndex: 4,  fontSize:'small', backgroundColor:'var(--bs-warning)'} // zIndex=4  since the input-group zIndex=3\r\n}\r\n\r\nconst _cssPatchBs4 = {\r\n    choicesList: {listStyleType:'none', paddingLeft:'0', paddingRight:'0', marginBottom:'0'},\r\n    picks: {listStyleType:'none', display:'flex', flexWrap:'wrap',  height: 'auto', marginBottom: '0',cursor: 'text'},\r\n    choice: {classes:'px-md-2 px-1', styles:{cursor:'pointer'}},    \r\n    choice_hover: 'text-primary bg-light', \r\n    choice_disabled_hover: 'bg-light',\r\n    filterInput: {border:'0px', height: 'auto', boxShadow:'none', \r\n        padding:'0', margin:'0', \r\n        outline:'none', backgroundColor:'transparent',\r\n        backgroundImage: 'none' // otherwise BS .was-validated set its image\r\n    },\r\n    filterInput_empty: 'form-control', // need for placeholder, TODO test form-control-plaintext\r\n\r\n    // used in PicksDom\r\n    picks_disabled: {backgroundColor: '#e9ecef'},\r\n\r\n    picks_focus: {borderColor: '#80bdff', boxShadow: '0 0 0 0.2rem rgba(0, 123, 255, 0.25)'},\r\n    picks_focus_valid: {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(40, 167, 69, 0.25)'},\r\n    picks_focus_invalid: {borderColor: '', boxShadow: '0 0 0 0.2rem rgba(220, 53, 69, 0.25)'},\r\n    \r\n    // used in BsAppearancePlugin\r\n    picks_def: {minHeight: 'calc(2.25rem + 2px)'},\r\n    picks_lg:  {minHeight: 'calc(2.875rem + 2px)'},\r\n    picks_sm:  {minHeight: 'calc(1.8125rem + 2px)'},\r\n    \r\n    // used in pickContentGenerator\r\n    pick: {lineHeight: '1.5em', paddingLeft: '0', paddingRight: '.5rem', paddingInlineStart:'0', paddingInlineEnd:'0.5rem'},\r\n    pickButton: {fontSize:'1.5em', lineHeight: '.9em', float : \"none\"},\r\n    pickContent_disabled: {opacity: '.65'}, \r\n    \r\n    // used in choiceContentGenerator\r\n    choiceContent: {justifyContent: 'flex-start', cursor:'inherit'}, // BS problem: without this on inline form menu items justified center\r\n    choiceLabel: {color: 'inherit', cursor:'inherit'}, // otherwise BS .was-validated set its color\r\n    choiceCheckBox: {color: 'inherit', cursor:'inherit'},\r\n    choiceLabel_disabled: {opacity: '.65'},  // more flexible than {color: '#6c757d'}; note: avoid opacity on pickElement's border; TODO write to BS4 \r\n\r\n    warning: {paddingLeft: '.25rem', paddingRight: '.25rem', zIndex: 4,  fontSize:'small', backgroundColor: 'var(--bs-warning)'}, // zIndex=4  since the input-group zIndex=3\r\n}\r\n\r\nconst _cssBs4 = {\r\n    choices: 'dropdown-menu', // bs4, in bsmultiselect.scss as ul.dropdown-menu\r\n    choicesList: '', // bs4, in bsmultiselect.scss as div.dropdown-menu>ul (first child)\r\n    choice_hover:  'hover',  //  not bs4, in scss as 'ul.dropdown-menu li.hover'\r\n    choice_selected: '', \r\n    choice_disabled: '', \r\n\r\n    picks: 'form-control',  // bs4, in scss 'ul.form-control'\r\n    picks_focus: 'focus', // not bs4, in scss 'ul.form-control.focus'\r\n    picks_disabled: 'disabled', //  not bs4, in scss 'ul.form-control.disabled'\r\n    pick_disabled: '',  \r\n    \r\n    pickFilter: '', \r\n    filterInput: '',\r\n\r\n    // used in pickContentGenerator\r\n    pick: 'badge', // bs4\r\n    pickContent: '',\r\n    pickContent_disabled: 'disabled', // not bs4, in scss 'ul.form-control li span.disabled'\r\n    pickButton: 'close', // bs4\r\n\r\n    // used in choiceContentGenerator\r\n    // choice:  'dropdown-item', // it seems like hover should be managed manually since there should be keyboard support\r\n    choiceCheckBox_disabled: 'disabled', //  not bs4, in scss as 'ul.form-control li .custom-control-input.disabled ~ .custom-control-label'\r\n    choiceContent: 'custom-control custom-checkbox d-flex', // bs4 d-flex required for rtl to align items\r\n    choiceCheckBox: 'custom-control-input', // bs4\r\n    choiceLabel: 'custom-control-label justify-content-start',\r\n    choiceLabel_disabled: '',\r\n\r\n    warning: 'alert-warning bg-warning'\r\n}\r\n\r\nconst _cssBs5 = {\r\n    choices: 'dropdown-menu', // bs, in bsmultiselect.scss as div.dropdown-menu\r\n    choicesList: '', // bs, in bsmultiselect.scss as div.dropdown-menu>ul (first child)\r\n    choice_hover:  'hover',  //  not bs, in scss as 'ul.dropdown-menu li.hover'\r\n    choice_selected: 'selected',  //  not bs,\r\n    choice_disabled: 'disabled',  //  not bs,\r\n    picks: 'form-control',  // bs, in scss 'ul.form-control'\r\n    picks_focus: 'focus', // not bs, in scss 'ul.form-control.focus'\r\n    picks_disabled: 'disabled', //  not bs, in scss 'ul.form-control.disabled'\r\n    pick_disabled: '',  \r\n    \r\n    pickFilter: '', \r\n    filterInput: '',\r\n\r\n    // used in pickContentGenerator\r\n    pick: {classes:'badge'}, // bs\r\n    pickContent: '',\r\n    pickContent_disabled: 'disabled', // not bs, in scss 'ul.form-control li span.disabled'\r\n    pickButton: 'btn-close', // bs\r\n\r\n    // used in choiceContentGenerator\r\n    // choice:  'dropdown-item', // it seems like hover should be managed manually since there should be keyboard support\r\n    choiceCheckBox_disabled: 'disabled', //  not bs, in scss as 'ul.form-control li .custom-control-input.disabled ~ .custom-control-label'\r\n    choiceContent: 'form-check', // bs d-flex required for rtl to align items\r\n    choiceCheckBox: 'form-check-input', // bs\r\n    choiceLabel: 'form-check-label',\r\n    choiceLabel_disabled: '',\r\n\r\n    label_floating_lifted: 'floating-lifted',\r\n    picks_floating_lifted: 'floating-lifted',\r\n\r\n    warning: 'alert-warning'\r\n}","import {CssPatchPlugin} from './CssPatchPlugin';\r\n\r\nimport {PickDomFactoryPlugCssPatchBs4} from '../PickDomFactory'\r\nimport {PicksDomFactoryPlugCssPatchBs4} from '../PicksDomFactory'\r\nimport {ChoiceDomFactoryPlugCssPatch} from '../ChoiceDomFactory'\r\nimport {ChoicesDomFactoryPlugCssPatch} from '../ChoicesDomFactory'\r\nimport {FilterDomFactoryPlugCssPatch} from '../FilterDomFactory'\r\n\r\nexport function CssPatchBs4Plugin(defaults) {\r\n    var cssPatch = {};\r\n\r\n    PickDomFactoryPlugCssPatchBs4(cssPatch);\r\n    PicksDomFactoryPlugCssPatchBs4(cssPatch);\r\n    ChoiceDomFactoryPlugCssPatch(cssPatch);\r\n    ChoicesDomFactoryPlugCssPatch(cssPatch);\r\n    FilterDomFactoryPlugCssPatch(cssPatch);\r\n\r\n    defaults.cssPatch = cssPatch;\r\n    return CssPatchPlugin(defaults)\r\n}","export function JQueryMethodsPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){ \r\n    return (aspects) =>  {\r\n        return {\r\n            layout: () => {\r\n                let {staticDom, choicesDom, filterDom, picksList, picksDom} = aspects;\r\n                return {\r\n                    buildApi(api){\r\n                        api.getContainer = () =>  staticDom.containerElement;\r\n                        api.getChoices = () => choicesDom.choicesElement;\r\n                        api.getChoicesList = () => choicesDom.choicesListElement;\r\n                        api.getFilterInput = () => filterDom.filterInputElement;\r\n                        api.getPicks = () => picksDom.picksElement;\r\n                        api.picksCount = () => picksList.getCount();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","export function OptionsApiPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){\r\n    return (aspects) => {\r\n        return {\r\n                    buildApi(api){\r\n                        let {buildAndAttachChoiceAspect, wraps, wrapsCollection, createWrapAspect, createChoiceBaseAspect,\r\n                            optionsAspect, resetLayoutAspect} = aspects;\r\n                            \r\n                        api.updateOptionAdded = (key) => {  // TODO: generalize index as key \r\n                            let options = optionsAspect.getOptions();\r\n                            let option = options[key];\r\n\r\n                            let wrap = createWrapAspect.createWrap(option);\r\n                            wrap.choice= createChoiceBaseAspect.createChoiceBase(option);\r\n                            wraps.insert(key, wrap);\r\n                            let nextChoice = ()=> wrapsCollection.getNext(key, c => c.choice.choiceElement);\r\n                        \r\n                            buildAndAttachChoiceAspect.buildAndAttachChoice(\r\n                                wrap,\r\n                                () => nextChoice()?.choice.choiceElement\r\n                            )\r\n                        }\r\n                    \r\n                        api.updateOptionRemoved = (key) => { // TODO: generalize index as key \r\n                            resetLayoutAspect.resetLayout(); // always hide 1st, then reset filter\r\n\r\n                            var wrap = wraps.remove(key);\r\n                            wrap.choice.remove?.();\r\n                            wrap.dispose?.();\r\n                        }\r\n                    }\r\n                }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function FormRestoreOnBackwardPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {staticDom, environment, loadAspect, updateOptionsSelectedAspect} = aspects;\r\n                let window = environment.window;\r\n            \r\n                if (staticDom.selectElement && updateOptionsSelectedAspect){\r\n                    loadAspect.load = composeSync(loadAspect.load,\r\n                        function(){\r\n                            // support browser's \"step backward\" and form's values restore\r\n                            if (window.document.readyState !=\"complete\"){\r\n                                window.setTimeout(function(){\r\n                                    updateOptionsSelectedAspect.updateOptionsSelected();\r\n                                // there are no need to add more updates as api.updateWasValidated() because backward never trigger .was-validate\r\n                                // also backward never set the state to invalid\r\n                                });\r\n                            }\r\n                        })\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {closestByTagName, findDirectChildByTagName, closestByClassName} from '../ToolsDom';\r\nimport {composeSync} from '../ToolsJs';\r\n\r\nexport function SelectElementPlugin(){\r\n    return {plug}\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            plugStaticDom: ()=> {\r\n                    let {staticDomFactory, createElementAspect,\r\n                        componentPropertiesAspect, onChangeAspect, triggerAspect, optionsAspect, optGroupAspect, disposeAspect, getValueRequiredAspect,\r\n                        choicesDomFactory, filterDomFactory, picksDomFactory, initialDom,\r\n                        showErrorAspect\r\n                    } = aspects;\r\n                    \r\n                    let containerClass = configuration.containerClass;\r\n                    let origCreateStaticDom = staticDomFactory.createStaticDom;\r\n                    let element = initialDom.initialElement;\r\n                    staticDomFactory.createStaticDom = () => {\r\n                        let selectElement = null;\r\n                        let containerElement = null;\r\n                        let picksElement = null;\r\n                        if (element.tagName == 'SELECT') {\r\n                            selectElement = element;\r\n                            if (containerClass){\r\n                                containerElement = closestByClassName(selectElement, containerClass)\r\n                                if (containerElement)\r\n                                    picksElement = findDirectChildByTagName(containerElement, 'UL');\r\n                            }\r\n                        } else if (element.tagName == 'DIV') {\r\n                            selectElement = findDirectChildByTagName(element, 'SELECT');\r\n                            if (selectElement) {\r\n                                if (containerClass){\r\n                                    containerElement = closestByClassName(element, containerClass);\r\n                                    if (containerElement)\r\n                                        picksElement = findDirectChildByTagName(containerElement, 'UL');\r\n                                }\r\n                            } else {\r\n                                return origCreateStaticDom(element, containerClass);\r\n                            } \r\n                        }\r\n                        \r\n                        let isDisposableContainerElementFlag = false;\r\n                        if (!containerElement) {\r\n                            containerElement = createElementAspect.createElement('DIV');\r\n                            containerElement.classList.add(containerClass);\r\n                            isDisposableContainerElementFlag= true;\r\n                        }\r\n                        \r\n                        let staticDom = {\r\n                            containerElement,\r\n                            selectElement\r\n                        };\r\n                        \r\n                        if (selectElement){\r\n                            \r\n                            showErrorAspect.showError = (error)=>{\r\n                                let errorElement = createElementAspect.createElement('SPAN'); \r\n                                errorElement.style.backgroundColor = 'red';\r\n                                errorElement.style.color = 'white';\r\n                                errorElement.style.padding = '0.2rem 0.5rem';\r\n                                errorElement.textContent = 'BsMultiSelect ' + error.toString();\r\n                                selectElement.parentNode.insertBefore(errorElement, selectElement.nextSibling)\r\n                            }\r\n\r\n                            var backupDisplay = selectElement.style.display;\r\n                            selectElement.style.display = 'none';\r\n                            var backupedRequired = selectElement.required;\r\n                        \r\n                            if (getValueRequiredAspect)\r\n                                getValueRequiredAspect.getValueRequired = function(){\r\n                                    return backupedRequired;\r\n                                }\r\n                        \r\n                            if(selectElement.required===true)\r\n                                selectElement.required = false;\r\n                        \r\n                            let {getDisabled} = configuration;\r\n                        \r\n                            if(!getDisabled) {\r\n                                var fieldsetElement = closestByTagName(selectElement, 'FIELDSET');\r\n                                if (fieldsetElement) {\r\n                                    componentPropertiesAspect.getDisabled = () => selectElement.disabled || fieldsetElement.disabled;\r\n                                } else {\r\n                                    componentPropertiesAspect.getDisabled = () => selectElement.disabled;\r\n                                }\r\n                            }\r\n                            onChangeAspect.onChange = composeSync(() => triggerAspect.trigger('change'), onChangeAspect.onChange) \r\n                            optionsAspect.getOptions = () => selectElement.options;\r\n\r\n                            if (optGroupAspect){\r\n                                optGroupAspect.getOptionOptGroup = (option) => option.parentNode;\r\n                                optGroupAspect.getOptGroupText   = (optGroup) => optGroup.label;\r\n                                optGroupAspect.getOptGroupId = (optGroup) => optGroup.id;\r\n                            }\r\n                        \r\n                            if (selectElement && aspects.createFilterInputElementIdAspect){\r\n                                var origCreateFilterInputElementId = aspects.createFilterInputElementIdAspect.createFilterInputElementId;\r\n                                \r\n                                aspects.createFilterInputElementIdAspect.createFilterInputElementId = () =>\r\n                                { \r\n                                    let id = origCreateFilterInputElementId();\r\n                                    if (!id) {\r\n                                        id =`${containerClass}-generated-input-${((selectElement.id)?selectElement.id:selectElement.name).toLowerCase()}-id`;\r\n                                    }\r\n                                    return id;\r\n                                }\r\n                            }\r\n                        \r\n                            disposeAspect.dispose = composeSync(disposeAspect.dispose, () => {\r\n                                 selectElement.required = backupedRequired;\r\n                                 selectElement.style.display = backupDisplay;\r\n                            });\r\n                        }\r\n\r\n                        let isDisposablePicksElementFlag = false;\r\n                        if (!picksElement) {\r\n                            picksElement = createElementAspect.createElement('UL');\r\n                            isDisposablePicksElementFlag = true; \r\n                        }\r\n                        \r\n                        let choicesDom = choicesDomFactory.create();\r\n                        let picksDom  = picksDomFactory.create(picksElement, isDisposablePicksElementFlag);\r\n                        let filterDom = filterDomFactory.create(isDisposablePicksElementFlag);\r\n                        \r\n                        let {choicesElement} = choicesDom; \r\n                        return {\r\n                            choicesDom,\r\n                            filterDom,\r\n                            picksDom,\r\n                        \r\n                            staticDom, \r\n                        \r\n                            staticManager:{\r\n                                appendToContainer(){ \r\n                                    picksDom.pickFilterElement.appendChild(filterDom.filterInputElement);\r\n                                    picksDom.picksElement.appendChild(picksDom.pickFilterElement); \r\n                                    if (isDisposableContainerElementFlag){\r\n                                        selectElement.parentNode.insertBefore(containerElement, selectElement.nextSibling) \r\n                                        containerElement.appendChild(choicesElement)\r\n                                    }else {\r\n                                        selectElement.parentNode.insertBefore(choicesElement, selectElement.nextSibling)\r\n                                    }\r\n                                    if (isDisposablePicksElementFlag)\r\n                                        containerElement.appendChild(picksElement)\r\n                                },\r\n                                dispose(){ \r\n                                    choicesElement.parentNode.removeChild(choicesElement);\r\n                                    if (isDisposableContainerElementFlag)\r\n                                        selectElement.parentNode.removeChild(containerElement) \r\n                                    if (isDisposablePicksElementFlag)\r\n                                        containerElement.removeChild(picksElement)\r\n                                    picksDom.dispose();\r\n                                    filterDom.dispose();                                        \r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                \r\n            },\r\n            layout: ()=>{\r\n                var {loadAspect, environment} = aspects;\r\n                var document = environment.window.document;\r\n\r\n                var origLoadAspectLoop  = loadAspect.loop;\r\n                loadAspect.loop = function(){\r\n                    // browsers can change select value as part of \"autocomplete\" (IE11) at load time\r\n                    // or \"show preserved on go back\" (Chrome) after page is loaded but before \"ready\" event;\r\n                    // NOTE: they never \"restore\" selected-disabled options.\r\n                    // TODO: make the FROM Validation for 'selected-disabled' easy.\r\n                    if (document.readyState != 'loading'){\r\n                        origLoadAspectLoop();\r\n                    }else{\r\n                        var domContentLoadedHandler = function(){\r\n                            origLoadAspectLoop();\r\n                            document.removeEventListener(\"DOMContentLoaded\", domContentLoadedHandler);\r\n                        }\r\n                        document.addEventListener('DOMContentLoaded', domContentLoadedHandler); // IE9+\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\n// TODO: there should be two new \"independent aspects\" AddPickAspect and RemovePickAspect \r\n// plugin should overdrive them : call setWrapSelected and etc\r\n// therefore there should new component API methods\r\n// addOptionPick(key) -> call addPick(pick) which returns removePick() \r\n// SetOptionSelectedAspect, OptionToggleAspect should be moved there \r\n// OptionToggleAspect overrided in DisabledOptionPlugin\r\n\r\nexport function SelectedOptionPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){ \r\n    return (aspects) => {\r\n        let {getSelected : getIsOptionSelected, setSelected : setIsOptionSelected, options} = configuration;\r\n            \r\n        if (options) {\r\n            if (!setIsOptionSelected){\r\n                setIsOptionSelected = (option, value) => {option.selected = value};\r\n            }\r\n            if (!getIsOptionSelected)\r\n                getIsOptionSelected = (option) => option.selected;     \r\n        } else { // selectElement\r\n            if (!getIsOptionSelected){\r\n                getIsOptionSelected = (option) => option.selected;\r\n            }\r\n            if (!setIsOptionSelected){\r\n                setIsOptionSelected = (option, value) => {option.selected = value};\r\n                // NOTE: adding this (setAttribute) break Chrome's html form reset functionality:\r\n                // if (value) option.setAttribute('selected','');\r\n                // else option.removeAttribute('selected');\r\n            }\r\n        }\r\n    \r\n        var getSelectedAspect = {getSelected: getIsOptionSelected};\r\n        var setSelectedAspect = {setSelected: setIsOptionSelected};\r\n        aspects.getSelectedAspect=getSelectedAspect;\r\n        aspects.setSelectedAspect=setSelectedAspect;\r\n\r\n        return {\r\n            plugStaticDom: ()=> {\r\n                // TODO: move to createEventHandlers\r\n                let {wrapsCollection} = aspects;\r\n                aspects.updateOptionsSelectedAspect = UpdateOptionsSelectedAspect(wrapsCollection, getSelectedAspect);\r\n            },\r\n            layout: () => {\r\n                let {wrapsCollection, updateOptionsSelectedAspect,\r\n                    createWrapAspect, buildChoiceAspect, removePickAspect,\r\n                    resetLayoutAspect, picksList, isChoiceSelectableAspect, optionToggleAspect,\r\n                    /*inputAspect, filterDom, filterManagerAspect,*/ createPickHandlersAspect, addPickAspect,  fullMatchAspect, \r\n                    onChangeAspect, filterPredicateAspect\r\n                    } = aspects;\r\n                \r\n                let origFilterPredicate = filterPredicateAspect.filterPredicate;\r\n                filterPredicateAspect.filterPredicate = (wrap, text) =>\r\n                    !wrap.isOptionSelected  &&  origFilterPredicate(wrap, text)\r\n                \r\n                \r\n                let  origBuildChoice = buildChoiceAspect.buildChoice;\r\n                buildChoiceAspect.buildChoice= (wrap) => {\r\n                    origBuildChoice(wrap);\r\n                    wrap.updateSelected = () => {\r\n                        wrap.choice.choiceDomManagerHandlers.updateSelected();\r\n                        onChangeAspect.onChange();\r\n                    }\r\n                    wrap.dispose = composeSync( ()=>{wrap.updateSelected = null}, wrap.dispose)\r\n                }\r\n            \r\n                // TODO: test this instead of wrap.updateSelected\r\n                // function updateSelected(wrap){\r\n                //     if (wrap.pick){\r\n                //         if (wrap.isOptionSelected)\r\n                //             pickHandlers.producePick();\r\n                //         else {\r\n                //             pickHandlers.removeAndDispose();\r\n                //             pickHandlers.removeAndDispose=null;\r\n                //         }\r\n                //     }\r\n                //     wrap.choice.choiceDomManagerHandlers.updateSelected();\r\n                //     onChangeAspect.onChange();\r\n                // }\r\n            \r\n            \r\n                function composeUpdateSelected(wrap, booleanValue){\r\n                    return () => {\r\n                        wrap.isOptionSelected = booleanValue;\r\n                        wrap.updateSelected();\r\n                    }\r\n                }\r\n            \r\n                function trySetWrapSelected(option, updateSelected, booleanValue){ //  wrap.option\r\n                    let success = false;\r\n                    var confirmed = setSelectedAspect.setSelected(option, booleanValue); \r\n                    if (!(confirmed===false)) {\r\n                        updateSelected(); \r\n                        success = true;\r\n                    }\r\n                    return success;\r\n                }\r\n            \r\n                let origCreateWrap = createWrapAspect.createWrap;\r\n                createWrapAspect.createWrap = (option)=>{\r\n                    let wrap = origCreateWrap(option);\r\n                    wrap.isOptionSelected = getSelectedAspect.getSelected(option);\r\n                    wrap.updateSelected = null; // can it be combined ?\r\n                    return wrap;\r\n                }\r\n                \r\n            \r\n                let origToggle = optionToggleAspect.toggle; // TODO: improve design, no replace\r\n                optionToggleAspect.toggle= (wrap) => {\r\n                    return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, !wrap.isOptionSelected), !wrap.isOptionSelected)\r\n                }\r\n            \r\n                let origFullMatch = fullMatchAspect.fullMatch;\r\n                fullMatchAspect.fullMatch = (wrap) => {\r\n                    return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, true), true);\r\n                }\r\n            \r\n                let removePickOrig = removePickAspect.removePick; // TODO: improve design, no replace\r\n                removePickAspect.removePick = (wrap, pick) => { // TODO: try remove pick\r\n                    return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, false), false);\r\n                }\r\n            \r\n                \r\n                let origCreatePickHandlers =  createPickHandlersAspect.createPickHandlers;\r\n                createPickHandlersAspect.createPickHandlers = (wrap)=>{\r\n                    let pickHandlers = origCreatePickHandlers(wrap);\r\n                    wrap.updateSelected = composeSync(\r\n                        ()=>{\r\n                            if (wrap.isOptionSelected){\r\n                                let pick = pickHandlers.producePick();\r\n                                wrap.pick = pick;\r\n                                pick.dispose = composeSync(pick.dispose, ()=>{wrap.pick=null;});\r\n                            }\r\n                            else {\r\n                                pickHandlers.removeAndDispose();\r\n                                pickHandlers.removeAndDispose=null;\r\n                            }\r\n                        },\r\n                        wrap.updateSelected\r\n                    )\r\n                    \r\n                    addPickAspect.addPick(wrap, pickHandlers); \r\n                    return pickHandlers;\r\n                }\r\n            \r\n                let origAddPick =  addPickAspect.addPick;\r\n                addPickAspect.addPick = (wrap, pickHandlers) => {\r\n                    if (wrap.isOptionSelected){\r\n                        let pick = origAddPick(wrap, pickHandlers);\r\n                        wrap.pick = pick;\r\n                        pick.dispose = composeSync(pick.dispose, ()=>{wrap.pick=null;});\r\n                        return pick;\r\n                    }\r\n                }\r\n            \r\n            \r\n                return {\r\n                    buildApi(api){\r\n                        api.selectAll= ()=>{\r\n                            resetLayoutAspect.resetLayout(); // always hide 1st\r\n                            wrapsCollection.forLoop(\r\n                                wrap => {\r\n                                    if (isChoiceSelectableAspect.isSelectable(wrap) &&  !wrap.isOptionSelected)\r\n                                        trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, true), true)\r\n                                }\r\n                            ); \r\n                        }\r\n                    \r\n                        api.deselectAll= ()=>{\r\n                            resetLayoutAspect.resetLayout(); // always hide 1st\r\n                            picksList.forEach(pick=>pick.setSelectedFalse())\r\n                        }\r\n                    \r\n                        api.setOptionSelected = (key, value) => {\r\n                            let wrap = wrapsCollection.get(key);\r\n                            return trySetWrapSelected(wrap.option, composeUpdateSelected(wrap, value), value);\r\n                        }\r\n                    \r\n                        // used in FormRestoreOnBackwardPlugin\r\n                        api.updateOptionsSelected = () => updateOptionsSelectedAspect.updateOptionsSelected();\r\n                        api.updateOptionSelected = (key) => updateChoiceSelected(wrapsCollection.get(key), getSelectedAspect)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction UpdateOptionsSelectedAspect(wrapsCollection, getSelectedAspect){\r\n    return {\r\n        updateOptionsSelected(){\r\n            wrapsCollection.forLoop( wrap => updateChoiceSelected(wrap, getSelectedAspect));\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateChoiceSelected(wrap, getSelectedAspect){\r\n    let newIsSelected = getSelectedAspect.getSelected(wrap.option);\r\n    if (newIsSelected != wrap.isOptionSelected)\r\n    {\r\n        wrap.isOptionSelected = newIsSelected;\r\n        wrap.updateSelected?.(); // some hidden oesn't have element (and need to be updated)\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function DisabledOptionPlugin(){\r\n    return {\r\n        plug    \r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {isChoiceSelectableAspect, createWrapAspect,  buildChoiceAspect,\r\n                    filterPredicateAspect, wrapsCollection, optionToggleAspect, buildPickAspect } = aspects;\r\n                \r\n                let {getIsOptionDisabled, options} = configuration;\r\n                if (options) {\r\n                    if (!getIsOptionDisabled)\r\n                        getIsOptionDisabled = (option) => (option.disabled===undefined) ? false : option.disabled;     \r\n                } else { // selectElement\r\n                    if (!getIsOptionDisabled)\r\n                        getIsOptionDisabled = (option) => option.disabled;\r\n                }\r\n            \r\n                // TODO check this instead of wrap.updateDisabled\r\n                // function updateDisabled(wrap){\r\n                //     wrap?.choice?.choiceDomManagerHandlers?.updateDisabled?.();\r\n                //     wrap?.pick?.pickDomManagerHandlers?.updateDisabled?.();\r\n                // }\r\n            \r\n                let origCreateWrap = createWrapAspect.createWrap;\r\n                createWrapAspect.createWrap = (option) => {\r\n                    let wrap = origCreateWrap(option);\r\n                    wrap.isOptionDisabled = getIsOptionDisabled(option); // TODO: remove usage wrap.isOptionDisabled\r\n                    wrap.updateDisabled = null; \r\n                    return wrap;\r\n                };\r\n            \r\n                let origToggle = optionToggleAspect.toggle;\r\n                optionToggleAspect.toggle = (wrap) => {\r\n                    let success = false;\r\n                    if (wrap.isOptionSelected!==undefined){\r\n                        if (wrap.isOptionSelected || !wrap.isOptionDisabled) // TODO: declare dependency on SelectedOptionPlugin\r\n                            success = origToggle(wrap);\r\n                    }\r\n                    else{\r\n                        if (!wrap.isOptionDisabled) {\r\n                            success = origToggle(wrap);\r\n                        }\r\n                    }\r\n                    return success;\r\n                };\r\n            \r\n                let origIsSelectable = isChoiceSelectableAspect.isSelectable;\r\n                isChoiceSelectableAspect.isSelectable = (wrap) => {\r\n                    return  origIsSelectable(wrap) && !wrap.isOptionDisabled;\r\n                };\r\n            \r\n                let origFilterPredicate = filterPredicateAspect.filterPredicate;\r\n                filterPredicateAspect.filterPredicate = (wrap, text) => {\r\n                    return  !wrap.isOptionDisabled && origFilterPredicate(wrap, text) ;\r\n                };\r\n            \r\n                let origBuildChoice = buildChoiceAspect.buildChoice;\r\n                buildChoiceAspect.buildChoice = (wrap) => {\r\n                    origBuildChoice(wrap);\r\n                    wrap.updateDisabled = wrap.choice.choiceDomManagerHandlers.updateDisabled\r\n                    wrap.choice.dispose = composeSync(()=>{wrap.updateDisabled=null;}, wrap.choice.dispose);\r\n                }\r\n                \r\n                let origBuildPick = buildPickAspect.buildPick;\r\n                buildPickAspect.buildPick = (wrap, removeOnButton) => {\r\n                    let pick = origBuildPick(wrap, removeOnButton);\r\n                    \r\n                    pick.updateDisabled = () => pick.pickDomManagerHandlers.updateDisabled();\r\n                    pick.dispose = composeSync(pick.dispose, ()=>{pick.updateDisabled=null});\r\n            \r\n                    let choiceUpdateDisabledBackup = wrap.updateDisabled;\r\n                    wrap.updateDisabled = composeSync(choiceUpdateDisabledBackup, pick.updateDisabled); // add pickDisabled\r\n                    pick.dispose = composeSync(pick.dispose, \r\n                        ()=>{\r\n                            wrap.updateDisabled = choiceUpdateDisabledBackup; // remove pickDisabled\r\n                            wrap.updateDisabled(); // make \"true disabled\" without it checkbox only looks disabled\r\n                        }\r\n                    )\r\n                    return pick;\r\n                }\r\n            \r\n                return {\r\n                    buildApi(api){\r\n                        api.updateOptionsDisabled = () => wrapsCollection.forLoop( wrap => updateChoiceDisabled(wrap, getIsOptionDisabled))\r\n                        api.updateOptionDisabled = (key) => updateChoiceDisabled(wrapsCollection.get(key), getIsOptionDisabled)\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateChoiceDisabled(wrap, getIsOptionDisabled){\r\n    let newIsDisabled = getIsOptionDisabled(wrap.option);\r\n    if (newIsDisabled != wrap.isOptionDisabled)\r\n    {\r\n        wrap.isOptionDisabled= newIsDisabled;\r\n        wrap.updateDisabled?.(); // some hidden oesn't have element (and need to be updated)\r\n    }\r\n}","export function PicksApiPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){\r\n    return (aspects) => {\r\n        return {\r\n                buildApi(api){\r\n                    let {picksList, createWrapAspect, createPickHandlersAspect, addPickAspect} = aspects;\r\n                    api.forEachPeak = (f) => \r\n                        picksList.forEach(wrap=>f(wrap.option));\r\n                    // TODO: getHeadPeak\r\n                    api.getTailPeak = () => picksList.getTail()?.option;\r\n                    api.countPeaks = () => picksList.getCount();\r\n                    api.isEmptyPeaks = () => picksList.isEmpty();\r\n\r\n                    api.addPick = (option) => {\r\n                        let wrap = createWrapAspect.createWrap(option);\r\n                        // TODO should be moved to specific plugins\r\n                        wrap.updateDisabled = ()=>{};\r\n                        wrap.updateHidden = ()=>{};\r\n                        let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n                        addPickAspect.addPick(wrap, pickHandlers);\r\n                    }\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function PicksPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            plugStaticDom: ()=> {\r\n                let {picksList} = aspects;\r\n                let {picks} = configuration;\r\n                if (picks) {\r\n                    let {add: origAdd, reset: origReset} = picksList;\r\n                \r\n                    picksList.add = (e) => {\r\n                        let {remove, index} = origAdd(e);\r\n                        picks.push(e);\r\n                        return { remove: composeSync(remove, () => void picks.splice(index(), 1)), index};\r\n                    }\r\n                \r\n                    picksList.reset = () => {\r\n                        origReset();\r\n                        picks.length = 0;\r\n                    }\r\n                }\r\n            },\r\n            layout: () => {\r\n                let {inputAspect, filterDom, filterManagerAspect} = aspects;\r\n                let {picks, addOptionPicked} = configuration;\r\n                /*\r\n                if (!addOptionPicked){\r\n                    addOptionPicked = (option, index, value) => {\r\n                        if (value)\r\n                            picks.push(option);\r\n                        else\r\n                            picks.splice(index, 1);\r\n                        return true;\r\n                    };\r\n                }\r\n            \r\n                function trySetWrapSelected(option, updateSelected, booleanValue){\r\n                    let success = false;\r\n                    var confirmed = setIsOptionSelected(option, booleanValue);\r\n                    if (!(confirmed===false)) {\r\n                        updateSelected();\r\n                        success = true;\r\n                    }\r\n                    return success;\r\n                }\r\n            \r\n                let origProcessInput = inputAspect.processInput;\r\n                inputAspect.processInput = () => {\r\n                    let origResult = origProcessInput();\r\n                    if (!origResult.isEmpty)\r\n                    {\r\n                        if ( filterManagerAspect.getNavigateManager().getCount() == 1)\r\n                        {\r\n                            // todo: move exact match to filterManager\r\n                            let fullMatchWrap =  filterManagerAspect.getNavigateManager().getHead();\r\n                            let text = filterManagerAspect.getFilter();\r\n                            if (fullMatchWrap.choice.searchText == text)\r\n                            {\r\n                                let success = trySetWrapSelected(fullMatchWrap, true);\r\n                                if (success) {\r\n                                    filterDom.setEmpty();\r\n                                    origResult.isEmpty = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return origResult;\r\n                }*/\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function CreatePopperPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){ \r\n    var popperRtlAspect = PopperRtlAspect();\r\n    return (aspects) => {\r\n        aspects.popperRtlAspect = popperRtlAspect;\r\n\r\n        let {environment} = aspects;\r\n\r\n        let {createPopper, Popper, globalPopper} = environment;\r\n        let createModifiersVX = null;\r\n        let createPopperVX = null;\r\n        if (Popper) { // V2\r\n            createPopperVX = createPopper =  (function(createPopperConstructor) {\r\n                return function(anchorElement, element, popperConfiguration) {\r\n                    return new createPopperConstructor(anchorElement, element, popperConfiguration);\r\n                }\r\n            })(Popper);;\r\n            createModifiersVX = CreateModifiersV1;\r\n        } else if (createPopper) {\r\n            createPopperVX = createPopper;\r\n            createModifiersVX = CreateModifiersV2;\r\n        } else if (globalPopper) {\r\n            if (globalPopper.createPopper) {\r\n                createPopperVX = globalPopper.createPopper;\r\n                createModifiersVX = CreateModifiersV2;\r\n            } else {\r\n                createPopperVX = createPopper =  (function(createPopperConstructor) {\r\n                    return function(anchorElement, element, popperConfiguration) {\r\n                        return new createPopperConstructor(anchorElement, element, popperConfiguration);\r\n                    }\r\n                })(globalPopper);\r\n                createModifiersVX = CreateModifiersV1;\r\n            }\r\n        } else {\r\n            throw new Error(\"BsMultiSelect: Popper component (https://popper.js.org) is required\");\r\n        }\r\n        var createPopperConfigurationAspect = CreatePopperConfigurationAspect(createModifiersVX);\r\n        var createPopperAspect = CreatePopperAspect(createPopperVX, popperRtlAspect, createPopperConfigurationAspect); \r\n        aspects.createPopperAspect = createPopperAspect;\r\n\r\n        return {\r\n            append(){\r\n                let {filterDom, choicesDom, disposeAspect, staticManager, choicesVisibilityAspect, specialPicksEventsAspect} = aspects;\r\n                \r\n                let filterInputElement = filterDom.filterInputElement;\r\n                let choicesElement     = choicesDom.choicesElement;\r\n            \r\n                let pop = createPopperAspect.createPopper(choicesElement, filterInputElement, true);\r\n            \r\n                staticManager.appendToContainer = composeSync(staticManager.appendToContainer, pop.init);\r\n            \r\n                var origBackSpace = specialPicksEventsAspect.backSpace;\r\n                specialPicksEventsAspect.backSpace = (pick) => {origBackSpace(pick);  pop.update();};\r\n            \r\n                disposeAspect.dispose = composeSync(disposeAspect.dispose, pop.dispose);\r\n            \r\n                choicesVisibilityAspect.updatePopupLocation = composeSync(\r\n                    choicesVisibilityAspect.updatePopupLocation, \r\n                    function(){pop.update();}\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction PopperRtlAspect(){\r\n    return {\r\n        getIsRtl(){\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction CreateModifiersV1(preventOverflow){\r\n    return {\r\n        preventOverflow: {enabled:preventOverflow},\r\n        hide: {enabled:false},\r\n        flip: {enabled:false}\r\n    };\r\n}\r\n\r\nfunction CreateModifiersV2(preventOverflow){\r\n    var modifiers = [{\r\n            name: 'flip',\r\n            options: {\r\n                fallbackPlacements: ['bottom'],\r\n            },\r\n        }\r\n    ];\r\n    if (preventOverflow) {\r\n        modifiers.push({name: 'preventOverflow'});\r\n    }\r\n    return modifiers;\r\n}\r\n\r\nfunction CreatePopperAspect(createPopperVX, popperRtlAspect, createPopperConfigurationAspect){\r\n    return {\r\n        createPopper(element, anchorElement, preventOverflow){\r\n            let popper = null;\r\n            return {\r\n                init(){\r\n                    var isRtl = popperRtlAspect.getIsRtl();\r\n                    var popperConfiguration = createPopperConfigurationAspect.createConfiguration(preventOverflow, isRtl);\r\n                    popper = createPopperVX(anchorElement, element, popperConfiguration); \r\n                },\r\n                update(){ \r\n                    popper.update(); // become async in popper 2; use forceUpdate if sync is needed? \r\n                },\r\n                dispose(){\r\n                    popper.destroy();\r\n                }\r\n            }\r\n        }\r\n    }   \r\n}\r\n\r\nfunction CreatePopperConfigurationAspect(createModifiersVX){\r\n    return {\r\n        createConfiguration(preventOverflow, isRtl){\r\n            let modifiers = createModifiersVX(preventOverflow);\r\n            \r\n            let popperConfiguration = {\r\n                placement: 'bottom-start',\r\n                modifiers: modifiers\r\n            };\r\n\r\n            if (isRtl){\r\n                popperConfiguration.placement = 'bottom-end';\r\n            }\r\n            return popperConfiguration;\r\n        }\r\n    }   \r\n}","// aka auto height and scrolling\r\nexport function ChoicesDynamicStylingPlugin(defaults){\r\n    defaults.useChoicesDynamicStyling = false;\r\n    defaults.choicesDynamicStyling = choicesDynamicStyling;\r\n    defaults.minimalChoicesDynamicStylingMaxHeight = 20;\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){ \r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {choicesDynamicStyling, useChoicesDynamicStyling} = configuration;\r\n                if (useChoicesDynamicStyling) {\r\n                    let {choicesVisibilityAspect, specialPicksEventsAspect} = aspects;\r\n                    var origSetChoicesVisible = choicesVisibilityAspect.setChoicesVisible;\r\n                    choicesVisibilityAspect.setChoicesVisible = \r\n                        function(visible){\r\n                            if (visible)\r\n                                choicesDynamicStyling(aspects);\r\n                            origSetChoicesVisible(visible);\r\n                        };\r\n                    var origBackSpace = specialPicksEventsAspect.backSpace;\r\n                    specialPicksEventsAspect.backSpace = (pick) => {origBackSpace(pick);  choicesDynamicStyling(aspects);};\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction choicesDynamicStyling(aspects){\r\n    let {choicesDom, navigateAspect, environment, configuration} = aspects;\r\n    let window = environment.window;\r\n    let choicesElement = choicesDom.choicesElement;\r\n    let minimalChoicesDynamicStylingMaxHeight = configuration.minimalChoicesDynamicStylingMaxHeight;\r\n\r\n    //find height of the browser window\r\n    var g = window.document.getElementsByTagName('body')[0],\r\n        e = window.document.documentElement,\r\n        y = window.innerHeight || e.clientHeight  || g.clientHeight;\r\n  \r\n    //find position of choicesElement, if it's at the bottom of the page make the choicesElement shorter\r\n    var pos = choicesElement.parentNode.getBoundingClientRect();\r\n    var new_y = y - pos.top;\r\n  \r\n    //calculate multi select max-height\r\n    var msHeight = Math.max(minimalChoicesDynamicStylingMaxHeight, Math.round((new_y * 0.85))); // Michalek: 0.85 is empiric value, without it list was longer than footer height ; TODO: propose better way\r\n  \r\n    //add css height value\r\n    choicesElement.style.setProperty(\"max-height\", msHeight+\"px\");\r\n    choicesElement.style.setProperty(\"overflow-y\", \"auto\");\r\n\r\n    if (!choicesDom.ChoicesDynamicStylingPlugin_scrollHandle){\r\n        choicesDom.ChoicesDynamicStylingPlugin_scrollHandle = true;\r\n        var origNavigateAspectNavigate = navigateAspect.navigate;\r\n        navigateAspect.navigate = function(down){\r\n            var wrap = origNavigateAspectNavigate(down);\r\n            if (wrap!= null && wrap.choice!=null && wrap.choice.choiceElement!=null)\r\n            wrap.choice.choiceElement.scrollIntoView(false); // alignTo false -  scroll to the top bottom of dropdown first\r\n            // TODO: BUG if mouse left on the dropdow scroll to bottom and one after doesn't work properly\r\n            return wrap;\r\n        }\r\n    }\r\n}\r\n","export function HighlightPlugin(defaults){\r\n    defaults.useHighlighting = false;\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nfunction ExtendChoiceDomFactory(choiceDomFactory, optionPropertiesAspect){\r\n    var origCreateChoiceDomFactory = choiceDomFactory.create;\r\n    choiceDomFactory.create = (choiceElement, wrap, toggle) => {\r\n        var value = origCreateChoiceDomFactory(choiceElement, wrap, toggle);\r\n        value.choiceDomManagerHandlers.updateHighlighted = () => {\r\n            var text = optionPropertiesAspect.getText(wrap.option);\r\n            var highlighter = aspects.highlightAspect.getHighlighter();\r\n            if (highlighter)\r\n                highlighter(choiceElement, value.choiceDom, text);                    \r\n            else\r\n            choiceElement.textContent = text;\r\n        };\r\n        return value;\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            plugStaticDom(){\r\n                if (configuration.useHighlighting)\r\n                    aspects.highlightAspect = HighlightAspect();\r\n            },\r\n            plugStaticDom(){\r\n                var {choiceDomFactory, optionPropertiesAspect} = aspects;\r\n                ExtendChoiceDomFactory(choiceDomFactory, optionPropertiesAspect);\r\n            },\r\n            layout(){\r\n                let {highlightAspect, filterManagerAspect,  buildChoiceAspect} = aspects;\r\n                if (highlightAspect){\r\n                    let origProcessEmptyInput = filterManagerAspect.processEmptyInput;\r\n                    filterManagerAspect.processEmptyInput = function(){\r\n                        highlightAspect.reset();\r\n                        origProcessEmptyInput(); \r\n                    }\r\n                    let origSetFilter = filterManagerAspect.setFilter;\r\n                    filterManagerAspect.setFilter = function(text){\r\n                        highlightAspect.set(text);\r\n                        origSetFilter(text);\r\n                    }\r\n                    let origBuildChoice = buildChoiceAspect.buildChoice;\r\n                    buildChoiceAspect.buildChoice = function(wrap){\r\n                        origBuildChoice(wrap);\r\n                        let origSetVisible =  wrap.choice.setVisible;\r\n                        wrap.choice.setVisible = function(v){\r\n                          origSetVisible(v);\r\n                          wrap.choice.choiceDomManagerHandlers.updateHighlighted();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction HighlightAspect(){\r\n    let highlighter = null;\r\n    return {\r\n        getHighlighter(){\r\n            return highlighter;\r\n        },\r\n        set(filter){\r\n            var guarded = filter.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n            var regex = new RegExp(\"(\"+guarded+\")\",\"gi\");\r\n            highlighter = function(e, choiceDom, text){\r\n                // TODO replace with\r\n                // var pos = text.indexOf(filter);\r\n                e.innerHTML = text.replace(regex,\"<u>$1</u>\");\r\n                // TODO to method\r\n                // var nodes = e.querySelectorAll('u');\r\n                // var array = Array.prototype.slice.call(nodes);\r\n                // if (choiceDom.highlightedElements)\r\n                //     choiceDom.highlightedElements.concat(array);\r\n                // else\r\n                //     choiceDom.highlightedElements = array;\r\n            }\r\n        },\r\n        reset(){\r\n            highlighter = null;\r\n        }\r\n    }\r\n}","import { composeSync } from \"../ToolsJs\";\r\n\r\nexport function CustomChoiceStylingsPlugin(defaults){\r\n    defaults.customChoiceStylings =  null;\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            plugStaticDom: ()=> {\r\n                let {choiceDomFactory} = aspects;\r\n                let customChoiceStylings = configuration.customChoiceStylings;\r\n                if (customChoiceStylings) {\r\n\r\n                    let customChoiceStylingsAspect = CustomChoiceStylingsAspect(customChoiceStylings);\r\n                    ExtendChoiceDomFactory(choiceDomFactory, customChoiceStylingsAspect);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendChoiceDomFactory(choiceDomFactory, customChoiceStylingsAspect){\r\n    let origChoiceDomFactoryCreate = choiceDomFactory.create;\r\n    choiceDomFactory.create = function(choiceElement, wrap, toggle){\r\n        var o = origChoiceDomFactoryCreate(choiceElement, wrap, toggle);\r\n        customChoiceStylingsAspect.customize(wrap, o.choiceDom, o.choiceDomManagerHandlers);\r\n        return o;\r\n    }\r\n}\r\n\r\nfunction CustomChoiceStylingsAspect(customChoiceStylings){\r\n    return {\r\n        customize(wrap, choiceDom, choiceDomManagerHandlers){\r\n            var handlers = customChoiceStylings(choiceDom, wrap.option);\r\n\r\n            if (handlers){\r\n                function customChoiceStylingsClosure(custom){\r\n                    return function() {\r\n                            custom({\r\n                                isOptionSelected: wrap.isOptionSelected,\r\n                                isOptionDisabled: wrap.isOptionDisabled,\r\n                                isHoverIn: wrap.choice.isHoverIn,\r\n                                //isHighlighted: wrap.choice.isHighlighted  // TODO isHighlighted should be developed\r\n                            });\r\n                    }\r\n                }\r\n                if (choiceDomManagerHandlers.updateHoverIn && handlers.updateHoverIn)  \r\n                    choiceDomManagerHandlers.updateHoverIn \r\n                        = composeSync(choiceDomManagerHandlers.updateHoverIn, customChoiceStylingsClosure(handlers.updateHoverIn) );\r\n                if (choiceDomManagerHandlers.updateSelected && handlers.updateSelected)  \r\n                    choiceDomManagerHandlers.updateSelected \r\n                        = composeSync(choiceDomManagerHandlers.updateSelected, customChoiceStylingsClosure(handlers.updateSelected));\r\n                if (choiceDomManagerHandlers.updateDisabled && handlers.updateDisabled)  \r\n                    choiceDomManagerHandlers.updateDisabled\r\n                        = composeSync(choiceDomManagerHandlers.updateDisabled, customChoiceStylingsClosure(handlers.updateDisabled));\r\n                if (choiceDomManagerHandlers.updateHighlighted && handlers.updateHighlighted)  \r\n                    choiceDomManagerHandlers.updateHighlighted\r\n                        = composeSync(choiceDomManagerHandlers.updateHighlighted, customChoiceStylingsClosure(handlers.updateHighlighted));\r\n            }\r\n        }\r\n    }\r\n}","import { composeSync } from \"../ToolsJs\";\r\n\r\nexport function CustomPickStylingsPlugin(defaults){\r\n    defaults.customPickStylings = null;\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            plugStaticDom: ()=> {\r\n                let {componentPropertiesAspect, pickDomFactory} = aspects;\r\n                let customPickStylings = configuration.customPickStylings;\r\n                let customPickStylingsAspect = CustomPickStylingsAspect(componentPropertiesAspect, customPickStylings);\r\n                ExtendPickDomFactory(pickDomFactory, customPickStylingsAspect);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendPickDomFactory(pickDomFactory, customPickStylingsAspect){\r\n    let origCreatePickDomFactory = pickDomFactory.create;\r\n    pickDomFactory.create = function(pickElement, wrap, removeOnButton){\r\n        var o = origCreatePickDomFactory(pickElement, wrap, removeOnButton);\r\n        customPickStylingsAspect.customize(wrap, o.pickDom, o.pickDomManagerHandlers);\r\n        return o;\r\n    }\r\n}\r\n\r\nfunction CustomPickStylingsAspect(componentPropertiesAspect, customPickStylings){\r\n    return {\r\n        customize(wrap, pickDom, pickDomManagerHandlers){\r\n            if (customPickStylings){\r\n                var handlers = customPickStylings(pickDom, wrap.option);\r\n\r\n                if (handlers){\r\n                    function customPickStylingsClosure(custom){\r\n                        return function() {\r\n                            custom({\r\n                                isOptionDisabled: wrap.isOptionDisabled,\r\n                                isComponentDisabled: componentPropertiesAspect.getDisabled()\r\n                            });\r\n                        }\r\n                    }\r\n                    if (pickDomManagerHandlers.updateDisabled && handlers.updateDisabled)  \r\n                        pickDomManagerHandlers.updateDisabled \r\n                            = composeSync(pickDomManagerHandlers.updateDisabled, customPickStylingsClosure(handlers.updateDisabled));\r\n                    if (pickDomManagerHandlers.updateComponentDisabled && handlers.updateComponentDisabled)  \r\n                        pickDomManagerHandlers.updateComponentDisabled \r\n                            = composeSync(pickDomManagerHandlers.updateComponentDisabled, customPickStylingsClosure(handlers.updateComponentDisabled));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\n\r\nexport function UpdateAppearancePlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){\r\n    var updateAppearanceAspect = UpdateAppearanceAspect();\r\n    return (aspects) => {\r\n        aspects.updateAppearanceAspect = updateAppearanceAspect;\r\n        return {\r\n            layout: () => {\r\n                var {updateAspect, loadAspect} = aspects;\r\n\r\n                updateAspect.update = composeSync(updateAspect.update, ()=>updateAppearanceAspect.updateAppearance())\r\n                loadAspect.load = composeSync(loadAspect.load, ()=>updateAppearanceAspect.updateAppearance())\r\n\r\n                return{\r\n                    buildApi(api){\r\n                        api.updateAppearance = ()=>updateAppearanceAspect.updateAppearance();\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nfunction UpdateAppearanceAspect(){\r\n    return {\r\n        updateAppearance(){}\r\n    }\r\n}","import { extend } from 'jquery';\r\nimport {composeSync} from '../ToolsJs';\r\n\r\nexport function DisableComponentPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(){ \r\n    return (aspects) => {\r\n        return {\r\n            plugStaticDom: () => {\r\n                var {pickDomFactory, componentPropertiesAspect} = aspects;\r\n                ExtendPickDomFactory(pickDomFactory, componentPropertiesAspect);\r\n            },\r\n            layout: () => {\r\n                var {updateAppearanceAspect, picksList, picksDom, componentPropertiesAspect, picksElementAspect} = aspects;\r\n\r\n                var disableComponent = (isComponentDisabled)=>{\r\n                    picksList.forEach(pick=>pick.pickDomManagerHandlers.updateComponentDisabled())\r\n                    picksDom.disable(isComponentDisabled);\r\n                }\r\n\r\n                var origOnClick = picksElementAspect.onClick;\r\n                picksElementAspect.onClick = (handler)=>{\r\n                    disableComponent = (isComponentDisabled)=>{\r\n                        picksList.forEach(pick=>pick.pickDomManagerHandlers.updateComponentDisabled())\r\n                        picksDom.disable(isComponentDisabled);\r\n                        if (isComponentDisabled)\r\n                            picksElementAspect.onClickUnbind(); //componentDisabledEventBinder.unbind();\r\n                        else\r\n                            origOnClick(handler); //componentDisabledEventBinder.bind(picksElement, \"click\",  handler); \r\n                    }\r\n                } \r\n            \r\n                let isComponentDisabled; // state! \r\n                function updateDisabled(){\r\n                    let newIsComponentDisabled = componentPropertiesAspect.getDisabled();\r\n                    if (isComponentDisabled!==newIsComponentDisabled){\r\n                        isComponentDisabled=newIsComponentDisabled;\r\n                        disableComponent(newIsComponentDisabled);\r\n                    }\r\n                }\r\n            \r\n                updateAppearanceAspect.updateAppearance = composeSync(updateAppearanceAspect.updateAppearance,  updateDisabled);\r\n            \r\n                return{\r\n                    buildApi(api){\r\n                        api.updateDisabled = updateDisabled;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendPickDomFactory(pickDomFactory, componentPropertiesAspect){\r\n    var origCreatePickDomFactory = pickDomFactory.create;\r\n    pickDomFactory.create = (pickElement, wrap, remove) => {\r\n        var value = origCreatePickDomFactory(pickElement, wrap, remove);\r\n        value.pickDomManagerHandlers.updateComponentDisabled = () => {\r\n            value.pickDom.pickButtonElement.disabled = componentPropertiesAspect.getDisabled()\r\n        };\r\n        return value;\r\n    }\r\n}","import {composeSync} from '../ToolsJs';\r\nimport {getDataGuardedWithPrefix} from '../ToolsDom';\r\nimport {toggleStyling} from '../ToolsStyling';\r\nimport {ResetableFlag} from '../ToolsDom'\r\n\r\nexport function PlaceholderPlugin(){\r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {staticManager, picksList, picksDom, filterDom, initialDom, updateDataAspect,\r\n                    resetFilterListAspect, filterManagerAspect, environment} = aspects;\r\n                let isIE11 = environment.isIE11;\r\n                let {placeholder,  css} = configuration;\r\n                let {picksElement} = picksDom;\r\n                let filterInputElement = filterDom.filterInputElement;\r\n                \r\n                function setPlaceholder(placeholder){\r\n                    filterInputElement.placeholder = placeholder;\r\n                }\r\n                if (isIE11){\r\n                    var ignoreNextInputResetableFlag = ResetableFlag(); \r\n                    let placeholderStopInputAspect = PlaceholderStopInputAspect(ignoreNextInputResetableFlag);\r\n                    var setPlaceholderOrig = setPlaceholder;\r\n                    setPlaceholder = function(placeholder){\r\n                        ignoreNextInputResetableFlag.set();\r\n                        setPlaceholderOrig(placeholder);\r\n                    }\r\n                    var origOnInput = filterDom.onInput;\r\n                    filterDom.onInput = (handler) => {\r\n                        origOnInput(\r\n                            ()=>{if (placeholderStopInputAspect.get()){\r\n                                placeholderStopInputAspect.reset();\r\n                            } else {\r\n                                handler();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            \r\n                if (!placeholder){\r\n                    placeholder = getDataGuardedWithPrefix(initialDom.initialElement,\"bsmultiselect\",\"placeholder\");\r\n                }\r\n            \r\n                function setEmptyInputWidth(isVisible){\r\n                    if(isVisible)\r\n                        filterInputElement.style.width ='100%';\r\n                    else \r\n                        filterInputElement.style.width ='2ch';\r\n                }\r\n                var emptyToggleStyling = toggleStyling(filterInputElement, css.filterInput_empty);\r\n                function showPlacehodler(isVisible){\r\n                    if (isVisible)\r\n                    {\r\n                        setPlaceholder(placeholder?placeholder:'');\r\n                        picksElement.style.display = 'block';\r\n                    }\r\n                    else\r\n                    {\r\n                        setPlaceholder('');\r\n                        picksElement.style.display = 'flex';\r\n                    }\r\n                    emptyToggleStyling(isVisible);\r\n                    setEmptyInputWidth(isVisible);\r\n                }\r\n                showPlacehodler(true);\r\n            \r\n                function setDisabled(isComponentDisabled){ \r\n                    filterInputElement.disabled = isComponentDisabled;\r\n                };\r\n                let isEmpty = () => picksList.isEmpty() && filterDom.isEmpty()\r\n            \r\n                function updatePlacehodlerVisibility(){\r\n                    showPlacehodler(isEmpty());\r\n                };\r\n                function updateEmptyInputWidth(){\r\n                    setEmptyInputWidth(isEmpty())\r\n                };\r\n                \r\n                let origDisable = picksDom.disable;\r\n                picksDom.disable = (isComponentDisabled)=>{\r\n                    setDisabled(isComponentDisabled);\r\n                    origDisable(isComponentDisabled);\r\n                };\r\n            \r\n                staticManager.appendToContainer = composeSync(staticManager.appendToContainer, updateEmptyInputWidth);\r\n            \r\n                filterManagerAspect.processEmptyInput = composeSync(updateEmptyInputWidth, filterManagerAspect.processEmptyInput);\r\n                resetFilterListAspect.forceResetFilter = composeSync(resetFilterListAspect.forceResetFilter, updatePlacehodlerVisibility);\r\n                        \r\n                let origAdd = picksList.add;\r\n                picksList.add = (pick) => { \r\n                    let returnValue = origAdd(pick);\r\n                    if (picksList.getCount()==1 ){ // make flex\r\n                        if (filterDom.isEmpty()){\r\n                            setPlaceholder('');\r\n                            picksElement.style.display = 'flex';\r\n                            emptyToggleStyling(false);\r\n                            filterInputElement.style.width ='2ch';\r\n                        } else {\r\n                            picksElement.style.display = 'flex';\r\n                        }\r\n                    }\r\n                    pick.dispose = composeSync(pick.dispose, function()\r\n                        { \r\n                            if (isEmpty()) {\r\n                                showPlacehodler(true);\r\n                            }\r\n                        });\r\n                    return returnValue;\r\n                };\r\n            \r\n                updateDataAspect.updateData = composeSync(updateDataAspect.updateData, updatePlacehodlerVisibility);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// ie11 support\r\nfunction PlaceholderStopInputAspect(resetableFlag){\r\n    return{\r\n        get(){\r\n            return resetableFlag.get();\r\n        },\r\n        reset(){\r\n            return resetableFlag.reset();\r\n        }             \r\n    }\r\n}","export function PlaceholderCssPatchPlugin(defaults){\r\n    defaults.cssPatch.filterInput_empty = 'form-control'\r\n}","import {composeSync} from '../ToolsJs';\r\nimport {toggleStyling} from '../ToolsStyling';\r\n\r\nexport function FloatingLabelPlugin(defaults){\r\n    defaults.css.label_floating_lifted = 'floating-lifted';\r\n    defaults.css.picks_floating_lifted = 'floating-lifted';            \r\n    return {\r\n        plug\r\n    }\r\n}\r\n\r\nexport function plug(configuration){ \r\n    return (aspects) => {\r\n        return {\r\n            plugStaticDom: ()=> {\r\n                aspects.floatingLabelAspect = FloatingLabelAspect();\r\n            },\r\n            layout: () => {\r\n                let {picksList, picksDom, filterDom, \r\n                    updateDataAspect, resetFilterListAspect, floatingLabelAspect, getLabelAspect} = aspects;\r\n                let {css} = configuration;\r\n                \r\n                if (floatingLabelAspect.isFloatingLabel() ){\r\n                   let labelElement = getLabelAspect.getLabel(); \r\n                   let picksElement = picksDom.picksElement;\r\n            \r\n                   var liftToggleStyling1 = toggleStyling(labelElement, css.label_floating_lifted);\r\n                   var liftToggleStyling2 = toggleStyling(picksElement, css.picks_floating_lifted);\r\n            \r\n                   function liftedLabel(isEmpty){\r\n                       liftToggleStyling1(isEmpty);\r\n                       liftToggleStyling2(isEmpty);\r\n                   }\r\n               \r\n                   let isEmpty = () => picksList.isEmpty() && filterDom.isEmpty() && !picksDom.getIsFocusIn();;\r\n               \r\n                   function updateLiftedLabel(){\r\n                       liftedLabel(!isEmpty());\r\n                   };\r\n               \r\n                   updateLiftedLabel();\r\n               \r\n                   resetFilterListAspect.forceResetFilter = composeSync(resetFilterListAspect.forceResetFilter, updateLiftedLabel);\r\n                       \r\n                   let origAdd = picksList.add;\r\n                   picksList.add = (pick) => { \r\n                       let returnValue = origAdd(pick);\r\n                       if (picksList.getCount()==1) \r\n                           updateLiftedLabel()\r\n                       pick.dispose = composeSync(pick.dispose, ()=>\r\n                           { \r\n                               if (picksList.getCount()==0) \r\n                                   updateLiftedLabel()\r\n                           })\r\n                       return returnValue;\r\n                   };\r\n               \r\n                   var origToggleFocusStyling = picksDom.toggleFocusStyling;\r\n                   picksDom.toggleFocusStyling = () => {\r\n                       var isFocusIn = picksDom.getIsFocusIn();\r\n                       origToggleFocusStyling(isFocusIn);\r\n                       updateLiftedLabel();\r\n                   }\r\n               \r\n                   updateDataAspect.updateData = composeSync(updateDataAspect.updateData, updateLiftedLabel);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction FloatingLabelAspect() {\r\n    return {\r\n        isFloatingLabel(){},\r\n    }\r\n}","export function WarningCssPatchPlugin(defaults){\r\n    defaults.cssPatch.warning = {paddingLeft: '.25rem', paddingRight: '.25rem', zIndex: 4,  fontSize:'small', backgroundColor: 'var(--bs-warning)'}\r\n}","import {addStyling} from \"../ToolsStyling\";\r\nimport {composeSync} from '../ToolsJs';\r\n\r\nconst defNoResultsWarningMessage = 'No results found';\r\n\r\nexport function preset(o){o.noResultsWarning=defNoResultsWarningMessage; o.isNoResultsWarningEnabled=false;}\r\n\r\nexport function plug(configuration){\r\n    return (aspects) => {\r\n        return {\r\n            layout: () => {\r\n                let {choicesDom, createElementAspect, staticManager, afterInputAspect, filterManagerAspect, resetLayoutAspect} = aspects;\r\n                let {css, noResultsWarning} = configuration;\r\n\r\n                if (configuration.isNoResultsWarningEnabled){\r\n                    let warningAspect = WarningAspect(choicesDom, createElementAspect, staticManager, css);\r\n                    aspects.warningAspect = warningAspect;\r\n                \r\n                    ExtendAfterInputAspect(afterInputAspect, warningAspect, filterManagerAspect, noResultsWarning);\r\n                \r\n                    resetLayoutAspect.resetLayout = composeSync(() => warningAspect.hide(), resetLayoutAspect.resetLayout);\r\n                }\r\n            },\r\n            append: ()=> {\r\n                let {createPopperAspect, filterDom, warningAspect, staticManager, disposeAspect} = aspects;\r\n                if (warningAspect){\r\n                    let filterInputElement = filterDom.filterInputElement;\r\n\r\n                    let pop2 = createPopperAspect.createPopper(warningAspect.warningElement, filterInputElement, false);\r\n                    staticManager.appendToContainer = composeSync(staticManager.appendToContainer, pop2.init);\r\n\r\n                    var origWarningAspectShow = warningAspect.show;\r\n                    warningAspect.show = (msg) => {\r\n                        pop2.update();\r\n                        origWarningAspectShow(msg);\r\n                    }\r\n                    disposeAspect.dispose = composeSync(disposeAspect.dispose, pop2.dispose);      \r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction ExtendAfterInputAspect(afterInputAspect, warningAspect, filterManagerAspect, noResultsWarning){\r\n    var origVisible = afterInputAspect.visible;\r\n    afterInputAspect.visible = (showChoices, visibleCount) => {\r\n        warningAspect.hide(); \r\n        origVisible(showChoices, visibleCount)\r\n    }\r\n\r\n    var origNotVisible = afterInputAspect.notVisible;\r\n    afterInputAspect.notVisible = (hideChoices) => {\r\n        origNotVisible(hideChoices);\r\n    \r\n        if (filterManagerAspect.getFilter())\r\n            warningAspect.show(noResultsWarning); \r\n        else\r\n            warningAspect.hide();\r\n    }\r\n}\r\n\r\nfunction WarningAspect(choicesDom, createElementAspect, staticManager, css){\r\n    let choicesElement = choicesDom.choicesElement;\r\n\r\n    var warningElement = createElementAspect.createElement('DIV'); \r\n    staticManager.appendToContainer = composeSync(staticManager.appendToContainer, ()=>\r\n        choicesElement.parentNode.insertBefore(warningElement, choicesElement.nextSibling));\r\n\r\n    warningElement.style.display = 'none';\r\n    addStyling(warningElement, css.warning);\r\n\r\n\r\n    return {\r\n        warningElement,\r\n        show(message){\r\n            warningElement.style.display = 'block';\r\n            warningElement.innerHTML = message;\r\n        },\r\n        hide(){\r\n            warningElement.style.display = 'none';\r\n            warningElement.innerHTML = \"\";\r\n        }\r\n    }\r\n}","import {plug as plug2, preset as preset2} from './WarningPlugin';\r\n\r\nexport function WarningBs4Plugin(defaults){\r\n    preset(defaults);\r\n    return {plug:plug2};\r\n}\r\n\r\nexport function preset(defaults){\r\n    defaults.css.warning = 'alert-warning bg-warning';\r\n    preset2(defaults);\r\n}\r\n","import {\r\n    BsAppearanceBs4Plugin, BsAppearanceBs5Plugin, \r\n    \r\n    CssPatchBs4Plugin, CssPatchBs5Plugin,\r\n    BsAppearanceBs4CssPatchPlugin, BsAppearanceBs5CssPatchPlugin,\r\n    \r\n    SelectElementPlugin, \r\n    LabelForAttributePlugin, ValidationApiPlugin, \r\n    UpdateAppearancePlugin, \r\n    \r\n    DisableComponentPlugin,\r\n    FormResetPlugin, CreatePopperPlugin,  RtlPlugin,  PlaceholderPlugin, PlaceholderCssPatchPlugin, \r\n     OptionsApiPlugin, \r\n    JQueryMethodsPlugin, \r\n    SelectedOptionPlugin, FormRestoreOnBackwardPlugin, \r\n    DisabledOptionPlugin, PicksApiPlugin, HighlightPlugin,\r\n    ChoicesDynamicStylingPlugin, CustomPickStylingsPlugin, CustomChoiceStylingsPlugin,\r\n    \r\n    FloatingLabelPlugin, FloatingLabelCssPatchBs5Plugin, \r\n    \r\n    WarningCssPatchPlugin, WarningBs4Plugin, WarningBs5Plugin,\r\n\r\n    PicksPlugin,\r\n\r\n    HiddenOptionPlugin,\r\n    /*HiddenOptionAltPlugin as HiddenOptionPlugin*/} from './plugins/index'\r\n\r\nimport {shallowClearClone} from './ToolsJs'\r\n\r\n\r\nexport let Bs4PluginSet = {BsAppearanceBs4Plugin, WarningBs4Plugin, CssPatchBs4Plugin, BsAppearanceBs4CssPatchPlugin }\r\n\r\nexport let Bs5PluginSet = {BsAppearanceBs5Plugin, WarningBs5Plugin, CssPatchBs5Plugin, BsAppearanceBs5CssPatchPlugin, FloatingLabelCssPatchBs5Plugin }\r\n\r\nexport let multiSelectPlugins = {SelectElementPlugin, \r\n    LabelForAttributePlugin, HiddenOptionPlugin, ValidationApiPlugin, \r\n    UpdateAppearancePlugin, \r\n    DisableComponentPlugin,\r\n    FormResetPlugin, CreatePopperPlugin, WarningCssPatchPlugin, RtlPlugin,  PlaceholderPlugin, PlaceholderCssPatchPlugin, FloatingLabelPlugin,  OptionsApiPlugin, \r\n    JQueryMethodsPlugin, \r\n    SelectedOptionPlugin, FormRestoreOnBackwardPlugin, \r\n    DisabledOptionPlugin, PicksApiPlugin, HighlightPlugin,\r\n    ChoicesDynamicStylingPlugin, CustomPickStylingsPlugin, CustomChoiceStylingsPlugin};\r\n\r\nexport let picksPlugins = {PicksPlugin, \r\n    LabelForAttributePlugin, ValidationApiPlugin, \r\n    UpdateAppearancePlugin, \r\n    DisableComponentPlugin, \r\n    CreatePopperPlugin, WarningCssPatchPlugin, RtlPlugin,  PlaceholderPlugin, PlaceholderCssPatchPlugin, FloatingLabelPlugin, OptionsApiPlugin, \r\n    JQueryMethodsPlugin, PicksApiPlugin, HighlightPlugin,\r\n    ChoicesDynamicStylingPlugin, CustomPickStylingsPlugin, CustomChoiceStylingsPlugin};\r\n\r\nexport let allPlugins =  shallowClearClone(multiSelectPlugins, {PicksPlugin});\r\n\r\n\r\n\r\n\r\n// var defaultConfig = {\r\n//     plugins: multiSelectPlugins\r\n// }\r\n\r\n// var picksConfig = {\r\n//     plugins: picksPlugins\r\n// }\r\n\r\n// export function createConfig(arg){\r\n//     return config;\r\n// }","import {composeSync} from './ToolsJs'\r\nimport {EventBinder} from './ToolsDom'\r\nimport {addStyling, toggleStyling} from './ToolsStyling'\r\n\r\nexport let utilities = {composeSync, EventBinder, addStyling, toggleStyling}","import {findDirectChildByTagName, closestByClassName} from './ToolsDom';\r\n\r\nexport function StaticDomFactory(\r\n    createElementAspect, choicesDomFactory, filterDomFactory, picksDomFactory, initialDom, containerClass){\r\n    return {\r\n        createStaticDom(){\r\n            var element = initialDom.initialElement;\r\n            \r\n            let containerElement, picksElement;\r\n            let removableContainerClass= false;\r\n            if (element.tagName == 'DIV') {\r\n                containerElement = element;\r\n                if (!containerElement.classList.contains(containerClass)){\r\n                    containerElement.classList.add(containerClass);\r\n                    removableContainerClass = true;\r\n                }\r\n                picksElement = findDirectChildByTagName(containerElement, 'UL');\r\n            }\r\n            else if (element.tagName == 'UL') {\r\n                picksElement = element;\r\n                containerElement = closestByClassName(element, containerClass);\r\n                if (!containerElement){\r\n                    throw new Error('BsMultiSelect: defined on UL but precedentant DIV for container not found; class='+containerClass);\r\n                }\r\n            } \r\n            else if (element.tagName==\"INPUT\") {\r\n                throw new Error('BsMultiSelect: INPUT element is not supported');\r\n            }\r\n\r\n            let staticDom = {\r\n                containerElement\r\n            };\r\n            \r\n            let isDisposablePicksElementFlag=false;\r\n            if (!picksElement) {\r\n                picksElement = createElementAspect.createElement('UL');\r\n                isDisposablePicksElementFlag = true; \r\n            }\r\n\r\n            let choicesDom = choicesDomFactory.create();\r\n            let picksDom  = picksDomFactory.create(picksElement, isDisposablePicksElementFlag);\r\n            let filterDom = filterDomFactory.create(isDisposablePicksElementFlag);\r\n\r\n            let {choicesElement} = choicesDom; \r\n            return {\r\n                staticDom,\r\n\r\n                choicesDom,\r\n                filterDom,\r\n                picksDom,\r\n                \r\n                staticManager: {\r\n                    appendToContainer(){ \r\n                        picksDom.pickFilterElement.appendChild(filterDom.filterInputElement);\r\n                        picksDom.picksElement.appendChild(picksDom.pickFilterElement); \r\n                        containerElement.appendChild(choicesElement); \r\n                        if (isDisposablePicksElementFlag)\r\n                            containerElement.appendChild(picksElement)\r\n                    },\r\n                    dispose(){ \r\n                        containerElement.removeChild(choicesElement); \r\n                        if (removableContainerClass)\r\n                            containerElement.classList.remove(containerClass);\r\n                        if (isDisposablePicksElementFlag)\r\n                            containerElement.removeChild(picksElement)\r\n                        picksDom.dispose();\r\n                        filterDom.dispose();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","export function CreateElementAspect(createElement, createElementFromHtml){\r\n    return {\r\n        createElement,\r\n        createElementFromHtml\r\n    }\r\n}","export function ChoicesVisibilityAspect(choicesElement) {\r\n\r\n    return {\r\n        isChoicesVisible(){ \r\n            return choicesElement.style.display != 'none'},\r\n        setChoicesVisible(visible){\r\n            choicesElement.style.display = visible ? 'block' : 'none';\r\n        },\r\n        updatePopupLocation(){\r\n\r\n        }\r\n    }\r\n}\r\n","export function SpecialPicksEventsAspect(){\r\n    return {\r\n        backSpace(pick){ \r\n            pick.setSelectedFalse(); \r\n        }\r\n    }\r\n}","export function TriggerAspect(element, trigger) {\r\n    return {\r\n        trigger: (eventName) => {\r\n            trigger(element, eventName)\r\n        }\r\n    }\r\n}\r\n\r\nexport function OnChangeAspect(triggerAspect, name) {\r\n    return {\r\n        onChange(){\r\n            triggerAspect.trigger(name)\r\n        }\r\n    }\r\n}\r\n\r\nexport function ComponentPropertiesAspect(getDisabled) {\r\n    return {\r\n        getDisabled\r\n    }\r\n}\r\n\r\n","export function OptionsAspect(options){\r\n    return {\r\n        getOptions : () => options\r\n    }\r\n}\r\n\r\nexport function OptionPropertiesAspect(getText){\r\n    if (!getText){\r\n        getText = (option) => option.text;\r\n    }\r\n    return {\r\n        getText\r\n    }\r\n}\r\n","export function ChoicesEnumerableAspect(countableChoicesList, getNext){\r\n    return {\r\n        forEach(f){\r\n            let wrap =  countableChoicesList.getHead(); \r\n            while(wrap){\r\n                f(wrap);\r\n                wrap = getNext(wrap);\r\n            }\r\n        }\r\n    }\r\n}","export function NavigateManager(\r\n    list, getPrev, getNext\r\n){\r\n    return {\r\n        navigate(down, wrap /* hoveredChoice */){ \r\n            if (down) {\r\n                return wrap?getNext(wrap): list.getHead();\r\n            } else {\r\n                return wrap?getPrev(wrap): list.getTail();\r\n            }\r\n        },\r\n        getCount(){\r\n            return list.getCount()\r\n        },\r\n        getHead(){\r\n            return list.getHead()\r\n        }\r\n    }\r\n}\r\n\r\nexport function FilterPredicateAspect(){\r\n    return {\r\n        filterPredicate: (wrap, text) => \r\n            wrap.choice.searchText.indexOf(text) >= 0    \r\n    }\r\n}\r\n\r\nexport function FilterManagerAspect(\r\n    emptyNavigateManager,\r\n    filteredNavigateManager,\r\n    filteredChoicesList, \r\n    choicesEnumerableAspect,\r\n    filterPredicateAspect\r\n    ) {\r\n    let showEmptyFilter=true;\r\n    let filterText = \"\";\r\n    return {\r\n        getNavigateManager(){\r\n            return (showEmptyFilter)?emptyNavigateManager:filteredNavigateManager;\r\n        },\r\n        processEmptyInput(){ // redefined in PlaceholderPulgin, HighlightPlugin\r\n            showEmptyFilter =true;\r\n            filterText =\"\";\r\n            choicesEnumerableAspect.forEach( (wrap)=>{\r\n                wrap.choice.setVisible(true);\r\n            });\r\n        },\r\n        getFilter(){\r\n            return filterText;\r\n        },\r\n        setFilter(text){   // redefined in  HighlightPlugin\r\n            showEmptyFilter =false;\r\n            filterText = text;\r\n            filteredChoicesList.reset();\r\n            choicesEnumerableAspect.forEach( (wrap)=>{\r\n                wrap.choice.filteredPrev = wrap.choice.filteredNext = null;\r\n                var v = filterPredicateAspect.filterPredicate(wrap, text)\r\n                if (v)\r\n                    filteredChoicesList.add(wrap);\r\n                wrap.choice.setVisible(v);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","export function BuildAndAttachChoiceAspect(\r\n    buildChoiceAspect,\r\n    ){\r\n    return {\r\n        buildAndAttachChoice(\r\n            wrap,\r\n            getNextElement \r\n            )\r\n        {\r\n            buildChoiceAspect.buildChoice(wrap);\r\n            wrap.choice.choiceElementAttach(getNextElement?.());\r\n        }\r\n    }\r\n}\r\n\r\nexport function BuildChoiceAspect(\r\n        choicesDom,\r\n        choiceDomFactory,\r\n        choiceClickAspect\r\n    ) {\r\n    return {\r\n        buildChoice(wrap) {\r\n            var {choiceElement, setVisible, attach, detach} = choicesDom.createChoiceElement();\r\n            wrap.choice.choiceElement = choiceElement;\r\n            wrap.choice.choiceElementAttach = attach;\r\n            wrap.choice.isChoiceElementAttached = true;\r\n            \r\n            let {dispose, choiceDom, choiceDomManagerHandlers} = choiceDomFactory.create(choiceElement, wrap, () => choiceClickAspect.choiceClick(wrap));\r\n            wrap.choice.choiceDom=choiceDom;\r\n            choiceDomManagerHandlers.updateData();\r\n            if (choiceDomManagerHandlers.updateSelected)  \r\n                choiceDomManagerHandlers.updateSelected();\r\n            if (choiceDomManagerHandlers.updateDisabled)  \r\n                choiceDomManagerHandlers.updateDisabled();\r\n            \r\n\r\n            wrap.choice.choiceDomManagerHandlers = choiceDomManagerHandlers;\r\n            \r\n            wrap.choice.remove = () => {\r\n                detach();\r\n            };\r\n            \r\n            wrap.choice.isFilteredIn = true;\r\n            \r\n            wrap.choice.setHoverIn = (v) => {\r\n                wrap.choice.isHoverIn =v ;\r\n                choiceDomManagerHandlers.updateHoverIn();\r\n            }\r\n        \r\n            wrap.choice.setVisible = (v) => {\r\n                wrap.choice.isFilteredIn = v;\r\n                setVisible(wrap.choice.isFilteredIn)\r\n            }\r\n            \r\n            wrap.choice.dispose = () => {\r\n                wrap.choice.choiceDomManagerHandlers = null;\r\n                dispose();\r\n    \r\n                wrap.choice.choiceElement = null;\r\n                wrap.choice.choiceDom = null;\r\n                wrap.choice.choiceElementAttach = null;\r\n                wrap.choice.isChoiceElementAttached = false;\r\n                wrap.choice.remove = null; \r\n        \r\n                // not real data manipulation but internal state\r\n                wrap.choice.setVisible = null; // TODO: refactor it there should be 3 types of not visibility: for hidden, for filtered out, for optgroup, for message item\r\n                wrap.choice.setHoverIn = null;\r\n        \r\n                wrap.choice.dispose = null;\r\n            }\r\n\r\n            wrap.dispose = () => {\r\n                wrap.choice.dispose();\r\n                wrap.dispose = null;\r\n            }\r\n        }\r\n    }\r\n}","export function OptionAttachAspect(createWrapAspect, createChoiceBaseAspect, buildAndAttachChoiceAspect, wraps){\r\n    return {\r\n        attach(option){\r\n            let wrap = createWrapAspect.createWrap(option);\r\n            wrap.choice = createChoiceBaseAspect.createChoiceBase(option);\r\n\r\n            // let optGroup = optGroupAspect.getOptionOptGroup(option);\r\n            // if (prevOptGroup != optGroup){\r\n            //     currentOptGroup = optGroup;\r\n            //     var optGroupWrap = optGroupBuildAspect.wrapAndAttachOptGroupItem(option);\r\n            // }\r\n            // wrap.optGroup = currentOptGroup;\r\n            \r\n            \r\n            wraps.push(wrap); // note: before attach because attach need it for navigation management\r\n            buildAndAttachChoiceAspect.buildAndAttachChoice(wrap);\r\n            //wraps.push(wrap);\r\n        }\r\n    }\r\n}\r\n\r\nexport function OptionsLoopAspect(optionsAspect, optionAttachAspect){ \r\n    return{\r\n        loop(){\r\n            let options = optionsAspect.getOptions();\r\n            for(let i = 0; i<options.length; i++) {\r\n                let option = options[i];\r\n                optionAttachAspect.attach(option);\r\n            } \r\n        }\r\n    }\r\n}","export function UpdateDataAspect(choicesDom, wraps, picksList, optionsLoopAspect, resetLayoutAspect){\r\n    return {\r\n        updateData(){\r\n            // close drop down , remove filter\r\n            resetLayoutAspect.resetLayout();\r\n            choicesDom.choicesListElement.innerHTML = \"\"; // TODO: there should better \"optimization\"\r\n            wraps.clear();\r\n            picksList.forEach(pick=>pick.dispose());\r\n            picksList.reset();\r\n            optionsLoopAspect.loop();\r\n        }\r\n    }\r\n}\r\n\r\nexport function UpdateAspect(updateDataAspect){\r\n    return {\r\n        update(){\r\n            updateDataAspect.updateData();\r\n        }\r\n    }\r\n}","import {composeSync} from './ToolsJs';\r\n\r\nexport function IsChoiceSelectableAspect(){ // TODO rename to IsSelectableByUserAspect ?\r\n    return {\r\n        isSelectable: (wrap)=>true \r\n    }\r\n}\r\n\r\n// todo: remove?\r\nexport function ChoiceClickAspect(optionToggleAspect, filterDom){\r\n    return {\r\n        choiceClick: (wrap) => {\r\n            optionToggleAspect.toggle(wrap);\r\n            filterDom.setFocus();\r\n        }\r\n    }\r\n}\r\n\r\n// // fullMatchAspect trySetWrapSelected(fullMatchWrap.option, composeUpdateSelected(fullMatchWrap, true), true);\r\n\r\nexport function OptionToggleAspect(createPickHandlersAspect, addPickAspect /*, setOptionSelectedAspect*/){\r\n    return {\r\n        toggle: (wrap) => {\r\n            let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n            addPickAspect.addPick(wrap, pickHandlers);\r\n            return true; // TODO: process setOptionSelectedAspect\r\n        }\r\n    }\r\n}\r\n\r\nexport function AddPickAspect(){\r\n    return {\r\n        addPick(wrap, pickHandlers){\r\n            return pickHandlers.producePick();\r\n        }\r\n    }\r\n}\r\n\r\nexport function FullMatchAspect(createPickHandlersAspect, addPickAspect){\r\n    return {\r\n        fullMatch(wrap){\r\n            let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n            addPickAspect.addPick(wrap, pickHandlers);\r\n            return true; // TODO: process setOptionSelectedAspect\r\n        }\r\n    }\r\n}\r\n\r\nexport function RemovePickAspect(){\r\n    return {\r\n        removePick(wrap, pick){\r\n            pick.dispose(); // overrided in SelectedOptionPlugin with trySetWrapSelected(wrap, false);\r\n        }\r\n    }\r\n}\r\n\r\nexport function ProducePickAspect(picksList, removePickAspect, buildPickAspect){\r\n    return {\r\n        producePick(wrap, pickHandlers){\r\n            let pick = buildPickAspect.buildPick(wrap, (event)=>pickHandlers.removeOnButton(event));\r\n                \r\n            let fixSelectedFalse = () => removePickAspect.removePick(wrap, pick)\r\n\r\n            pickHandlers.removeOnButton = fixSelectedFalse;\r\n            \r\n            pick.pickElementAttach();\r\n            let {remove: removeFromPicksList} = picksList.add(pick);\r\n            pick.setSelectedFalse = fixSelectedFalse;\r\n            pick.wrap = wrap; \r\n            pick.dispose = composeSync(\r\n                removeFromPicksList,\r\n                ()=>{\r\n                    pick.setSelectedFalse=null;\r\n                    pick.wrap = null;\r\n                }, \r\n                pick.dispose);\r\n            pickHandlers.removeAndDispose = () => pick.dispose();\r\n            return pick;\r\n        }\r\n    }\r\n}\r\n\r\n// redefined in MultiSelectInlineLayout to redefine handlers removeOnButton\r\n// redefined in SelectedOptionPlugin to compose wrap.updateSelected\r\nexport function CreatePickHandlersAspect(producePickAspect){\r\n    return{\r\n        createPickHandlers(wrap){\r\n            let pickHandlers = { \r\n                producePick: null,  // not redefined directly, but redefined in addPickAspect\r\n                removeAndDispose: null,  // not redefined, \r\n                removeOnButton: null // redefined in MultiSelectInlineLayout\r\n            }\r\n            \r\n            pickHandlers.producePick = () => producePickAspect.producePick(wrap, pickHandlers);\r\n            return pickHandlers;\r\n        }\r\n    }\r\n}\r\n\r\nexport function CreateChoiceBaseAspect(optionPropertiesAspect){\r\n    return {\r\n        createChoiceBase(option){\r\n            return {\r\n                    \r\n                //updateDisabled:null,  \r\n                //updateHidden:null,\r\n                \r\n                // navigation and filter support\r\n                filteredPrev: null, \r\n                filteredNext: null, \r\n                searchText: optionPropertiesAspect.getText(option).toLowerCase().trim(), // TODO make an index abstraction\r\n                \r\n                // internal state handlers, so they do not have \"update semantics\"\r\n                isHoverIn: false,\r\n                isFilteredIn: false,\r\n                \r\n                setVisible: null,\r\n                setHoverIn: null,\r\n                \r\n                // TODO: is it a really sense to have them there?\r\n                isChoiceElementAttached: false,\r\n                choiceElement: null,\r\n                choiceDom:null,\r\n                choiceElementAttach: null,\r\n                \r\n                itemPrev: null,\r\n                itemNext: null,\r\n                \r\n                remove: null,\r\n                \r\n                dispose: null\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function CreateWrapAspect(){\r\n    return {\r\n        createWrap(option){\r\n            return {\r\n                option: option\r\n            }\r\n        }\r\n    }\r\n}","export function HoveredChoiceAspect(){\r\n    let hoveredChoice=null;\r\n    return {\r\n        getHoveredChoice: () => hoveredChoice,\r\n        setHoveredChoice: (wrap) => {hoveredChoice = wrap},\r\n        resetHoveredChoice() {\r\n            if (hoveredChoice) {\r\n                hoveredChoice.choice.setHoverIn(false)\r\n                hoveredChoice = null;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function NavigateAspect(hoveredChoiceAspect, navigate){\r\n    return {\r\n        hoverIn(wrap){\r\n            hoveredChoiceAspect.resetHoveredChoice(); \r\n            hoveredChoiceAspect.setHoveredChoice(wrap);\r\n            wrap.choice.setHoverIn(true);\r\n        },\r\n        navigate: (down) => navigate(down, hoveredChoiceAspect.getHoveredChoice()), \r\n    }\r\n}","export function Wraps(wrapsCollection,  \r\n    listFacade_reset, listFacade_remove, listFacade_add) \r\n{\r\n    return {\r\n        push: (wrap) => push(wrap, wrapsCollection, listFacade_add),\r\n        insert: (key, wrap) => insert(key, wrap, wrapsCollection, listFacade_add),\r\n        remove: (key) => {\r\n            var wrap = wrapsCollection.remove(key);\r\n            listFacade_remove(wrap);\r\n            return wrap;\r\n        },\r\n        clear: () => {\r\n            wrapsCollection.reset();\r\n            listFacade_reset();\r\n        }, \r\n        dispose: () => wrapsCollection.forLoop(wrap => wrap.dispose()) \r\n    }\r\n}\r\n\r\nfunction push(wrap, wrapsCollection, listFacade_add){\r\n    wrapsCollection.push(wrap);\r\n    listFacade_add(wrap);\r\n}\r\n\r\nfunction insert(key, wrap, wrapsCollection, listFacade_add){\r\n    if (key>=wrapsCollection.getCount()) {\r\n        push(wrap, wrapsCollection, listFacade_add);\r\n    }\r\n    else {\r\n        wrapsCollection.add(wrap, key);\r\n        listFacade_add(wrap, key);\r\n    }\r\n}","export function PickButtonAspect(buttonHTML){\r\n    return {\r\n        getButtonHTML : () => buttonHTML\r\n    }\r\n}","export function BuildPickAspect(\r\n    picksDom, \r\n    pickDomFactory\r\n){\r\n    return {\r\n        buildPick(wrap, removeOnButton){\r\n            let {pickElement, attach, detach} = picksDom.createPickElement(); \r\n            let {dispose, pickDom, pickDomManagerHandlers} = pickDomFactory.create(pickElement, wrap, removeOnButton); \r\n            \r\n            pickDomManagerHandlers.updateData();\r\n            if (pickDomManagerHandlers.updateDisabled)\r\n                pickDomManagerHandlers.updateDisabled();\r\n            if (pickDomManagerHandlers.updateComponentDisabled)\r\n                pickDomManagerHandlers.updateComponentDisabled();\r\n            let pick = {\r\n                pickDom,\r\n                pickDomManagerHandlers,\r\n                pickElementAttach: attach,\r\n                dispose: () => { \r\n                    detach(); \r\n                    dispose(); \r\n                    pick.pickDomManagerHandlers = null;\r\n                    pick.pickDom = pickDom;\r\n                    pick.pickElementAttach = null;\r\n                    pick.dispose = null;\r\n                }\r\n            }\r\n            return pick;\r\n        }\r\n    }\r\n}","export function InputAspect(\r\n    filterDom,\r\n    filterManagerAspect,\r\n    fullMatchAspect\r\n    ){\r\n\r\n    return {\r\n        // overrided in SelectedOptionPlugin\r\n        processInput(){ \r\n            let filterInputValue = filterDom.getValue();\r\n            let text = filterInputValue.trim();\r\n            var isEmpty=false;\r\n            if (text == '')\r\n                isEmpty=true;\r\n            else\r\n            {\r\n                filterManagerAspect.setFilter(text.toLowerCase());\r\n            }\r\n            \r\n            if (!isEmpty)\r\n            {\r\n                if ( filterManagerAspect.getNavigateManager().getCount() == 1)\r\n                {\r\n                    // todo: move exact match to filterManager\r\n                    let fullMatchWrap =  filterManagerAspect.getNavigateManager().getHead();\r\n                    let text = filterManagerAspect.getFilter();\r\n                    if (fullMatchWrap.choice.searchText == text)\r\n                    {\r\n                        let success = fullMatchAspect.fullMatch(fullMatchWrap); \r\n                        if (success) {\r\n                            filterDom.setEmpty();\r\n                            isEmpty = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {filterInputValue, isEmpty};\r\n        }\r\n    }\r\n}","export function ResetFilterListAspect(filterDom, filterManagerAspect){\r\n    return {\r\n        forceResetFilter(){  // over in PlaceholderPlugin\r\n            filterDom.setEmpty();\r\n            filterManagerAspect.processEmptyInput(); // over in PlaceholderPlugin\r\n        }\r\n    }\r\n}\r\n\r\nexport function ResetFilterAspect(filterDom, resetFilterListAspect){\r\n    return {\r\n        resetFilter(){ // call in OptionsApiPlugin\r\n            if (!filterDom.isEmpty())  // call in Placeholder\r\n                resetFilterListAspect.forceResetFilter(); // over in Placeholder\r\n        }\r\n    }\r\n}\r\n\r\nexport function FocusInAspect(picksDom){\r\n    return {\r\n        setFocusIn(focus){ // call in OptionsApiPlugin\r\n            picksDom.setIsFocusIn(focus) // unique call, call BsAppearancePlugin\r\n            picksDom.toggleFocusStyling() // over BsAppearancePlugin\r\n        }\r\n    }\r\n}\r\n\r\n","import {composeSync} from './ToolsJs';\r\nimport {EventBinder, EventLoopProlongableFlag, EventTumbler, containsAndSelf} from './ToolsDom'\r\n\r\nexport function MultiSelectInlineLayoutAspect (\r\n        environment, filterDom, choicesDom, \r\n        choicesVisibilityAspect, \r\n        hoveredChoiceAspect, navigateAspect, filterManagerAspect,\r\n        focusInAspect, optionToggleAspect,\r\n        createPickHandlersAspect,\r\n        picksList,\r\n        inputAspect, specialPicksEventsAspect,  buildChoiceAspect, \r\n        resetLayoutAspect,\r\n\r\n        picksElementAspect,\r\n        \r\n        afterInputAspect,\r\n        disposeAspect\r\n    ) \r\n{\r\n    let choicesElement = choicesDom.choicesElement;\r\n    var window = environment.window;\r\n    var document = window.document;\r\n    var eventLoopFlag =EventLoopProlongableFlag(window); \r\n    var skipFocusout = false; // state\r\n    \r\n    function getSkipFocusout() {\r\n        return skipFocusout;\r\n    };\r\n    function resetSkipFocusout() {\r\n        skipFocusout = false;\r\n    };\r\n    function setSkipFocusout() {\r\n        skipFocusout = true;\r\n    };\r\n\r\n    // we want to escape the closing of the menu (because of focus out from) on a user's click inside the container\r\n    var skipoutMousedown = function() {\r\n        setSkipFocusout();\r\n    }\r\n\r\n    // add listeners that manages close dropdown on  click outside container\r\n    var choicesElementMousedownEventTumbler = EventTumbler(choicesElement, \"mousedown\", skipoutMousedown);\r\n    var documentMouseupEventTumbler = EventTumbler(document, \"mouseup\", documentMouseup);\r\n\r\n    var documentMouseup = function(event) {\r\n        // if we would left without focus then \"close the drop\" do not remove focus border\r\n        if (choicesElement == event.target) \r\n            filterDom.setFocus()\r\n\r\n        // if click outside container - close dropdown\r\n        else if ( !containsAndSelf(choicesElement, event.target) && !picksElementAspect.containsAndSelf(event.target)) {\r\n            resetLayoutAspect.resetLayout();\r\n            focusInAspect.setFocusIn(false);\r\n        }\r\n    }\r\n\r\n    function showChoices() {\r\n        if ( !choicesVisibilityAspect.isChoicesVisible() )\r\n        {\r\n            choicesVisibilityAspect.updatePopupLocation();\r\n            eventLoopFlag.set();\r\n            choicesVisibilityAspect.setChoicesVisible(true);\r\n            \r\n            // TODO: move to scroll plugin\r\n            choicesElement.scrollTop = 0;\r\n            \r\n            choicesElementMousedownEventTumbler.on();\r\n            documentMouseupEventTumbler.on();\r\n        }\r\n    }\r\n\r\n    function hideChoices() {\r\n        resetMouseCandidateChoice();\r\n        hoveredChoiceAspect.resetHoveredChoice();\r\n        if (choicesVisibilityAspect.isChoicesVisible())\r\n        {\r\n            // COOMENT OUT DEBUGGING popup layout\r\n            choicesVisibilityAspect.setChoicesVisible(false);\r\n            \r\n            choicesElementMousedownEventTumbler.off();\r\n            documentMouseupEventTumbler.off();\r\n        }\r\n    }\r\n\r\n    var preventDefaultClickEvent = null;\r\n\r\n    // TODO: remove setTimeout: set on start of mouse event reset on end\r\n    function skipoutAndResetMousedown(){\r\n        skipoutMousedown();\r\n        window.setTimeout(()=>resetSkipFocusout());\r\n    }\r\n\r\n    function processUncheck(uncheckOption, event){\r\n        // we can't remove item on \"click\" in the same loop iteration - it is unfrendly for 3PP event handlers (they will get detached element)\r\n        // never remove elements in the same event iteration\r\n        window.setTimeout(()=>uncheckOption())\r\n        preventDefaultClickEvent = event; // setPreventDefaultMultiSelectEvent\r\n    }\r\n\r\n    // function handleOnRemoveButton(onRemove, setSelectedFalse){\r\n    //     // processRemoveButtonClick removes the item\r\n    //     // what is a problem with calling 'remove' directly (not using  setTimeout('remove', 0)):\r\n    //     // consider situation \"MultiSelect\" on DROPDOWN (that should be closed on the click outside dropdown)\r\n    //     // therefore we aslo have document's click's handler where we decide to close or leave the DROPDOWN open.\r\n    //     // because of the event's bubling process 'remove' runs first. \r\n    //     // that means the event's target element on which we click (the x button) will be removed from the DOM together with badge \r\n    //     // before we could analize is it belong to our dropdown or not.\r\n    //     // important 1: we can't just the stop propogation using stopPropogate because click outside dropdown on the similar \r\n    //     // component that use stopPropogation will not close dropdown (error, dropdown should be closed)\r\n    //     // important 2: we can't change the dropdown's event handler to leave dropdown open if event's target is null because of\r\n    //     // the situation described above: click outside dropdown on the same component.\r\n    //     // Alternatively it could be possible to use stopPropogate but together create custom click event setting new target \r\n    //     // that belomgs to DOM (e.g. panel)\r\n\r\n\r\n    //     onRemove(event => {\r\n    //         processUncheck(setSelectedFalse, event);\r\n    //         hideChoices();\r\n    //         resetFilterAspect.resetFilter(); \r\n    //     });\r\n    // }\r\n    \r\n    function handleOnRemoveButton(setSelectedFalse){ return (event) => {\r\n        processUncheck(setSelectedFalse, event);\r\n        resetLayoutAspect.resetLayout(); \r\n    }}\r\n    \r\n    let mouseCandidateEventBinder = EventBinder();\r\n    var resetMouseCandidateChoice = () => {\r\n        mouseCandidateEventBinder.unbind();\r\n    };\r\n\r\n    var mouseOverToHoveredAndReset = (wrap) => {\r\n        \r\n        if (!wrap.choice.isHoverIn)\r\n            navigateAspect.hoverIn(wrap);\r\n        resetMouseCandidateChoice();\r\n    };\r\n \r\n    function adoptChoiceElement(wrap){\r\n        let choiceElement = wrap.choice.choiceElement;\r\n        // in chrome it happens on \"become visible\" so we need to skip it, \r\n        // for IE11 and edge it doesn't happens, but for IE11 and Edge it doesn't happens on small \r\n        // mouse moves inside the item. \r\n        // https://stackoverflow.com/questions/59022563/browser-events-mouseover-doesnt-happen-when-you-make-element-visible-and-mous\r\n        \r\n        var onChoiceElementMouseover = () => \r\n        {\r\n            if (eventLoopFlag.get() )\r\n            {\r\n                resetMouseCandidateChoice();\r\n                mouseCandidateEventBinder.bind(choiceElement, 'mousemove', ()=>mouseOverToHoveredAndReset(wrap));\r\n                mouseCandidateEventBinder.bind(choiceElement, 'mousedown', ()=>mouseOverToHoveredAndReset(wrap));\r\n            }\r\n            else\r\n            {\r\n                if (!wrap.choice.isHoverIn)\r\n                {\r\n                    // NOTE: mouseleave is not enough to guarantee remove hover styles in situations\r\n                    // when style was setuped without mouse (keyboard arrows)\r\n                    // therefore force reset manually (done inside hoverIn)\r\n                    navigateAspect.hoverIn(wrap);\r\n                }   \r\n            }\r\n        }\r\n        \r\n        // note 1: mouseleave preferred to mouseout - which fires on each descendant\r\n        // note 2: since I want add aditional info panels to the dropdown put mouseleave on dropdwon would not work\r\n        var onChoiceElementMouseleave = () => {\r\n            if (!eventLoopFlag.get()) {\r\n                hoveredChoiceAspect.resetHoveredChoice();\r\n            }\r\n        }\r\n        var overAndLeaveEventBinder = EventBinder();\r\n        overAndLeaveEventBinder.bind(choiceElement, 'mouseover',  onChoiceElementMouseover);\r\n        overAndLeaveEventBinder.bind(choiceElement, 'mouseleave', onChoiceElementMouseleave);\r\n\r\n        return overAndLeaveEventBinder.unbind;\r\n    }\r\n\r\n    \r\n\r\n\r\n    // it can be initated by 3PP functionality\r\n    // sample (1) BS functionality - input x button click - clears input\r\n    // sample (2) BS functionality - esc keydown - clears input\r\n    // and there could be difference in processing: (2) should hide the menu, then reset , when (1) should just reset without hiding.\r\n\r\n    function afterInput(){\r\n        let visibleCount = filterManagerAspect.getNavigateManager().getCount();\r\n\r\n        if (visibleCount > 0){\r\n            afterInputAspect.visible(showChoices, visibleCount);\r\n        }else{\r\n            afterInputAspect.notVisible(hideChoices);\r\n        }\r\n    }\r\n\r\n    function keyDownArrow(down) {\r\n        let wrap = navigateAspect.navigate(down);  \r\n        if (wrap)\r\n        {\r\n            // TODO: next line should be moved to planned  \"HeightAndScroll\" plugin, actual only for scrolling with keyDown functionality\r\n            eventLoopFlag.set(400); // means disable mouse handlers that set hovered choice item; arrowDown can intiate scrolling when scrolling can itiate mouse leave on hovered item; this stops it\r\n            navigateAspect.hoverIn(wrap); // !\r\n            showChoices(); \r\n        }\r\n    }\r\n\r\n    function hoveredToSelected(){\r\n        let hoveredWrap = hoveredChoiceAspect.getHoveredChoice(); \r\n        if (hoveredWrap){\r\n            let wasToggled = optionToggleAspect.toggle(hoveredWrap); \r\n            if (wasToggled) {\r\n                resetLayoutAspect.resetLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: bind it more declarative way? (compact code)\r\n    var onKeyDown = (event) => {\r\n        let keyCode = event.which;\r\n        var empty = filterDom.isEmpty();\r\n        if ([ 13,\r\n              27  // '27-esc' there is \"just in case\", I can imagine that there are user agents that do UNDO\r\n            ].indexOf(keyCode)>=0 \r\n            || (keyCode == 9 && !empty) //  otherwice there are no keyup (true at least for '9-tab'),\r\n            ) {\r\n                event.preventDefault(); \r\n            \r\n            // '13-enter'  - prevention against form's default button \r\n            // but doesn't help with bootsrap modal ESC or ENTER (close behaviour);\r\n        }\r\n        if ([ 38, 40 ].indexOf(keyCode) >= 0 )\r\n            event.preventDefault(); \r\n        if (keyCode == 8 /*backspace*/) {\r\n            // NOTE: this will process backspace only if there are no text in the input field\r\n            // If user will find this inconvinient, we will need to calculate something like this\r\n            // let isBackspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n            if (empty) {\r\n                let pick = picksList.getTail();\r\n                if (pick){ \r\n                    specialPicksEventsAspect.backSpace(pick);\r\n                }\r\n            }\r\n        }\r\n        // ---------------------------------------------------------------------------------\r\n        // NOTE: no preventDefault called in case of empty for 9-tab\r\n        else if (keyCode == 9  /*tab*/) { // NOTE: no keydown for this (without preventDefaul after TAB keyup event will be targeted another element)  \r\n            if (empty) { \r\n                hideChoices();  // hideChoices inside (and no filter reset since it is empty) \r\n            }\r\n        }\r\n        else if (keyCode == 27 /*esc*/ ) { // NOTE: forbid the ESC to close the modal (in case the nonempty or dropdown is open)\r\n            if (!empty  || choicesVisibilityAspect.isChoicesVisible())\r\n                event.stopPropagation()\r\n        }\r\n        else if (keyCode == 38) {\r\n            keyDownArrow(false); // up\r\n        }\r\n        else if (keyCode == 40) {\r\n            keyDownArrow(true); // down\r\n        }\r\n    }\r\n    var onKeyUp = (event) => {\r\n        let keyCode = event.which;\r\n        //var handler = keyUp[event.which/* key code */];\r\n        //handler();    \r\n        if (keyCode == 9 /*tab*/) {\r\n            if (choicesVisibilityAspect.isChoicesVisible()) {\r\n                keyDownArrow(true);\r\n            } else {\r\n                if (filterManagerAspect.getNavigateManager().getCount()>0){\r\n                    showChoices();\r\n                }\r\n            }\r\n        }\r\n        else if (keyCode == 13 ) {\r\n            if (choicesVisibilityAspect.isChoicesVisible()) {\r\n                hoveredToSelected();\r\n            } else {\r\n                if (filterManagerAspect.getNavigateManager().getCount()>0){\r\n                    showChoices();\r\n                }\r\n            }\r\n        }\r\n        else if (keyCode == 27) { // escape\r\n            // is it always empty (bs x can still it) \r\n            resetLayoutAspect.resetLayout();\r\n        }\r\n    }\r\n\r\n    function clickToShowChoices(event){\r\n        filterDom.setFocusIfNotTarget(event.target);\r\n        if (preventDefaultClickEvent != event) {\r\n            if (choicesVisibilityAspect.isChoicesVisible()){\r\n                hideChoices() \r\n            } else {\r\n                if (filterManagerAspect.getNavigateManager().getCount()>0)\r\n                    showChoices();\r\n            }\r\n        }\r\n        preventDefaultClickEvent=null;\r\n    }\r\n\r\n    return {\r\n        layout(){\r\n            filterDom.onFocusIn(()=>focusInAspect.setFocusIn(true));\r\n            filterDom.onFocusOut(() => { \r\n                    if (!getSkipFocusout()){ // skip initiated by mouse click (we manage it different way)\r\n                        resetLayoutAspect.resetLayout(); // if do not do this we will return to filtered list without text filter in input\r\n                        focusInAspect.setFocusIn(false);\r\n                    }\r\n                    resetSkipFocusout();\r\n                }\r\n            );\r\n                \r\n            filterDom.onInput(() => {\r\n                let {filterInputValue, isEmpty} = inputAspect.processInput();\r\n                if (isEmpty)\r\n                    filterManagerAspect.processEmptyInput();\r\n                else\r\n                    filterDom.setWidth(filterInputValue);  \r\n                eventLoopFlag.set(); // means disable mouse handlers that set hovered item; otherwise we will get \"Hover On MouseEnter\" when filter's changes should remove hover\r\n                afterInput();\r\n            });    \r\n            filterDom.onKeyDown(onKeyDown);    \r\n            filterDom.onKeyUp(onKeyUp);\r\n                \r\n            picksElementAspect.onClick(clickToShowChoices);\r\n            picksElementAspect.onMousedown(skipoutAndResetMousedown);\r\n        \r\n            resetLayoutAspect.resetLayout = composeSync(\r\n                hideChoices,\r\n                resetLayoutAspect.resetLayout // resetFilter by default\r\n            );\r\n        \r\n            let origCreatePickHandlers = createPickHandlersAspect.createPickHandlers;\r\n            createPickHandlersAspect.createPickHandlers = (wrap) => {\r\n                let pickHandlers = origCreatePickHandlers(wrap);\r\n                pickHandlers.removeOnButton = handleOnRemoveButton(pickHandlers.removeOnButton);\r\n                return pickHandlers;\r\n            } \r\n        \r\n            let origBuildChoice = buildChoiceAspect.buildChoice;\r\n            buildChoiceAspect.buildChoice = (wrap) => {\r\n                origBuildChoice(wrap);\r\n                let pickHandlers = createPickHandlersAspect.createPickHandlers(wrap);\r\n        \r\n                wrap.choice.remove = composeSync(wrap.choice.remove, () => {\r\n                    if (pickHandlers.removeAndDispose) {\r\n                        pickHandlers.removeAndDispose();\r\n                        pickHandlers.removeAndDispose=null;\r\n                    }\r\n                })\r\n                \r\n                let unbindChoiceElement = adoptChoiceElement(wrap);\r\n                wrap.choice.dispose = composeSync(unbindChoiceElement, wrap.choice.dispose);\r\n            }\r\n\r\n            disposeAspect.dispose = composeSync(disposeAspect.dispose, resetMouseCandidateChoice, () => picksElementAspect.unbind() );\r\n        }\r\n    }\r\n}\r\n","export function ResetLayoutAspect(resetFilterAspect){\r\n    return {\r\n        resetLayout(){\r\n            resetFilterAspect.resetFilter();\r\n        }\r\n    }\r\n}","\r\nexport function LoadAspect(optionsLoopAspect){\r\n    return{\r\n        load(){  // redriven in AppearancePlugin, FormRestoreOnBackwardPlugin\r\n            optionsLoopAspect.loop();\r\n        }\r\n    }\r\n}","export function CountableChoicesListInsertAspect(countableChoicesList, wrapsCollection){\r\n    return {\r\n        countableChoicesListInsert(wrap, key){\r\n            let choiceNext = wrapsCollection.getNext(key);\r\n            countableChoicesList.add(wrap, choiceNext)\r\n        }\r\n    }\r\n}","import {EventBinder, containsAndSelf} from './ToolsDom';\r\n\r\nexport function PicksElementAspect(picksElement){\r\n    var componentDisabledEventBinder = EventBinder();\r\n    var skipoutAndResetMousedownEventBinder = EventBinder();\r\n    return {\r\n        containsAndSelf(element){\r\n            return containsAndSelf(picksElement, element);\r\n        },\r\n        onClickUnbind(){\r\n            componentDisabledEventBinder.unbind();\r\n        },\r\n        onClick(handler){\r\n            componentDisabledEventBinder.bind(picksElement, \"click\",  handler);\r\n        },\r\n        onMousedown(handler){\r\n            skipoutAndResetMousedownEventBinder.bind(picksElement, \"mousedown\",  handler);\r\n        },\r\n        unbind(){\r\n            skipoutAndResetMousedownEventBinder.unbind();\r\n            componentDisabledEventBinder.unbind();\r\n        }\r\n    }\r\n}","export function AfterInputAspect(filterManagerAspect, navigateAspect, choicesVisibilityAspect, hoveredChoiceAspect){\r\n    return {\r\n        visible(showChoices, visibleCount){\r\n            let panelIsVisble = choicesVisibilityAspect.isChoicesVisible();\r\n            if (!panelIsVisble) {\r\n                  showChoices(); \r\n            }\r\n            if (visibleCount == 1) {\r\n                navigateAspect.hoverIn(filterManagerAspect.getNavigateManager().getHead())\r\n            } else {\r\n                if (panelIsVisble)\r\n                    hoveredChoiceAspect.resetHoveredChoice();\r\n            }   \r\n        },\r\n        notVisible(hideChoices){\r\n            if (choicesVisibilityAspect.isChoicesVisible()){\r\n                hideChoices();\r\n            }\r\n        }\r\n    }\r\n}","export function ShowErrorAspect(initialDom, createElementAspect){\r\n    return {\r\n        showError(error){\r\n            let errorElement = createElementAspect.createElement('SPAN'); \r\n            errorElement.style.backgroundColor = 'red';\r\n            errorElement.style.color = 'white';\r\n            errorElement.style.block = 'inline-block';\r\n            errorElement.style.padding = '0.2rem 0.5rem';\r\n            errorElement.textContent = 'BsMultiSelect ' + error.toString();\r\n            initialDom.initialElement.parentNode.insertBefore(errorElement, initialDom.initialElement.nextSibling)\r\n        }\r\n    }\r\n}","import {composeSync, List} from './ToolsJs';\r\nimport {PickDomFactory} from './PickDomFactory';\r\nimport {ChoiceDomFactory} from './ChoiceDomFactory';\r\n\r\nimport {StaticDomFactory} from './StaticDomFactory';\r\n\r\nimport {CreateElementAspect} from './CreateElementAspect';\r\n\r\nimport {PicksDomFactory} from './PicksDomFactory';\r\nimport {FilterDomFactory} from './FilterDomFactory';\r\n\r\nimport {ChoicesDomFactory} from './ChoicesDomFactory';\r\nimport {ChoicesVisibilityAspect} from './ChoicesVisibilityAspect';\r\nimport {SpecialPicksEventsAspect} from './SpecialPicksEventsAspect';\r\n \r\nimport {ComponentPropertiesAspect, TriggerAspect, OnChangeAspect} from './ComponentPropertiesAspect';\r\nimport {OptionsAspect, OptionPropertiesAspect} from './OptionsAspect';\r\n\r\nimport {ChoicesEnumerableAspect } from './ChoicesEnumerableAspect'\r\nimport {FilterManagerAspect, NavigateManager, FilterPredicateAspect} from './FilterManagerAspect'\r\nimport {BuildAndAttachChoiceAspect, BuildChoiceAspect} from './BuildChoiceAspect'\r\nimport {OptionsLoopAspect, OptionAttachAspect} from './OptionsLoopAspect'\r\n\r\nimport {UpdateDataAspect } from './UpdateDataAspect'\r\nimport {UpdateAspect } from './UpdateDataAspect'\r\nimport {CreateWrapAspect, CreateChoiceBaseAspect, OptionToggleAspect, CreatePickHandlersAspect, RemovePickAspect, \r\n    AddPickAspect, FullMatchAspect, ChoiceClickAspect, IsChoiceSelectableAspect, ProducePickAspect} from './CreateWrapAspect.js'\r\nimport {NavigateAspect, HoveredChoiceAspect} from './NavigateAspect'\r\nimport {Wraps} from './Wraps'\r\n\r\nimport {PickButtonAspect} from './PickButtonAspect'\r\n\r\nimport {BuildPickAspect} from './BuildPickAspect'\r\nimport {InputAspect} from './InputAspect'\r\nimport {ResetFilterAspect, FocusInAspect, ResetFilterListAspect} from './ResetFilterListAspect'\r\n\r\nimport {MultiSelectInlineLayoutAspect} from './MultiSelectInlineLayoutAspect'\r\n\r\nimport {ResetLayoutAspect} from './ResetLayoutAspect'\r\n\r\nimport {LoadAspect} from './LoadAspect'\r\nimport {DoublyLinkedList, ArrayFacade} from './ToolsJs'\r\nimport {CountableChoicesListInsertAspect} from './CountableChoicesListInsertAspect'\r\n\r\nimport {PicksElementAspect} from './PicksElementAspect'\r\nimport {AfterInputAspect} from './AfterInputAspect'\r\n\r\nimport {ShowErrorAspect} from './ShowErrorAspect'\r\n\r\n/// environment - common for many; configuration for concreate\r\nexport function BsMultiSelect(element, environment, pluginManager, configuration){\r\n    let { css, \r\n          getDisabled,\r\n          options, \r\n          getText,\r\n          pickButtonHTML,\r\n          containerClass\r\n        } = configuration;\r\n    \r\n    let initialDom = {initialElement: element};\r\n    let createElementAspect = CreateElementAspect(name => environment.window.document.createElement(name), (element, html) => element.innerHTML = html );\r\n    let showErrorAspect = ShowErrorAspect(initialDom, createElementAspect);\r\n    try{\r\n        let disposeAspect = {dispose(){}};\r\n        let triggerAspect = TriggerAspect(element, environment.trigger);\r\n        let onChangeAspect = OnChangeAspect(triggerAspect, 'dashboardcode.multiselect:change');\r\n        let componentPropertiesAspect = ComponentPropertiesAspect(getDisabled??(() => false));\r\n        let optionsAspect = OptionsAspect(options); \r\n        let optionPropertiesAspect = OptionPropertiesAspect(getText);\r\n        let isChoiceSelectableAspect = IsChoiceSelectableAspect();\r\n        let createWrapAspect       = CreateWrapAspect();\r\n        let createChoiceBaseAspect = CreateChoiceBaseAspect(optionPropertiesAspect);\r\n        \r\n        let addPickAspect = AddPickAspect();\r\n        let removePickAspect = RemovePickAspect();\r\n\r\n        let wrapsCollection = ArrayFacade();\r\n\r\n        let countableChoicesList = DoublyLinkedList(\r\n            (wrap)=>wrap.choice.itemPrev, \r\n            (warp, v)=>warp.choice.itemPrev=v, \r\n            (wrap)=>wrap.choice.itemNext, \r\n            (wrap, v)=>wrap.choice.itemNext=v\r\n        );\r\n        \r\n        let countableChoicesListInsertAspect = CountableChoicesListInsertAspect(countableChoicesList, wrapsCollection);\r\n\r\n        let choicesEnumerableAspect = ChoicesEnumerableAspect(countableChoicesList, wrap=>wrap.choice.itemNext)\r\n        \r\n        let filteredChoicesList = DoublyLinkedList(\r\n            (wrap)=>wrap.choice.filteredPrev, \r\n            (wrap, v)=>wrap.choice.filteredPrev=v, \r\n            (wrap)=>wrap.choice.filteredNext, \r\n            (wrap, v)=>wrap.choice.filteredNext=v\r\n        );\r\n        \r\n        let emptyNavigateManager = NavigateManager(\r\n            countableChoicesList,\r\n            (wrap)=>wrap.choice.itemPrev,\r\n            (wrap)=>wrap.choice.itemNext \r\n\r\n        ); \r\n        let filteredNavigateManager = NavigateManager(\r\n            filteredChoicesList, \r\n            (wrap)=>wrap.choice.filteredPrev,\r\n            (wrap)=>wrap.choice.filteredNext ); \r\n\r\n        let filterPredicateAspect = FilterPredicateAspect()\r\n\r\n        let filterManagerAspect = FilterManagerAspect(\r\n            emptyNavigateManager,\r\n            filteredNavigateManager,\r\n\r\n            filteredChoicesList, \r\n            choicesEnumerableAspect,\r\n            filterPredicateAspect\r\n        );\r\n\r\n        let hoveredChoiceAspect = HoveredChoiceAspect()\r\n        let navigateAspect = NavigateAspect(hoveredChoiceAspect, \r\n            (down, hoveredChoice)=>filterManagerAspect.getNavigateManager().navigate(down, hoveredChoice));\r\n        let picksList = List();\r\n        let wraps = Wraps(\r\n            wrapsCollection,\r\n            ()=>countableChoicesList.reset(), \r\n            (w)=>countableChoicesList.remove(w),\r\n            (w, key)=>countableChoicesListInsertAspect.countableChoicesListInsert(w, key));\r\n\r\n        let picksDomFactory   = PicksDomFactory  (css, createElementAspect);\r\n        let filterDomFactory  = FilterDomFactory (css, createElementAspect);\r\n        let choicesDomFactory = ChoicesDomFactory(css, createElementAspect);\r\n\r\n        let pickButtonAspect  = PickButtonAspect(pickButtonHTML);\r\n\r\n        let pickDomFactory    = PickDomFactory   (css, createElementAspect, optionPropertiesAspect, pickButtonAspect); // overrided in CustomPickStylingsPlugin, DisableComponentPlugin\r\n        let choiceDomFactory  = ChoiceDomFactory (css, createElementAspect, optionPropertiesAspect); // overrided in CustomChoicesStylingsPlugin, HighlightPlugin\r\n        \r\n        let staticDomFactory  = StaticDomFactory(\r\n            createElementAspect, \r\n            choicesDomFactory, \r\n            filterDomFactory, \r\n            picksDomFactory, \r\n            initialDom, \r\n            containerClass\r\n            );\r\n\r\n        let eventHandlers =  pluginManager.createHandlers();\r\n        \r\n        // TODO: union to events or create event bus\r\n        eventHandlers.plugStaticDom({\r\n            environment, configuration, disposeAspect,\r\n            initialDom, showErrorAspect,\r\n            triggerAspect, onChangeAspect, componentPropertiesAspect, \r\n            countableChoicesList, countableChoicesListInsertAspect, optionPropertiesAspect, createElementAspect,\r\n            wrapsCollection, choicesEnumerableAspect, filteredChoicesList, \r\n            filterPredicateAspect, isChoiceSelectableAspect,  \r\n        \r\n            hoveredChoiceAspect, navigateAspect, \r\n        \r\n            choicesDomFactory, filterDomFactory, picksDomFactory, \r\n            pickDomFactory, choiceDomFactory, \r\n        \r\n            filterManagerAspect,\r\n        \r\n            optionsAspect, createWrapAspect, createChoiceBaseAspect, \r\n            picksList, wraps, addPickAspect, removePickAspect,\r\n\r\n            staticDomFactory\r\n        }); // apply selectElement support;  \r\n\r\n        // TODO: to staticManager\r\n        let {staticManager, staticDom, filterDom, picksDom, choicesDom} = staticDomFactory.createStaticDom(); // overrided in SelectElementPlugin\r\n\r\n        // after this we can use staticDom (means generated DOM elements) in plugin construtctor, what simplifies parameters passing a lot   \r\n\r\n        let specialPicksEventsAspect = SpecialPicksEventsAspect();\r\n\r\n        let choicesVisibilityAspect = ChoicesVisibilityAspect(choicesDom.choicesElement);\r\n        let resetFilterListAspect = ResetFilterListAspect(filterDom, filterManagerAspect);\r\n        let resetFilterAspect =  ResetFilterAspect(filterDom, resetFilterListAspect);\r\n\r\n        let focusInAspect = FocusInAspect(picksDom);\r\n        \r\n        let buildPickAspect = BuildPickAspect(picksDom, pickDomFactory);\r\n        \r\n        let producePickAspect = ProducePickAspect(picksList, removePickAspect, buildPickAspect);\r\n        let createPickHandlersAspect = CreatePickHandlersAspect(producePickAspect);\r\n        \r\n        let optionToggleAspect  = OptionToggleAspect(createPickHandlersAspect, addPickAspect);\r\n        let fullMatchAspect = FullMatchAspect(createPickHandlersAspect, addPickAspect);\r\n        let inputAspect = InputAspect(filterDom, filterManagerAspect, fullMatchAspect);    \r\n        let choiceClickAspect = ChoiceClickAspect(optionToggleAspect, filterDom);\r\n        \r\n        let buildChoiceAspect = BuildChoiceAspect(choicesDom, choiceDomFactory, choiceClickAspect);\r\n        \r\n        let buildAndAttachChoiceAspect =  BuildAndAttachChoiceAspect(buildChoiceAspect);\r\n        let resetLayoutAspect = ResetLayoutAspect(resetFilterAspect);\r\n\r\n        let optionAttachAspect = OptionAttachAspect(createWrapAspect, createChoiceBaseAspect, buildAndAttachChoiceAspect, wraps);\r\n        let optionsLoopAspect = OptionsLoopAspect(optionsAspect, optionAttachAspect);\r\n        let updateDataAspect = UpdateDataAspect(choicesDom, wraps, picksList, optionsLoopAspect, resetLayoutAspect);\r\n        let updateAspect = UpdateAspect(updateDataAspect);\r\n\r\n        let loadAspect = LoadAspect(optionsLoopAspect);\r\n\r\n        let picksElementAspect = PicksElementAspect(picksDom.picksElement);\r\n        let afterInputAspect = AfterInputAspect(filterManagerAspect, navigateAspect, choicesVisibilityAspect, hoveredChoiceAspect);\r\n\r\n        let multiSelectInlineLayoutAspect =  MultiSelectInlineLayoutAspect(\r\n            environment, filterDom, choicesDom, \r\n            choicesVisibilityAspect, \r\n            hoveredChoiceAspect, navigateAspect, filterManagerAspect,\r\n            focusInAspect, optionToggleAspect,\r\n            createPickHandlersAspect,\r\n            picksList,\r\n            inputAspect, specialPicksEventsAspect,  buildChoiceAspect, \r\n            resetLayoutAspect, \r\n            picksElementAspect,\r\n            afterInputAspect,\r\n            disposeAspect\r\n        );\r\n        \r\n        eventHandlers.layout({\r\n            staticDom, picksDom, choicesDom, filterDom, resetLayoutAspect, \r\n            choicesVisibilityAspect, staticManager, buildChoiceAspect, optionToggleAspect,  choiceClickAspect, \r\n            buildAndAttachChoiceAspect, optionsLoopAspect, optionAttachAspect,\r\n            buildPickAspect, producePickAspect, createPickHandlersAspect, inputAspect, resetFilterListAspect, resetFilterAspect, \r\n            specialPicksEventsAspect,\r\n            resetLayoutAspect, focusInAspect, \r\n            loadAspect, updateDataAspect, updateAspect, \r\n            fullMatchAspect,\r\n            picksElementAspect, afterInputAspect,\r\n            multiSelectInlineLayoutAspect \r\n        });\r\n        multiSelectInlineLayoutAspect.layout(); // TODO: to staticManager\r\n\r\n        eventHandlers.append();\r\n\r\n        let api = {component: \"BsMultiSelect.api\"} // key to use in memory leak analyzes\r\n        eventHandlers.buildApi(api);\r\n\r\n        api.updateData = () => { \r\n            updateDataAspect.updateData();\r\n        };\r\n        api.update = () => {\r\n            updateAspect.update()\r\n        }\r\n        // TODO api.updateOption = (key) => {/* all updates: selected, disabled, hidden, text */}\r\n\r\n        api.dispose = composeSync(\r\n            resetLayoutAspect.resetLayout,\r\n            ()=>{disposeAspect.dispose()},\r\n            eventHandlers.dispose, \r\n            ()=>{picksList.forEach(pick=>pick.dispose());},\r\n            wraps.dispose,\r\n            staticManager.dispose);\r\n        \r\n        // after this we can pass aspects methods call without wrapping - there should be no more overridings. TODO freeze aspects?        \r\n        staticManager.appendToContainer();\r\n\r\n        loadAspect.load();\r\n        return api;\r\n    } catch(error) {\r\n        showErrorAspect.showError(error);\r\n        throw error;\r\n    }\r\n}\r\n","import {extendIfUndefined} from './ToolsJs';\r\n\r\nfunction parseEventHandler(key, eventHandler, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes){\r\n    if (eventHandler) {\r\n        if (eventHandler.plugStaticDom)\r\n            plugStaticDoms.push({key, value:eventHandler.plugStaticDom});\r\n        if (eventHandler.preLayout)\r\n            preLayouts.push({key, value:eventHandler.preLayout});\r\n        if (eventHandler.layout)\r\n            layouts.push({key, value:eventHandler.layout});\r\n        if (eventHandler.append)\r\n            appends.push({key, value:eventHandler.append});\r\n        if (eventHandler.buildApi)\r\n            buildApis.push({key, value:eventHandler.buildApi});\r\n        if (eventHandler.dispose)\r\n            disposes.push({key, value:eventHandler.dispose});\r\n    }\r\n}\r\n\r\nexport function ComposePluginManagerFactory(plugins, defaults, environment){ \r\n    let plugedList = [];\r\n    let mergeList = [];\r\n    for(let i = 0; i<plugins.length; i++){\r\n        let pluged =  plugins[i].value(defaults);\r\n        if (pluged){\r\n            if (pluged.plug)\r\n                plugedList.push({key:plugins[i].key, value:pluged.plug})\r\n            if (pluged.merge)\r\n                mergeList.push({key:plugins[i].key, value:pluged.merge})\r\n        }\r\n    }\r\n    \r\n    return (configuration, settings, inlineBuildAspects) => {\r\n        let buildAspectsList = [];\r\n        for(let i = 0; i<mergeList.length; i++){\r\n            let merge = mergeList[i].value\r\n            if (merge){\r\n                merge(configuration, settings)\r\n            }\r\n        }\r\n        for(let j = 0; j<plugedList.length; j++){\r\n            let buildAspects = plugedList[j].value(configuration);\r\n            if (buildAspects) {\r\n                buildAspectsList.push({key:plugedList[j].key, value:buildAspects})\r\n            }\r\n        }\r\n        if (inlineBuildAspects)\r\n            buildAspectsList.push({key:\"\", value:inlineBuildAspects})\r\n        return PluginManager(environment, buildAspectsList);\r\n    };\r\n}\r\n\r\nexport function PluginManager(environment, buildAspectsList){\r\n    let aspects = {environment};\r\n    let createHandlers = (newAspects)=> {\r\n        extendIfUndefined(aspects, newAspects)\r\n\r\n        var plugStaticDoms = [];\r\n        var preLayouts = [];\r\n        var layouts = [];\r\n        var appends = [];\r\n        var buildApis = [];\r\n        let disposes = [];\r\n        for(let k = 0; k<buildAspectsList.length; k++){\r\n            let eventHandler = buildAspectsList[k].value(aspects);\r\n            parseEventHandler(buildAspectsList[k].key, eventHandler, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n        }\r\n\r\n        return  {\r\n            plugStaticDom(newAspects){\r\n                extendIfUndefined(aspects, newAspects);\r\n                for(let i = 0; i<plugStaticDoms.length; i++){\r\n                    var eventHandler = plugStaticDoms[i].value?.();\r\n                    parseEventHandler(plugStaticDoms[i].key, eventHandler, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n                }\r\n            },\r\n            layout(newAspects){\r\n                extendIfUndefined(aspects, newAspects);\r\n                for(let i = 0; i<preLayouts.length; i++){\r\n                    let eventHandler = preLayouts[i].value?.();\r\n                    parseEventHandler(preLayouts[i].key, eventHandler, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n                }\r\n                for(let j = 0; j<layouts.length; j++){\r\n                    let eventHandler = layouts[j].value?.();\r\n                    parseEventHandler(layouts[j].key, eventHandler, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n                }\r\n            },\r\n            append(){\r\n                for(let i = 0; i<appends.length; i++){\r\n                    var eventHandler = appends[i].value?.();\r\n                    parseEventHandler(appends[i].key, eventHandler, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n                }\r\n            },\r\n            buildApi(api){\r\n                for(let i = 0; i<buildApis.length; i++){\r\n                    var eventHandler = buildApis[i].value?.(api);\r\n                    parseEventHandler(buildApis[i].key, eventHandler, plugStaticDoms, preLayouts, layouts, appends, buildApis, disposes);\r\n                }\r\n            },\r\n            dispose(){\r\n                for(let i = 0; i<disposes.length; i++){\r\n                    disposes[i].value?.();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        aspects,\r\n        createHandlers\r\n    };\r\n}","const transformStyles = [\r\n    {old:'selectedPanelDisabledBackgroundColor', opt:'picks_disabled', style:\"backgroundColor\"},\r\n    {old:'selectedPanelFocusValidBoxShadow', opt:'picks_focus_valid', style:\"boxShadow\"},\r\n    {old:'selectedPanelFocusInvalidBoxShadow', opt:'picks_focus_invalid', style:\"boxShadow\"},\r\n    {old:'selectedPanelDefMinHeight', opt:'picks_def', style:\"minHeight\"},\r\n    {old:'selectedPanelLgMinHeight', opt:'picks_lg', style:\"minHeight\"},\r\n    {old:'selectedPanelSmMinHeight', opt:'picks_sm', style:\"minHeight\"},\r\n    {old:'selectedItemContentDisabledOpacity', opt:'choiceLabel_disabled', style:\"opacity\"}\r\n]\r\n\r\nconst transformClasses = [\r\n    {old:'dropDownMenuClass', opt:'choices'},\r\n    {old:'dropDownItemClass', opt:'choice'},\r\n    {old:'dropDownItemHoverClass', opt:'choice_hover'},\r\n    {old:'selectedPanelClass', opt:'picks'},\r\n    {old:'selectedItemClass', opt:'pick'},\r\n    {old:'removeSelectedItemButtonClass', opt:'pickButton'},\r\n    {old:'filterInputItemClass', opt:'pickFilter'},\r\n    {old:'filterInputClass', opt:'filterInput'},\r\n    {old:'selectedPanelFocusClass', opt:'picks_focus'},\r\n    {old:'selectedPanelDisabledClass', opt:'picks_disabled'},\r\n    {old:'selectedItemContentDisabledClass', opt:'pick_disabled'}\r\n]\r\n\r\nexport function adjustLegacySettings(settings){\r\n    if (!settings.css)\r\n        settings.css={}\r\n    var css =settings.css;\r\n\r\n    if (!settings.cssPatch)\r\n        settings.cssPatch={}\r\n    var cssPatch =settings.cssPatch;\r\n\r\n    if (settings.selectedPanelFocusBorderColor || settings.selectedPanelFocusBoxShadow){\r\n        console.log(\"DashboarCode.BsMultiSelect: selectedPanelFocusBorderColor and selectedPanelFocusBoxShadow are depricated, use - cssPatch:{picks_focus:{borderColor:'myValue', boxShadow:'myValue'}}\");\r\n        if(!cssPatch.picks_focus){\r\n            cssPatch.picks_focus = {boxShadow: settings.selectedPanelFocusBoxShadow, borderColor: settings.selectedPanelFocusBorderColor}\r\n        }\r\n        delete settings.selectedPanelFocusBorderColor;\r\n        delete settings.selectedPanelFocusBoxShadow;\r\n    }\r\n\r\n    transformStyles.forEach(\r\n        (i)=>{\r\n            if (settings[i.old]){\r\n                console.log(`DashboarCode.BsMultiSelect: ${i.old} is depricated, use - cssPatch:{${i.opt}:{${i.style}:'myValue'}}`);\r\n                if(!settings[i.opt]){\r\n                    let opt = {}\r\n                    opt[i.style] = settings[i.old]\r\n                    settings.cssPatch[i.opt]=opt;\r\n                }\r\n                delete settings[i.old];\r\n            }\r\n        }\r\n    )\r\n    \r\n    transformClasses.forEach( (i) => {\r\n        if (settings[i.old]){\r\n            console.log(`DashboarCode.BsMultiSelect: ${i.old} is depricated, use - css:{${i.opt}:'myValue'}`);\r\n            if(!css[i.opt]){\r\n                css[i.opt]= settings[i.old]\r\n            }\r\n            delete settings[i.old];\r\n        }\r\n    })\r\n    \r\n    if (settings.inputColor){\r\n        console.log(\"DashboarCode.BsMultiSelect: inputColor is depricated, remove parameter\");\r\n        delete settings.inputColor;\r\n    }\r\n\r\n    if (settings.useCss){\r\n        console.log(\"DashboarCode.BsMultiSelect: 'useCss: true' is depricated, use - 'useCssPatch: false'\");\r\n        if(!css.pick_disabled){\r\n            settings.useCssPatch = !settings.useCss\r\n        }\r\n        delete settings.useCss;\r\n    }  \r\n\r\n    if (settings.getIsValid || settings.getIsInValid){\r\n        throw \"DashboarCode.BsMultiSelect: parameters getIsValid and getIsInValid are depricated and removed, use - getValidity that should return (true|false|null) \"\r\n    } \r\n}","import {BsMultiSelect} from './BsMultiSelect'\r\nimport {ComposePluginManagerFactory} from './PluginManager'\r\n\r\nimport {adjustLegacySettings} from './BsMultiSelectDepricatedParameters'\r\n\r\nimport {extendIfUndefined} from './ToolsJs'\r\n\r\nimport {createCss} from './ToolsStyling'\r\n\r\n// TODO: remove environment - replace it with plugins\r\n// TODO: defaultCss should come together with DomFactories and Layout \r\nexport function MultiSelectBuilder(environment, plugins, defaultCss) \r\n{\r\n    const defaults = {containerClass: \"dashboardcode-bsmultiselect\", css: defaultCss}\r\n    \r\n    var pluginManagerFactory = ComposePluginManagerFactory(plugins, defaults, environment);\r\n\r\n    /*  NOTE: about namings\r\n        defaults - defaults for module \r\n        setting - object that could modify defaults (not just overwrite)\r\n        options - configuration \"generalization\": can be buildConfiguration function or settings\r\n        configuration - for control instance\r\n    */\r\n    let create = (element, options) => { \r\n        if (options && options.plugins)\r\n            console.log(\"DashboarCode.BsMultiSelect: 'options.plugins' is depricated, use - MultiSelectBuilder(environment, plugins) instead\");\r\n        \r\n        let buildConfiguration;\r\n        let settings;\r\n        if (options instanceof Function) {\r\n            buildConfiguration = options;\r\n            settings = null;\r\n        } else {\r\n            buildConfiguration = options?.buildConfiguration;\r\n            settings = options;\r\n        }\r\n        if (settings){\r\n            adjustLegacySettings(settings);\r\n        }\r\n        let configuration = {};\r\n        \r\n        configuration.css = createCss(defaults.css, settings?.css);\r\n        \r\n        extendIfUndefined(configuration, settings);\r\n        // next line: merging of cssPatch will be delayed to the CssPatchPlugin merge handler\r\n        extendIfUndefined(configuration, defaults); \r\n        let inlineBuildAspectsList = buildConfiguration?.(element, configuration); \r\n        // next line merges settings.cssPatch and defaults.cssPatch also merge defaults.css and defaults.cssPatch \r\n        var pluginManager = pluginManagerFactory(configuration, settings, inlineBuildAspectsList); \r\n        // now we can freeze configuration object\r\n        Object.freeze(configuration);\r\n        let multiSelect = BsMultiSelect(element, environment, pluginManager, configuration); \r\n        return multiSelect;\r\n    }\r\n    \r\n    return {create, defaultSettings: defaults}\r\n}","import {multiSelectPlugins, picksPlugins, allPlugins} from './PluginSet'\r\nimport {shallowClearClone, ObjectValuesEx} from './ToolsJs'\r\nimport {utilities} from './ToolSet'\r\nimport {MultiSelectBuilder} from './MultiSelectBuilder'\r\n\r\nexport function ModuleFactory(environment, customizationPlugins, defaultCss){\r\n    if (!environment.trigger)\r\n        environment.trigger = (e, name) => e.dispatchEvent(new environment.window.Event(name))\r\n\r\n    if (!environment.isIE11)\r\n        environment.isIE11 = !!environment.window.MSInputMethodContext && !!environment.window.document.documentMode;\r\n\r\n    let multiSelectPluginsObj = shallowClearClone(customizationPlugins, multiSelectPlugins);\r\n    let pluginsArray = ObjectValuesEx(multiSelectPluginsObj);\r\n    let {create: BsMultiSelect, BsMultiSelectDefault} = MultiSelectBuilder(environment, pluginsArray, defaultCss) \r\n    BsMultiSelect.Default = BsMultiSelectDefault;\r\n    \r\n    let picksPluginsObj = shallowClearClone(customizationPlugins, picksPlugins);\r\n    let picksPluginsArray = ObjectValuesEx(picksPluginsObj);\r\n    let {create: BsPicks, BsPicksDefault} = MultiSelectBuilder(environment, picksPluginsArray, defaultCss) \r\n    BsPicks.Default = BsPicksDefault; \r\n\r\n    return {\r\n        BsMultiSelect,\r\n        BsPicks,\r\n        MultiSelectTools: {MultiSelectBuilder, plugins: shallowClearClone(customizationPlugins, allPlugins), defaultCss, utilities} \r\n    }\r\n}\r\n\r\n\r\n// TEST\r\n// function areValidElements(...args) {\r\n//     const result = Object.values(obj);\r\n//     return !args.some(\r\n//       (element) =>\r\n//         !(element && typeof element.getBoundingClientRect === 'function')\r\n//     );\r\n// }\r\n\r\n// function ModuleFactory(environment) {\r\n//     if (!environment.trigger)\r\n//         environment.trigger = (e, name) => e.dispatchEvent(new environment.window.Event(name))\r\n\r\n//     let pluginsArray = ObjectValues(shallowClearClone({Bs5Plugin}, multiSelectPlugins));\r\n//     let {create: BsMultiSelect, BsMultiSelectDefault} = MultiSelectBuilder(environment, pluginsArray) \r\n//     BsMultiSelect.Default = BsMultiSelectDefault;\r\n    \r\n//     let picksPluginsArray = ObjectValues(shallowClearClone({Bs5Plugin}, picksPlugins));\r\n//     let {create: BsPicks, BsPicksDefault} = MultiSelectBuilder(environment, picksPluginsArray) \r\n//     BsPicks.Default = BsPicksDefault;\r\n\r\n//     return {\r\n//         BsMultiSelect,\r\n//         BsPicks,\r\n//         MultiSelectTools: {MultiSelectBuilder, plugins: shallowClearClone({Bs5Plugin}, allPlugins), utilities} \r\n//     }\r\n// }\r\n","import {createDefaultCssBs5} from \"./DomFactories\";\r\nimport {Bs4PluginSet} from './PluginSet'\r\nimport {ModuleFactory as ModuleFactoryImpl} from \"./ModuleFactory\";\r\n\r\nconst defaultCss = createDefaultCssBs5();\r\n\r\nfunction ModuleFactory(environment){\r\n    return ModuleFactoryImpl(\r\n        environment,\r\n        Bs4PluginSet,\r\n        defaultCss\r\n    );\r\n} \r\n\r\nfunction legacyConstructor(element, environment, settings){\r\n    console.log(\"DashboarCode.BsMultiSelect: 'BsMultiSelect' is depricated, use - ModuleFactory(environment).BsMultiSelect(element, settings)\");\r\n    var {BsMultiSelect} =  ModuleFactory(environment);\r\n    var bsMultiSelect = BsMultiSelect(element, settings);\r\n    return bsMultiSelect;\r\n}\r\n\r\nexport  { \r\n    legacyConstructor as BsMultiSelect,\r\n    ModuleFactory\r\n}"]}